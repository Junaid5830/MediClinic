@model MediClinic.Models.AppointmentViewModel
@using  MediClinic.Services.Interfaces.SessionManager
@inject ISessionManager _sessionManager
@{
    ViewData["Title"] = "ProviderCalendar";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //var patientInfoId = ViewContext.RouteData.Values["id"];
    var ProviderID = _sessionManager.GetProviderInfoId();
    var doctorName = _sessionManager.GetProviderName();
    var roleId = _sessionManager.GetRoleId();
    var currUserId = _sessionManager.GetUserId();
}
@section styles{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.0/jquery-confirm.min.css">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.1.0-beta.1/css/select2.min.css" />
    <link href="~/app-assets/base/jquery-ui.css" rel="stylesheet" />
    <link href="~/css/timePicker.css" rel="stylesheet" />


    <style>
        #loading {
            width: 100%;
            height: 100%;
            top: 120px;
            position: absolute;
            display: block;
            opacity: 1;
            background-color: #fff;
            z-index: 99;
            text-align: center;
        }

        #loading-image {
            position: absolute;
            top: 100px;
            left: 240px;
            z-index: 100;
        }

        #loading > div {
            margin-top: 25%;
            width: 18px;
            height: 18px;
            background-color: #333;
            border-radius: 100%;
            display: inline-block;
            -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;
            animation: sk-bouncedelay 1.4s infinite ease-in-out both;
        }

        #loading .bounce1 {
            -webkit-animation-delay: -0.32s;
            animation-delay: -0.32s;
        }

        #loading .bounce2 {
            -webkit-animation-delay: -0.16s;
            animation-delay: -0.16s;
        }

        @@-webkit-keyframes sk-bouncedelay {
            0%, 80%, 100% {
                -webkit-transform: scale(0)
            }

            40% {
                -webkit-transform: scale(1.0)
            }
        }

        @@keyframes sk-bouncedelay {
            0%, 80%, 100% {
                -webkit-transform: scale(0);
                transform: scale(0);
            }

            40% {
                -webkit-transform: scale(1.0);
                transform: scale(1.0);
            }
        }

        .Hunter-clean-btn {
            display: none;
        }

        .jc-bs3-row.row.justify-content-md-center.justify-content-sm-center.justify-content-xs-center.justify-content-lg-center {
            width: 25%;
        }

        .select2-container .select2-selection--single {
            height: 49px !important;
        }

        .select2-container--default .select2-selection--single .select2-selection__rendered {
            line-height: 44px !important
        }

        .select2-container--default .select2-selection--single .select2-selection__arrow {
            height: 44px;
        }

        .select-wrapper input.select-dropdown {
            display: none !important;
        }

        .select2 {
            width: 100% !important;
        }

        .modal {
            background-color: #fff !important
        }

        #AppointmentModal {
            width: 65% !important;
            background-color: #fff !important
        }

            #AppointmentModal .tabs .tab {
                margin-right: 5px !important;
            }

                #AppointmentModal .tabs .tab a {
                    border: 1px solid #5287e6 !important;
                }

        ul.ui-autocomplete {
            z-index: 999999 !important;
        }

        .display_modal {
            width: 45% !important;
        }

        .modal h6 span {
            color: #6b6f82 !important
        }

        #slide-out-right {
            overflow: auto !important
        }

        .abc {
            width: 88% !important;
            border-top-right-radius: 0px !important;
            border-bottom-right-radius: 0px !important
        }

        .current .custom-combobox {
            width: 94% !important
        }

        .custom-combobox {
            width: 93% !important
        }

        .sidenav a {
            height: auto !important
        }

        .custom-combobox {
            position: relative;
            display: inline-block;
        }

        .custom-combobox-toggle {
            position: absolute;
            top: 0;
            bottom: 0;
            margin-left: -1px;
            padding: 0;
        }

        .form-add-btn {
            float: right !important
        }

        .custom-combobox-input {
            margin: 0;
            padding: 5px 10px;
        }

        .ui-widget .select-wrapper .select-dropdown, .select-wrapper .caret {
            display: none
        }

        table.table-option tbody tr td ul.dropdown-content {
            height: auto !important
        }

        .clockpicker-button {
            line-height: 0px;
        }
        /* .ExactAppointment {
            margin-bottom: 25% !important;
        }*/

        /* .InBetweenAppointment {
            margin-bottom: 35% !important;
        }*/

        .addNewFieldInBetweenAppointment {
            margin-bottom: 30% !important;
        }

        #breadcrumbs-wrapper {
            background: unset !important;
        }

            #breadcrumbs-wrapper.breadcrumbs-bg-image .breadcrumbs-title {
                color: #6666ef;
            }

        span.avatar-status.avatar-50 > i, span.secondary-content.medium-small {
            display: none;
        }

        .margin-top-5 {
            margin-top: 5px;
        }

        span.avatar-status.avatar-50 {
            padding-right: 10px;
        }


        .fc-toolbar .fc-center h2 {
            font-size: 3rem !important;
        }

        .btn i {
            font-size: 1rem;
        }

        .search-box {
            width: 78% !important;
            height: 24px !important;
            padding: 8px 15px 8px 34px !important;
            /*margin-left: 19px !important;*/
        }

        .set_btnpro {
            padding: 0 1rem !important;
            margin-right: 5% !important;
        }

        .set_names {
            /*padding:10px;*/
            /*overflow-y: scroll !important;*/
            color: black;
            overflow-x: hidden;
            height: 204px;
            margin-top: 8px;
        }

            .set_names p {
                color: black !important;
            }

        .card2 {
            height: 220px !important;
        }

        .set_listheading {
            font-size: 1.45rem !important;
            padding-left: 7px !important;
        }

        .set_select .input-field .select-wrapper input.select-dropdown {
            border: 1px solid #3248d1 !important;
            border-radius: 40px !important;
            height: 2rem !important;
            margin: 8px 0 0px 0 !important;
            color: #3248d1 !important;
            text-align-last: center !important;
            font-size: 12px;
        }




        .dot {
            height: 10px;
            width: 10px;
            border-radius: 50%;
            display: inline-block;
        }

        .dot-squre {
            height: 13px;
            width: 13px;
            border-radius: 50%;
            display: inline-block;
        }

        .set_r span::after {
            height: 10px;
            width: 10px;
            border-radius: 50%;
            display: inline-block;
        }


        .select-dropdown li img {
            float: left;
            width: 20px !important;
            height: 20px !important;
            margin: 17px 15px !important;
        }

        .select-wrapper .caret {
            fill: #6b6f82 !important;
        }

        .fc-monthViewButton-button {
            margin-left: 10px !important;
        }

        /*.fc-monthListViewButton-button {
            color: #000;
            position: absolute;
            margin-left: 2px;
            margin-top: 10px;
            width: 17px;
            height: 1px;
            background-color: currentColor;
        }

            .fc-monthListViewButton-button:before {
                content: '';
                position: absolute;
                top: -5px;
                left: 0;
                width: 17px;
                height: 1px;
                background-color: currentColor;
            }

            .fc-monthListViewButton-button:after {
                content: '';
                position: absolute;
                top: 5px;
                left: 0;
                width: 17px;
                height: 1px;
                background-color: currentColor;
            }*/
        @@media only screen and (min-width: 601px) {
            .datepicker-controls, .datepicker-table, .datepicker-footer {
                width: 226px !important;
            }

            .datepicker-day-button {
                line-height: 22px !important;
            }
        }

        .datepicker-table th {
            padding: 0 5px !important;
        }

        .datepicker-modal {
            width: auto !important;
        }

        .datepicker-date-display {
            padding: 10px 10px !important;
        }

            .datepicker-date-display .date-text {
                font-size: 1rem !important;
                line-height: 25px !important;
            }

        .timepicker-modal {
            width: auto !important;
            overflow-y: unset;
        }

        .timepicker-text-container {
            font-size: 1.5rem !important;
            position: unset !important;
        }

        .timepicker-digital-display {
            padding: 5px !important;
        }

        .timepicker-display-am-pm {
            font-size: 1rem !important;
            margin-top: 0.2rem !important;
        }

        .d-inline-flex {
            display: inline-flex
        }

        .checkmark {
            width: 110px;
            height: 110px;
            border-radius: 50%;
            display: block;
            stroke-width: 4;
            stroke: #4bb71b;
            stroke-miterlimit: 10;
            box-shadow: inset 0px 0px 0px #4bb71b;
            animation: fill .4s ease-in-out .4s forwards, scale .3s ease-in-out .9s both;
            position: fixed;
            top: 12%;
            right: 2%;
            float: right;
            z-index: 9999;
        }

        .checkmark__circle {
            stroke-dasharray: 166;
            stroke-dashoffset: 166;
            stroke-width: 4;
            stroke-miterlimit: 10;
            stroke: #4bb71b;
            fill: #fff;
            animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;
        }

        .checkmark__check {
            transform-origin: 50% 50%;
            stroke-dasharray: 48;
            stroke-dashoffset: 48;
            animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards;
        }

        @@keyframes stroke {
            100% {
                stroke-dashoffset: 0;
            }
        }

        @@keyframes scale {
            0%, 100% {
                transform: none;
            }

            50% {
                transform: scale3d(1.1, 1.1, 1);
            }
        }

        @@keyframes fill {
            100% {
                box-shadow: inset 0px 0px 0px 30px #4bb71b;
            }
        }
    </style>
}
@section scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.0/jquery-confirm.min.js"></script>

    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/app-assets/js/jquery.form.js"></script>
    <script src="~/app-assets/base/jquery-ui.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.1.0-beta.1/js/select2.min.js"></script>
    <script src="~/HunterTimePicker/js/jquery-timepicker.js"></script>

    <script>
        $(function () {
            var dateFormat = "mm/dd/yy",
                from = $(".sDate")
                    .datepicker({
                        defaultDate: "+1w",
                        changeMonth: true,
                        numberOfMonths: 1,
                        minDate: 0
                    })
                    .on("change", function () {
                        to.datepicker("option", "minDate", getDate(this));
                    }),
                to = $(".eDate").datepicker({
                    defaultDate: "+1w",
                    changeMonth: true,
                    numberOfMonths: 1
                })
                    .on("change", function () {
                        from.datepicker("option", "maxDate", getDate(this));
                    });

            function getDate(element) {
                var date;
                try {
                    date = $.datepicker.parseDate(dateFormat, element.value);
                } catch (error) {
                    date = null;
                }

                return date;
            }
        });
        $(function () {
            var dateFormat = "mm/dd/yy",
                from = $(".sBtwDate")
                    .datepicker({
                        defaultDate: "+1w",
                        changeMonth: true,
                        numberOfMonths: 1,
                        minDate: 0
                    })
                    .on("change", function () {
                        to.datepicker("option", "minDate", getDate(this));
                    }),
                to = $(".eBtwDate").datepicker({
                    defaultDate: "+1w",
                    changeMonth: true,
                    numberOfMonths: 1
                })
                    .on("change", function () {
                        from.datepicker("option", "maxDate", getDate(this));
                    });

            function getDate(element) {
                var date;
                try {
                    date = $.datepicker.parseDate(dateFormat, element.value);
                } catch (error) {
                    date = null;
                }

                return date;
            }
        });

        $('.datepicker').datepicker({
            changeMonth: true,
            changeYear: true,
            yearRange: "c-100:c+10",
            showButtonPanel: true,
            dateFormat: "mm/dd/yy",
            minDate: 0
        });

        $('.select2').select2({
            selectOnClose: false,

        });

        $('.select2').on("change", function (e) {
            var val = $(this).val();

            //Patientobj = {};
        });
        $(".time-picker").hunterTimePicker();
        var events = [];
            var appId = 0;
        var PatientName = "";
        var patientId = 0;
        var check_Btn = false;
        var recursive_No;
        $('#Doc-calendar').fullCalendar({
            loading: function (bool) {
                $('#loading').show(); // Add your script to show loading
            },
            eventAfterAllRender: function (view) {
                $('#loading').hide(); // remove your loading
            },
            viewRender: function (views, element) {
                var view = $('#Doc-calendar').fullCalendar('getView');
                if (view.type == 'listMonth') {
                    $.each(element.find('.fc-widget-header'), function () {
                        $(this).attr('colspan', 4);

                    });
                }
            },
            customButtons: {
                monthViewButton: {
                    text: 'Month View',
                    click: function () {
                        $('#Doc-calendar').fullCalendar('changeView', 'month');
                    }

                }, calMonth: {

                    click: function () {
                        $(".fc-month-button").trigger('click');
                    }
                },
                monthListViewButton: {
                    text: 'List View',
                    click: function () {
                        $('#Doc-calendar').fullCalendar('changeView', 'listMonth');
                    }

                }
            },
            renderEvent: function () {
                $('.fc-list-item-time').htlm("<i class='material-icons'>menu</i>");
            },
            header: {
                left: 'agendaDay , agendaWeek,  month, today',
                center: 'prev, title , next',
                right: 'calMonth,listMonth',
            },
            editable: true,
            eventDrop: function (event, delta, revertFunc) {
                debugger;
                var day = event.start.clone();
                var moment2 = $('#Doc-calendar').fullCalendar('getDate');

                if (day < moment2) {
                    new PNotify({
                        title: 'Error!',
                        text: "Can't booked slot for past Date!",
                        delay: 1500,
                        type: 'error',
                        addclass: 'pnotify-center'
                    });
                    var PatFilter = $('#seleciona option:selected').val();

                    if (PatFilter == "") {
                        $('#Doc-calendar').fullCalendar('removeEvents');
                        $('#Doc-calendar').fullCalendar('refetchEvents');
                    }
                    else {
                        $('#Doc-calendar').fullCalendar('removeEvents');
                        LoadAppointmentData(PatFilter);
                    }
                    return false;

                }
                debugger;
                var Date;
                eventDate = event.start.format();
                var Date = eventDate.split("T");
                var recursive;
                if (event.recursionNo == "") {
                    recursive = '';
                }
                else {
                    recursive = event.recursionNo;
                }
                if (event.Name == "Exact") {
                    Data = {
                        "patientAppointmentBasicDto.AppointmentType": event.Name,
                        "patientAppointmentBasicDto.AppointmentId": event.appointId,
                        "patientAppointmentBasicDto.PatientInfoId": event.patientId,
                        "patientAppointmentBasicDto.ExactTime": event.ExactTime,
                        "patientAppointmentBasicDto.Date": Date[0],
                        "patientAppointmentBasicDto.ProviderInfoId": event.providerId,
                        "patientAppointmentBasicDto.RecursionNo": recursive
                    }
                }
                else {
                    Data = {
                        "patientAppointmentBasicDto.AppointmentType": event.Name,
                        "patientAppointmentBasicDto.AppointmentId": event.appointId,
                        "patientAppointmentBasicDto.PatientInfoId": event.patientId,
                        "patientAppointmentBasicDto.StartTime": event.bSTime,
                        "patientAppointmentBasicDto.EndTime": event.bETime,
                        "patientAppointmentBasicDto.Date": Date[0],
                        "patientAppointmentBasicDto.ProviderInfoId": event.providerId,
                        "patientAppointmentBasicDto.RecursionNo": recursive
                    }
                }
                $.confirm({
                    title: 'Confirm!',
                    content: 'Do you want to change date of this appointment?',
                    buttons: {
                        confirm: function () {
                            DragSaveEvent(Data);
                        },
                        cancel: function () {
                            var PatFilter = $('#seleciona option:selected').val();
                            if (PatFilter == "") {
                                $('#Doc-calendar').fullCalendar('removeEvents');
                                $('#Doc-calendar').fullCalendar('refetchEvents');
                            }
                            else {
                                $('#Doc-calendar').fullCalendar('removeEvents');

                               LoadAppointmentData(PatFilter);
                            }
                        }
                    }
                });

            },
            timeFormat: 'h:mm',
            events: function (start, end, timezone, callback)
            {
                $.ajax({
                    type: "GET",
                url: '@Url.Action("ProviderGetCalendarsList", "Appointment", new {Id= ProviderID })',

                success: function (result)
                {
                    debugger;
                    events = [];
                    $.each(result, function (i, v) {
                        var Date = v.date.split('T');
                        debugger;
                        var recursive;
                        if (v.recursionNo == "") {
                            recursive = '';
                        }
                        else {
                            recursive = v.recursionNo;
                        }
                        var TypeName = v.appointmentType;
                        var DocPatName = "-Dr. " + v.docFirstName + " - " + v.patFirstName;

                        var PatientName = v.patientFullName;
                        //var provideName = "Dr. " + v.providerInfo.firstName + " " + v.providerInfo.lastName;
                        if (TypeName == "Exact") {
                            var Exist = v.exactTime.split('T');
                            events.push({
                                title: DocPatName,
                                Name: v.appointmentType,
                                //appointId: v.appointId,
                                start: Date[0] + "T" + Exist[1],
                                appointId: v.appointmentId,
                                patientId: v.patientInfoId,
                                patientName: PatientName,
                                providerId: v.providerInfoId,
                                ExactTime: Exist[1],
                                recursionNo: recursive
                                //startStr: v.startTime,
                                //endStr: v.endTime,
                                //exactTime: v.exactTime
                            });
                        }

                        else {
                            var Time = v.startTime.split('T');
                            var EndTime = v.endTime.split('T');

                            events.push({
                                title: DocPatName,
                                Name: v.appointmentType,
                                //appointId: v.appointId,
                                start: Date[0] + "T" + Time[1],
                                endTime: Date[0] + "T" + EndTime[1],
                                appointId: v.appointmentId,
                                patientId: v.patientInfoId,
                                patientName: PatientName,
                                providerId: v.providerInfoId,
                                bSTime: Time[1],
                                bETime: EndTime[1],
                                recursionNo: recursive
                            });
                        }
                    })
                    callback(events);
                }
            });
        },
            eventLimit: true,
            eventClick: function (events) {

                debugger;
                if (events.Name == "Exact") {
                    var ExactTimeDate = events.start._i.split('T');
                    $("#modal1").modal('open');
                    $("#modal1 .modal-content  .modal-title").text(events.patientId);
                    $("#modal1 .modal-content  #start_date").text(moment(events.start).format('DD/MM/YYYY'));
                    $("#modal1 .modal-content  #Exact_Time").text(moment(ExactTimeDate[1], "H(:mm)").format("HH:mm"));
                    $("#modal1 .modal-content  #provider").text(events.patientName);
                    appId = events.appointId;
                    //$("#appointId").val(appointmentId);
                    PatientName = events.patientName;
                    patientId = events.patientId;
                    recursive_No = events.recursionNo;
                }
                else {
                    var StartTimeDate = events.start._i.split('T');
                    var EndTime = events.endTime.split('T');
                    $("#modal2").modal('open');
                    $("#modal2 .modal-content  .modal-title").text(events.patientId);
                    $("#modal2 .modal-content  #start_date2").text(moment(events.start).format('DD/MM/YYYY'));
                    $("#modal2 .modal-content  #start_time2").text(moment(StartTimeDate[1], "H(:mm)").format("HH:mm"));
                    $("#modal2 .modal-content  #end_time2").text(moment(EndTime[1], "H(:mm)").format("HH:mm"));
                    $("#modal2 .modal-content  #provider_2").text(events.patientName);
                    appId = events.appointId;
                    //$("#appointId").val(appointmentId);
                    PatientName = events.patientName;
                    patientId = events.patientId;
                    recursive_No = events.recursionNo;

                }

                //$("#modal1 .modal-content  .modal-title").text(event.title);


                //$("#modal1 .modal-content  #Exact_Time").text(moment(event.end).format('DD/MM/YYYY'));
                //$("#modal1 .modal-content  #end_time").text(moment(event.end).format('HH:mm'));

            },
            eventMouseover: function (events, jsEvent) {
                var StartTimeDate = events.start._i.split('T');
                if (events.Name == "Exact") {
                    var tooltip = '<div class="tooltipevent" style="width:250px;height:auto;background:#fff;position:absolute;z-index:10001;padding:15px;box-shadow:1px 1px 12px 1px #e2e2e2 !important"> <span style="color:#333">Your Appointment Schedule With Patient Id # ' + events.patientId + ' at ' + moment(StartTimeDate[1], "H(:mm)").format("HH:mm") + ' Time. </span></div>'; var $tool = $(tooltip).appendTo('body');
                    $(this).mouseover(function (e) {
                        $(this).css('z-index', 10000);
                        $tool.fadeIn('500');
                        $tool.fadeTo('10', 1.9);
                    }).mousemove(function (e) {
                        $tool.css('top', e.pageY + 10);
                        $tool.css('left', e.pageX + 20);
                    });

                }
                else {
                    var EndTime = events.endTime.split('T');

                    var tooltip = '<div class="tooltipevent" style="width:250px;height:auto;background:#fff;position:absolute;z-index:10001;padding:15px;box-shadow:1px 1px 12px 1px #e2e2e2 !important"> <span style="color:#333">Your Appointment Schedule With Patient Id # ' + events.patientId + ' is Between ' + moment(StartTimeDate[1], "H(:mm)").format("HH:mm") + ' To ' + moment(EndTime[1], "H(:mm)").format("HH:mm") +' Time. </span></div>'; var $tool = $(tooltip).appendTo('body');
                    $(this).mouseover(function (e) {
                        $(this).css('z-index', 10000);
                        $tool.fadeIn('500');
                        $tool.fadeTo('10', 1.9);
                    }).mousemove(function (e) {
                        $tool.css('top', e.pageY + 10);
                        $tool.css('left', e.pageX + 20);
                    });
                }


            },
            eventMouseout: function (events, jsEvent) {
                $(this).css('z-index', 8);
                $('.tooltipevent').remove();
            }
        });
                function DragSaveEvent(Data) {
            debugger;
            $.ajax({
                type: "POST",
                url: '@Url.Action("Reschedule", "Appointment")',
                data: Data,
                success: function (data) {
                    debugger;
                    onExactSuccess(data);
                    if (data.status) {
                        calendar.render();
                    }
                },
                error: function () {
                    alert('Failed');
                }
            })
        }

        /*Reschedule*/
                function editOrUpdateAppointment(appId) {
                $.ajax({
                       type: "GET",
                        url: '@Url.Action("AppointmentGetById", "Appointment")',
                    data: { appointId: appId },

                    success: function (data) {
                        debugger;
                        $("#AppointmentUpdateModal #exist-appoint1").hide();
                        $("#AppointmentUpdateModal #frame-appoint1").hide();
                        $("#AppointmentUpdateModal #recurring1").hide();
                        debugger;
                        if (data.appointmentType == "Exact") {
                            $("#AppointmentUpdateModal #exist-appoint1").show();
                            $("#AppointmentUpdateModal #frame-appoint1").hide();
                            $("#AppointmentUpdateModal #recurring1").hide();

                            $("#AppointmentUpdateModal #appointmentType1").val(data.appointmentType);
                            $("#AppointmentUpdateModal #EPatFullName").val(PatientName);
                            $("#AppointmentUpdateModal .modal-title").text(data.patientInfoId);
                            $("#AppointmentUpdateModal #providerInfo_Id").val(data.providerInfoId);

                            $("#AppointmentUpdateModal #appointment_Id").val(data.appointmentId);
                            $("#AppointmentUpdateModal #patientInfo_Id").val(data.patientInfoId);
                            $("#AppointmentUpdateModal #exactTime1").val(moment(data.exactTime).format('HH:mm'));
                            $("#AppointmentUpdateModal #exactDate1").val(moment(data.date).format('MM/DD/YYYY'));
                            $("#AppointmentUpdateModal #recursion_no").val(recursive_No);

                            $('#provider_name').val(data.providerInfoId);
                            $('#provider_name').trigger('change');

                        }
                        else{

                            $("#AppointmentUpdateModal #exist-appoint1").hide();
                            $("#AppointmentUpdateModal #recurring1").hide();

                            $("#AppointmentUpdateModal #frame-appoint1").show();
                            $("#AppointmentUpdateModal .modal-title").text(data.patientInfoId);
                            $("#AppointmentUpdateModal #appointmentType2").val(data.appointmentType);
                            $("#AppointmentUpdateModal #BPatFullName").val(PatientName);
                            $("#AppointmentUpdateModal #providerInfo_Id2").val(data.providerInfoId);
                            $("#AppointmentUpdateModal #appointment_Id2").val(data.appointmentId);
                            $("#AppointmentUpdateModal #patientInfo_Id2").val(data.patientInfoId);
                            $("#AppointmentUpdateModal #btwDate1").val(moment(data.date).format('MM/DD/YYYY'));
                            $("#AppointmentUpdateModal #btwSTime1").val(moment(data.startTime).format('HH:mm'));
                            $("#AppointmentUpdateModal #btwETime1").val(moment(data.endTime).format('HH:mm'));
                            $("#AppointmentUpdateModal #recursion_no2").val(recursive_No);

                            $('#btnProvider').val(data.providerInfoId);
                            $('#btnProvider').trigger('change');
                        }
                            },
                            error: function (result) {
                             alert("Error");
                       }
                });
            }

        $('.EditAppointment').click(function () {
            editOrUpdateAppointment(appId);
            $('#AppointmentUpdateModal').modal('open');
        });
        $(document).on('submit', '#exist-appoint1', function (e) {
            debugger;

            e.preventDefault();
            if ($(this).valid()) {
                $(this).ajaxSubmit({
                    success: function (response) {
                        debugger
                        StartConnection(parseInt(response.userId));
                        SendNotification(parseInt(response.userId), response.firstName, response.lastName);

                    },
                    error: function (response) {

                    },
                    complete: function (xhr) {
                        onExactSuccess(xhr.responseJSON);

                    }
                });


            }
        });
        $(document).on('submit', '#frame-appoint1', function (e) {
            e.preventDefault();
            if ($(this).valid()) {
                $(this).ajaxSubmit({
                    success: function (response) {

                    },
                    error: function (response) {

                    },
                    complete: function (xhr) {
                        debugger
                        onExactSuccess(xhr.responseJSON);

                    }
                });

            }
        });
        function StartConnection(id) {
              var appointmentData = $('#exactDate1').val();
            var date = moment(appointmentData).format('dddd, MMMM D Y')
            var time = $('#exactTime1').val();
             var connection = new signalR.HubConnectionBuilder()
                                .withUrl("/NotificationHub")
                                .configureLogging(signalR.LogLevel.Information)
                                .build();
                            connection.start().then(() => {
                                var userId = id;
                                var message = 'Your appointment is reschedule  to ' + date + ' at ' + time + ' with Dr. @doctorName .';
                                connection.invoke("SendMessage", userId, message).catch(function (err) {
                                    return console.error(err.toString());
                                });
                            });
        }
        function SendNotification(Id,fname,lname) {
            var appointmentData = $('#exactDate1').val();
            var date = moment(appointmentData).format('dddd, MMMM D Y')
            var time = $('#exactTime1').val();
            docnotify = {
                UserId: @currUserId, NotificationType: "Appointment", NotificationText: "Appointment", NotificationInfo: '' + fname + ' ' + lname +' appointment is rescheduled to ' + date + ' at ' + time + '.', UserRoleId: @roleId, CreatedBy:@currUserId }
            $.ajax({
                type: "POST",
                url: "/Notification/SaveNotification",
                data: docnotify,
                success: function (data) {
                    patnotify = { UserId: Id, NotificationType: "Appointment", NotificationText: "Appointment", NotificationInfo: 'Your appointment is reschedule  to ' + date + ' at ' + time + ' with Dr. @doctorName', UserRoleId: @roleId, CreatedBy:@currUserId }
                    $.ajax({
                        type: "POST",
                        url: "/Notification/SaveNotification",
                        data: patnotify,
                        success: function (data) {
                        }
                    });

                }
            });
           }

        function deleteappointmentFromModel(appId) {
            debugger;
            var PatFilter = $('#seleciona option:selected').val();
            if (recursive_No == null) {
                $.confirm({
                    title: 'Confirm!',
                    content: 'Do you want to delete this appointment?',
                    buttons: {
                        confirm: function () {
                            $.get("/Appointment/DeleteAppointments", { Id: appId }).done(function (data) {
                                debugger;
                                if (data) {
                                    if (PatFilter == "") {
                                        $(".checkmark").show().fadeOut(6000);

                                        $('.full-calendar').fullCalendar('removeEvents');

                                        $('#Doc-calendar').fullCalendar('refetchEvents');
                                        event.closest('tr').remove();
                                    }
                                    else {
                                        $(".checkmark").show().fadeOut(6000);

                                        $('.full-calendar').fullCalendar('removeEvents');
                                        LoadAppointmentData(PatFilter);
                                        //$('#Doc-calendar').fullCalendar('refetchEvents');
                                        event.closest('tr').remove();
                                    }

                                }
                                else {
                                    new PNotify({
                                        title: 'Error!',
                                        text: 'Something went wron',
                                        delay: 2500,
                                        type: 'error',
                                        addclass: 'pnotify-center'
                                    });
                                }


                            });
                        },
                        cancel: function () {

                        }
                    }
                });
            }
            else {
                $.confirm({

                    title: 'Confirm!',
                    content: 'Do you want to delete all associated events or just this one?',
                    buttons: {
                        All: function () {
                            $.confirm({
                                title: 'Confirm!',
                                content: 'Do you want to delete associated all events?',

                                buttons: {
                                    confirm: function () {
                                        $.get("/Appointment/DeleteRecuringAppointment", { Id: recursive_No }).done(function (data) {
                                            debugger;
                                            if (data) {
                                                if (PatFilter == "") {
                                                    $(".checkmark").show().fadeOut(6000);

                                                    $('.full-calendar').fullCalendar('removeEvents');
                                                    $('#Doc-calendar').fullCalendar('refetchEvents');
                                                    event.closest('tr').remove();

                                                }
                                                else {
                                                    $(".checkmark").show().fadeOut(6000);

                                                    $('.full-calendar').fullCalendar('removeEvents');
                                                    LoadAppointmentData(PatFilter);
                                                    event.closest('tr').remove();
                                                }
                                            }
                                            else {
                                                new PNotify({
                                                    title: 'Error!',
                                                    text: 'Something went wron',
                                                    delay: 2500,
                                                    type: 'error',
                                                    addclass: 'pnotify-center'
                                                });
                                            }


                                        });
                                    },


                                    cancel: function () {
                                        $.alert('Canceled!');
                                    }
                                }
                            });

                        },

                        Single: function () {
                            $.confirm({
                                title: 'Confirm!',
                                content: 'Do you want to delete this appointment?',

                                buttons: {
                                    confirm: function () {
                                        $.get("/Appointment/DeleteAppointments", { Id: appId }).done(function (data) {
                                            debugger;
                                            if (data) {
                                                if (PatFilter == "") {
                                                    $(".checkmark").show().fadeOut(6000);

                                                    $('.full-calendar').fullCalendar('removeEvents');
                                                    $('#Doc-calendar').fullCalendar('refetchEvents');
                                                    event.closest('tr').remove();

                                                }
                                                else {
                                                    new PNotify({
                                                        title: 'Error!',
                                                        text: 'Something went wron',
                                                        delay: 2500,
                                                        type: 'error',
                                                        addclass: 'pnotify-center'
                                                    });
                                                    $('.full-calendar').fullCalendar('removeEvents');
                                                    LoadAppointmentData(PatFilter);
                                                    event.closest('tr').remove();
                                                }
                                            }
                                            else {
                                                new PNotify({
                                                    title: 'Error!',
                                                    text: 'Something went wron',
                                                    delay: 2500,
                                                    type: 'error',
                                                    addclass: 'pnotify-center'
                                                });
                                            }


                                        });
                                    },


                                    cancel: function () {
                                    }
                                }
                            });

                        },
                        cancel: function () {
                        }
                    }
                });
            }

        }


        $('.DeleteappointBtn').click(function () {

            deleteappointmentFromModel(appId);
            $('.modal').modal('close');
        });
        function LoadAppointmentData(PatFilter) {
             $("#Doc-calendar").fullCalendar('removeEvents');//remove the old filtered events
                //filter based on the select value

                if (PatFilter == "All") {

                    $.ajax({
                    type: "GET",
                    url: '@Url.Action("ProviderGetCalendarsList", "Appointment")',
                    data: { Id : @ProviderID},//get events
                    success: function (data) {
                        $.each(data, function (i, v) {//for each event, I will compare the value with the filter, if true, render it.

                            if (v.providerInfoId == @ProviderID) {
                                var Time;
                                var ETime;
                                if (v.appointmentType == "Exact") {
                                    Time = v.exactTime.split('T');
                                }
                                else {
                                    Time = v.startTime.split('T');
                                }
                                var DocPatName = "-Dr. " + v.docFirstName + " - " + v.patFirstName;
                                var PatientName = v.patientFullName;

                                var Date = v.date.split('T');

                                if (v.appointmentType == "Exact") {
                                    ETime = '00:00:00'
                                }
                                else {
                                    ETime = v.endTime.split('T');
                                }
                                debugger;
                                $("#Doc-calendar").fullCalendar('renderEvent', {
                                    title: DocPatName,
                                    start: Date[0] + 'T' + Time[1],
                                    Name: v.appointmentType,
                                    appointId: v.appointmentId,
                                    endTime: Date[0] + "T" + ETime[1],
                                    patientId: v.patientInfoId,
                                    patientName: PatientName,
                                    providerId: v.providerInfoId,
                                    ExactTime: Time[1],
                                    bSTime: Time[1],
                                    bETime: ETime[1]
                                }, true);
                            }
                        })
                    }
                });
                }
                else {
                   $.ajax({
                    type: "GET",
                    url: '@Url.Action("FilterByDocName", "Appointment")',
                    data: { DocId: @ProviderID, PatId:PatFilter},//get events
                    success: function (data) {
                        $.each(data, function (i, v) {//for each event, I will compare the value with the filter, if true, render it.
                            if (v.providerInfoId == @ProviderID && v.patientInfoId == PatFilter) {
                                debugger;
                                var Time;
                                var ETime;
                                if (v.appointmentType == "Exact") {
                                    Time = v.exactTime.split('T');
                                }
                                else {
                                    Time = v.startTime.split('T');
                                }
                                var DocPatName = "-Dr. " + v.providerInfo.firstName + " - " + v.patientInfo.firstName;
                                var PatientName = v.patientInfo.firstName + ' ' + v.patientInfo.lastName;

                                var Date = v.date.split('T');

                                if (v.appointmentType == "Exact") {
                                    ETime = '00:00:00'
                                }
                                else {
                                    ETime = v.endTime.split('T');
                                }
                                debugger;
                                $("#Doc-calendar").fullCalendar('renderEvent', {
                                    title: DocPatName,
                                    start: Date[0] + 'T' + Time[1],
                                    Name: v.appointmentType,
                                    appointId: v.appointmentId,
                                    endTime: Date[0] + "T" + ETime[1],
                                    patientId: v.patientInfoId,
                                    patientName: PatientName,
                                    providerId: v.providerInfoId,
                                    ExactTime: Time[1],
                                    bSTime: Time[1],
                                    bETime: ETime[1]
                                }, true);
                            }
                        })
                    }
                });

                }
        }
        function BulkExactCheck() {
            debugger;
            var check = $("#Bulkexact_checkbox").val();
            if (check == '0') {
                $("#BulkInBetweenAppointment").hide();
                $("#BulkInBtwRecurringForm").hide();
                $("#BulkEaxctAppointHide").show();
                $(".Bulkcancel_btn").hide();
                var check = $("#BulkERecCheck");
                if (check.is(':checked')) {
                    $("#BulkExactFormButton").hide();
                    $("#BulkexactRecurringForm").show();
                    $("#BulkERecRangeTimeText").show();
                    $("#BulkERecRangeTimeField").show();
                    $("#BulkERecPatternText").show();
                    $("#BulkERecPatternCheckBox").show();
                    $("#BulkERecPatternCheckBoxS").show();
                    $("#BulkERecCheck2").prop("checked", true);
                }

            }
            else {
                $("#BulkInBetweenAppointment").hide();
                $("#BulkEaxctAppointHide").hide();
                $(".Bulkcancel_btn").hide();
            }

        }
        function BulkBtwCheck() {
            debugger;
            var check2 = $("#Bulkbtw_checkbox");
            if (check2.is(':checked')) {
                $("#BulkInBetweenAppointment").show();
                $("#BulkEaxctAppointHide").hide();
                $("#BulkExactRecurringForm").show();
                $("#BulkERecRangeTimeText").show();
                $("#BulkERecRangeTimeField").show();
                $("#BulkERecPatternText").show();
                $("#BulkERecPatternCheckBox").show();
                $("#BulkERecPatternCheckBoxS").show();



            }
            else {
                $("#BulkInBetweenAppointment").show();
                $("#BulkEaxctAppointHide").hide();
                $(".Bulkcancel_btn").hide();
                $("#BulkExactRecurringForm").hide();
                $("#BulkERecRangeTimeText").hide();
                $("#BulkERecRangeTimeField").hide();
                $("#BulkERecPatternText").hide();
                $("#BulkBulkERecPatternCheckBox").hide();
                $("#ERecPatternCheckBoxS").hide();
                var check = $("#BulkERecCheck");
                if (check.is(':checked')) {
                    $("#BulkExactFormButton").hide();
                    $("#BulkExactRecurringForm").hide();
                    $("#BulkERecRangeTimeText").hide();
                    $("#BulkERecRangeTimeField").hide();
                    $("#BulkERecPatternText").hide();
                    $("#BulkERecPatternCheckBox").hide();
                    $("#BulkERecPatternCheckBoxS").hide();
                    $("#exactMakeRec").hide();
                    $("#RecMakeRec").show();

                }
                var check = $("#BulkBRecCheck");
                if (check.is(':checked')) {
                    $("#BulkBtwFormButton").hide();
                    $("#BulkInBtwRecurringForm").show();
                    $("#BulkBRecRangeTimeText").show();
                    $("#BulkBRecRangeTimeField").show();
                    $("#BulkBRecPatternText").show();
                    $("#BulkBRecPatternCheckBox").show();
                    $("#BulkBRecPatternCheckBoxS").show();
                }

                //$("#ExactRecurringForm").hide();

                //$("#ERecCheck").trigger("click");
                //$("#ERecCheck").prop("checked", false);
            }
        }
        function BulkERecurrence() {
            debugger;
            var check = $("#BulkERecCheck");
            if (check.is(':checked')) {
                $("#BulkExactFormButton").hide();
                $("#BulkEaxctAppointfield").hide();
                $("#exactSelect").hide();
                $("#exactMakeRec").hide();
                $("#BulkExactRecurringForm").show();
                $("#BulkERecRangeTimeText").show();
                $("#BulkERecRangeTimeField").show();
                $("#BulkERecPatternText").show();
                $("#BulkERecPatternCheckBox").show();
                $("#BulkERecPatternCheckBoxS").show();
                $("#BulkERecCheck2").prop("checked", true);
            }
            else {
                $("#BulkEaxctAppointfield").show();

                $("#BulkExactFormButton").show();
                $("#BulkExactRecurringForm").hide();

                $("#BulkERecRangeTimeText").hide();
                $("#BulkERecRangeTimeField").hide();
                $("#BulkERecPatternText").hide();
                $("#BulkERecPatternCheckBox").hide();
                $("#BulkERecPatternCheckBoxS").hide();
            }


        }
        function BulkERecurrence2() {
            debugger;
            var check = $("#BulkERecCheck2");
            if (check.is(':checked')) {
                $("#BulkExactFormButton").hide();
                $("#BulkEaxctAppointfield").hide();
                $("#exactSelect").hide();
                $("#exactMakeRec").hide();
                $("#BulkExactRecurringForm").show();
                $("#BulkERecRangeTimeText").show();
                $("#BulkERecRangeTimeField").show();
                $("#BulkERecPatternText").show();
                $("#BulkERecPatternCheckBox").show();
                $("#BulkERecPatternCheckBoxS").show();

            }
            else {
                $("#exactMakeRec").show();
                $("#exactSelect").show();
                $("#RecexactSelect").show();
                $("#BulkERecCheck2").prop("checked", false);
                $("#BulkERecCheck").prop("checked", false);

                $("#BulkEaxctAppointfield").show();

                $("#BulkExactFormButton").show();
                $("#BulkExactRecurringForm").hide();

                $("#BulkERecRangeTimeText").hide();
                $("#BulkERecRangeTimeField").hide();
                $("#BulkERecPatternText").hide();
                $("#BulkERecPatternCheckBox").hide();
                $("#BulkERecPatternCheckBoxS").hide();
            }


        }
        function BulkBRecurrence() {
            debugger;
            var check = $("#BulkBRecCheck");
            if (check.is(':checked')) {
                $("#BulkBtwFormButton").hide();
                $("#BulkInBtwField").hide();
                $("#InBtwSelect").hide();
                $("#InBtwMake").hide();
                $("#BulkInBtwRecurringForm").show();
                $("#BulkBRecRangeTimeText").show();
                $("#BulkBRecRangeTimeField").show();
                $("#BulkBRecPatternText").show();
                $("#BulkBRecPatternCheckBox").show();
                $("#BulkBRecPatternCheckBoxS").show();
                $("#BulkBRecCheck2").prop("checked", true);

            }
            else {
                $("#BulkInBtwField").show();

                $("#BulkBtwFormButton").show();
                $("#BulkInBtwRecurringForm").hide();
                $("#BulkBRecRangeTimeText").hide();
                $("#BulkBRecRangeTimeField").hide();
                $("#BulkBRecPatternText").hide();
                $("#BulkBRecPatternCheckBox").hide();
                $("#BulkBRecPatternCheckBoxS").hide();
            }


        }
        function BulkBRecurrence2() {
            debugger;
            var check = $("#BulkBRecCheck2");
            if (check.is(':checked')) {
                $("#BulkBtwFormButton").hide();
                $("#BulkInBtwField").hide();
                $("#InBtwSelect").hide();
                $("#InBtwMake").hide();
                $("#BulkInBtwRecurringForm").show();
                $("#BulkBRecRangeTimeText").show();
                $("#BulkBRecRangeTimeField").show();
                $("#BulkBRecPatternText").show();
                $("#BulkBRecPatternCheckBox").show();
                $("#BulkBRecPatternCheckBoxS").show();
            }
            else {
                $("#BulkBRecCheck2").prop("checked", false);
                $("#BulkBRecCheck").prop("checked", false);
                $("#BulkInBtwField").show();
                $("#InBtwSelect").show();
                $("#InBtwMake").show();
                $("#InBtwMakeRec").show();
                $("#BulkBtwFormButton").show();
                $("#BulkInBtwRecurringForm").hide();
                $("#BulkBRecRangeTimeText").hide();
                $("#BulkBRecRangeTimeField").hide();
                $("#BulkBRecPatternText").hide();
                $("#BulkBRecPatternCheckBox").hide();
                $("#BulkBRecPatternCheckBoxS").hide();
            }


        }

        $(document).ready(function () {
            $('#seleciona').change(function () {
                var PatFilter = $('#seleciona option:selected').val();
                LoadAppointmentData(PatFilter);
            });
            $(".createappbtn").click(function () {


                $('.app_empty').val("");
                $('.Bulkapp_empty').val("");
                $('.Bulkapp_empty').removeClass('valid');
                $('.app_empty').removeClass('valid');
                $("#exact_checkbox").prop('checked', false);
                $("#Btw_checkbox").prop('checked', false);
                $("#Bulkexact_checkbox").prop('checked', false);
                $("#BulkBtw_checkbox").prop('checked', false);
                $(".cancel_btn").show();
                $(".Bulkcancel_btn").show();
                $("#EaxctAppointHide").hide();
                $("#BulkEaxctAppointHide").hide();
                $("#InBetweenAppointment").hide();
                $("#BulkInBetweenAppointment").hide();
                var check = $("#BulkERecCheck");
                if (check.is(':checked')) {
                    $("#ERecCheck").trigger('click');
                }
                else {

                }
                var check = $("#BulkERecCheck2");
                if (check.is(':checked')) {
                    $("#BulkERecCheck2").trigger('click');
                }
                else {

                }
                var check = $("#BulkBRecCheck");
                if (check.is(':checked')) {
                    $("#BulkBRecCheck").trigger('click');
                }
                else {

                }
                var check = $("#BulkBRecCheck2");
                if (check.is(':checked')) {
                    $("#BulkBRecCheck2").trigger('click');
                }
                else {

                }
                $(".cancel_btn").show();
                $("#EaxctAppointHide").hide();
                $("#InBetweenAppointment").hide();
                $("#ExactRecurringForm").hide();
                $("#InBtwRecurringForm").hide();
                $(".select2").val('').trigger('change');
                $('#Doc-calendar').fullCalendar('refetchEvents');
            });

        });


        $('#BulkEaxctAppointHide').on('submit', function (e) {
            debugger;
            e.preventDefault();
            if ($(this).valid()) {
                $(this).ajaxSubmit({
                    success: function (response) {
                        debugger;
                        if (response == "exist") {
                            ExistsMsg();
                        }
                        else {
                            SuccessMsg();

                        }
                    }

                });

            }

        });
        $('#BulkInBetweenAppointment').on('submit', function (e) {
            debugger;
            e.preventDefault();
            if ($(this).valid()) {
                $(this).ajaxSubmit({
                    success: function (response) {
                        debugger;
                        if (response == "exist") {
                            ExistsMsg();
                        }
                        else {
                            SuccessMsg();

                        }
                    }

                });

            }

        });
        $('#BulkExactRecurringForm').on('submit', function (e) {
            debugger;
            e.preventDefault();
            if ($(this).valid()) {
                $(this).ajaxSubmit({
                    success: function (response) {
                        //StartConnection(parseInt(response.userId));
                        //SendNotification(parseInt(response.userId));
                    },
                    error: function (response) {

                    },
                    complete: function (xhr) {
                        onExactSuccess(xhr.responseJSON);

                    }

                });

            }

        });
        $('#BulkInBtwRecurringForm').on('submit', function (e) {
            debugger;
            e.preventDefault();
            if ($(this).valid()) {
                $(this).ajaxSubmit({
                    success: function (response) {
                        //StartConnection(parseInt(response.userId));
                        //SendNotification(parseInt(response.userId));
                    },
                    error: function (response) {

                    },
                    complete: function (xhr) {
                        onExactSuccess(xhr.responseJSON);

                    }

                });

            }

        });

        function onExactSuccess(data) {
            var PatFilter = $('#seleciona option:selected').val();
            debugger;
            if (data != null) {
                if (PatFilter == "") {

                                        $(".checkmark").show().fadeOut(6000);

                    $('#Doc-calendar').fullCalendar('removeEvents');

                    $("#AppointmentModal").modal('close');
                    $("#AppointmentUpdateModal").modal('close');
                    $('#Doc-calendar').fullCalendar('refetchEvents');
                    $(".text-input").val("");
                    $(".text-input").removeClass("valid");
                }
                else {

                    $(".checkmark").show().fadeOut(6000);

                    $('#Doc-calendar').fullCalendar('removeEvents');

                    $("#AppointmentModal").modal('close');
                    $("#AppointmentUpdateModal").modal('close');
                    //$('#Doc-calendar').fullCalendar('refetchEvents');
                    LoadAppointmentData(PatFilter);

                    $(".text-input").val("");
                    $(".text-input").removeClass("valid");
                }
            }
            else {
                new PNotify({
                    title: 'Error!',
                    text: 'Something went wrong',
                    delay: 2500,
                    type: 'error',
                    addclass: 'pnotify-center'
                });
            }
        }
        function SuccessMsg() {

                $(".checkmark").show().fadeOut(6000);

                $('#Doc-calendar').fullCalendar('removeEvents');

                $("#AppointmentModal").modal('close');
                $("#AppointmentUpdateModal").modal('close');
                $('#Doc-calendar').fullCalendar('refetchEvents');
                $(".text-input").val("");
                $(".text-input").removeClass("valid");
        }
    </script>
    @*<script>
            //$('<input>', { type: 'checkbox' }).appendTo('.fc-list-item-title');
            $('<input type="checkbox" name="namehere" />').insertBefore('.fc-list-item-title');
        </script>*@
}
<svg class="checkmark" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52"><circle class="checkmark__circle" cx="26" cy="26" r="25" fill="none" /><path class="checkmark__check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8" /></svg>

<div id="breadcrumbs-wrapper">
    <!-- Search for small screen-->
    <div class="container">
        <div class="row">
            <div class="col s3 m2 l2">
                <h5 class="breadcrumbs-title color-blue">Appointments</h5>
            </div>
            <div class="col s9 m5 l5">

                <select id="seleciona" class="select2" data-placeholder="Search By Patient Name"
                        asp-items="@(new SelectList(Model.patientListWithUsers,"PatientInfoId","FullName"))">
                    <option value="" selected disabled></option>
                    <option value="All">All</option>
                </select>
            </div>
            <div class="col s12 m5 l5">
                <a class="btn right add-btn createappbtn modal-trigger" href="#AppointmentModal">Add Bulk Appointment</a>
            </div>
        </div>
    </div>
</div>
<div class="container" id="calendar-hide">
    <div class="row">
        <div class="col s12">
            <div class="card calendar">
                <div class="card-content">
                    <h4 class="card-title color-blue">
                        Schedule Appointments
                    </h4>
                    @*<div id="basic-calendar"></div>*@
                    <div id='Doc-calendar'></div>
                    <div id="loading">
                        <div class="bounce1"></div>
                        <div class="bounce2"></div>
                        <div class="bounce3"></div>
                    </div>
                </div>
            </div>

        </div>

    </div>
</div>

<div id="modal1" class="modal display_modal">
    <div class="modal-content">
        <div class="row">
            <div class="col s12 m8 pl-0">
                <h5>Appointment Schedule</h5>
            </div>
            <div class="col s12 m4 mt-2">
                <h6>Patient Id : <span class="modal-title"></span></h6>
            </div>
        </div>
        <input id="AppointId" hidden="hidden" />
        <hr />
        <div class="row">
            <div class="col s12 m6 pl-0" id="Date_show">
                <h6>Patient Name : <span id="provider"></span></h6>
            </div>
            <div class="col s12 m6 pl-0" id="Date_show">
                <h6>Date : <span id="start_date"></span></h6>
            </div>

            <div class="col s6 m12 pl-0 mt-2" id="ExactTime_show">
                <span style="font-size:18px;">Your Appointment With <b style="border-bottom: 1px solid" id="provider"></b> is at <b style="border-bottom:1px solid" id="Exact_Time"></b>. Please Make Sure Your Availability at Time.</span>
            </div>
        </div>
        <div class="row mt-5">
            <div class="col m12">
                <a href="javascript:void(0);" class="right modal-close modal-action btn Recreate ml-2">Cancel</a>

                <a href="javascript:void(0);" class="right DeleteappointBtn modal-action btn Recreate ">Delete</a>

                <a href="javascript:void(0);" class="right modal-close modal-action EditAppointment modal-close add-btn  btn mr-2">Reschedule</a>

            </div>
        </div>
    </div>

</div>
<div id="modal2" class="modal display_modal">
    <div class="modal-content">
        <div class="row">
            <div class="col s12 m8 pl-0">
                <h5>Appointment Schedule</h5>
            </div>
            <div class="col s12 m4 mt-2">
                <h6>Patient Id : <span class="modal-title"></span></h6>
            </div>
        </div>
        <input id="AppointId" hidden="hidden" />
        <hr />
        <div class="row">
            <div class="col s6 m6 pl-0" id="Date_show2">
                <h6>Patient Name : <span id="provider_2"></span></h6>

            </div>
            <div class="col s6 m6 pl-0" id="Date_show2">
                <h6>Date : <span id="start_date2"></span></h6>

            </div>
            <div class="col s12 m12 pl-0 mt-2" id="StartTime_show">
                @*<h6>Start Time : <span id="start_time2"></span></h6>*@
                <span style="font-size:18px;">Your Appointment With <b style="border-bottom: 1px solid" id="provider_2"></b> in Between <b style="border-bottom:1px solid" id="start_time2"></b> To <b style="border-bottom:1px solid" id="end_time2"></b> Time. Please Make Sure Your Availability at Time.</span>

            </div>
            @*<div class="col s6 m12 pl-0" id="EndTime_show">
                    <h6>End Time : <span id="end_time2"></span></h6>
                </div>*@
        </div>
        <div class="row mt-5">
            <div class="col m12">
                <a href="javascript:void(0);" class="right modal-close modal-action btn Recreate ml-2">Cancel</a>

                <a href="javascript:void(0);" class="right modal-action DeleteappointBtn  btn Recreate ">Delete</a>

                <a href="javascript:void(0);" class="right modal-close  modal-action EditAppointment add-btn  btn mr-2">Reschedule</a>

            </div>
        </div>

    </div>

</div>
<div id="AppointmentModal" class="modal">
    <div class="modal-content">
        <h4>Add Bulk Appointment</h4>
        <hr />
        @*<div class="row">
                <div class="col s12 pl-0">
                    <ul class="tabs Exam-tab">
                        <li class="tab"><a class="active" href="#test1">Single Appointment</a></li>
                        <li class="tab"><a href="#test2">Bulk Appointment</a></li>
                    </ul>
                </div>
            </div>*@

        <div class="row" id="test2">
            <div class="col s12">

                <div class="row">
                    <div class="col m3 pl-0 input-field mt-2">
                        <h6>Appointment Type : </h6>
                    </div>
                    <div class="col m3 pl-0 input-field">
                        <label>
                            <input type="radio" name="AppCheckBox" id="Bulkexact_checkbox" class="with-gap" onclick="BulkExactCheck()" value="0" />
                            <span>Exact</span>
                        </label>
                    </div>
                    <div class="col m3 pl-0 input-field">
                        <label>
                            <input type="radio" name="AppCheckBox" id="BulkBtw_checkbox" class="with-gap" onclick="BulkBtwCheck()" />
                            <span>In Between</span>
                        </label>
                    </div>
                </div>
                <div class="row">
                    <div class="col s12 m12">
                        <a href="javascript:void(0);" class="modal-action modal-close Bulkcancel_btn Recreate ml-2 btn mt-2 right">Cancel</a>

                    </div>
                </div>
                <form asp-action="BulkExactAppointment" asp-controller="Appointment" method="post" id="BulkEaxctAppointHide" style="display:none">
                    <input hidden="hidden" asp-for="patientAppointmentBasicDto.AppointmentId" />
                    <input hidden="hidden" asp-for="patientAppointmentBasicDto.PatientInfoId" id="PatientIdVal" />
                    <input hidden="hidden" id="providerInfo_Id" asp-for="patientAppointmentBasicDto.ProviderInfoId" />
                    <input asp-for="patientAppointmentBasicDto.AppointmentType" value="Exact" id="appointmentType" hidden="hidden" />
                    <div class="row" id="exactSelect">
                        <div class="col s12 m6 pl-0">
                            <p>Patient Name <span class="required"> * </span></p>
                            <select multiple="multiple" class="select2" id="ExactSimple" asp-for="patientAppointmentBasicDto.PatientId" data-placeholder="Select Patient Name"
                                    asp-items="@(new SelectList(Model.patientListWithUsers,"PatientInfoId","FullName"))">
                            </select>
                        </div>
                    </div>
                    <div class="row" id="exactMakeRec">
                        <div class="col col s12 m6 pl-0">
                            <p class="check-btn">
                                <label>
                                    <input type="checkbox" id="BulkERecCheck" onclick="BulkERecurrence()" class="filled-in checkFirst" />
                                    <span>Make it recursive</span>
                                </label>
                            </p>

                        </div>
                    </div>
                    <div class="row" id="BulkEaxctAppointfield">
                        <div class="col s12 m4 pl-0">
                            <p>Date <span class="required"> * </span></p>
                            <input type="text" id="BulkrecSDate" asp-for="patientAppointmentBasicDto.Date" class="datepicker text-input Bulkapp_empty" placeholder="Select Date">
                            <span class="required" asp-validation-for="patientAppointmentBasicDto.Date"></span>
                        </div>
                        <div class="col s12 m4">
                            <p>Time<span class="required"> * </span></p>
                            <input type="text" class=" time-picker text-input Bulkapp_empty" asp-for="patientAppointmentBasicDto.ExactTime" placeholder="Select Time">
                            <span class="required" asp-validation-for="patientAppointmentBasicDto.ExactTime"></span>
                        </div>
                        <div class="col s12 m4">
                            <p>Duration<span class="required"> * </span></p>
                            <select id="SlotDuration" asp-for="patientAppointmentBasicDto.Duration" class="select2" data-placeholder="Select Duration" asp-items="@( new List<SelectListItem>{
                                                                 new SelectListItem() {Text = "", Value=""},
                                                                 new SelectListItem() {Text = "5 Min", Value="5"},
                                                                    new SelectListItem() {Text = "10 Min", Value="10"},
                                                                    new SelectListItem() {Text = "15 Min", Value="15"},
                                                                    new SelectListItem() {Text = "20 Min", Value="20"},
                                                                    new SelectListItem() {Text = "25 Min", Value="25"},
                                                                    new SelectListItem() {Text = "30 Min", Value="30"},
                                                                    new SelectListItem() {Text = "35 Min", Value="35"},
                                                                    new SelectListItem() {Text = "40 Min", Value="40"},
                                                                    new SelectListItem() {Text = "45 Min", Value="45"},
                                                                    new SelectListItem() {Text = "50 Min", Value="50"},
                                                                    new SelectListItem() {Text = "55 Min", Value="55"},
                                                                    new SelectListItem() {Text = "60 Min", Value="60"},
                                                                    new SelectListItem() {Text = "65 Min", Value="65"},
                                                                    new SelectListItem() {Text = "70 Min", Value="70"},
                                                                    new SelectListItem() {Text = "75 Min", Value="75"},
                                                                    new SelectListItem() {Text = "80 Min", Value="80"},
                                                                    new SelectListItem() {Text = "85 Min", Value="85"},
                                                                    new SelectListItem() {Text = "90 Min", Value="90"},
                                                                    new SelectListItem() {Text = "100 Min", Value="100"},
                                                                    new SelectListItem() {Text = "105 Min", Value="105"},
                                                                    new SelectListItem() {Text = "110 Min", Value="110"},
                                                                    new SelectListItem() {Text = "115 Min", Value="115"},
                                                                    new SelectListItem() {Text = "120 Min", Value="120"}
                                         })">
                            </select>
                        </div>
                    </div>

                    <div class="row" id="BulkExactFormButton">
                        <a href="javascript:void(0);" class="modal-action modal-close Recreate ml-2 btn mt-2 right">Cancel</a>
                        <button type="submit" class="modal-action btn mt-2 add-btn right">Save</button>
                    </div>
                </form>
                <form asp-action="BulkExactRecAppointment" asp-controller="Appointment" id="BulkExactRecurringForm" method="post" style="display:none">
                    <input hidden="hidden" asp-for="RecurringAppoinmentDto.AppointmentId" />
                    <input hidden="hidden" asp-for="RecurringAppoinmentDto.PatientInfoId" />
                    <input hidden="hidden" id="ERecproviderInfo_Id" asp-for="RecurringAppoinmentDto.ProviderInfoId" />
                    <input asp-for="RecurringAppoinmentDto.AppointmentType" value="Exact" hidden="hidden" />
                    <div class="row" id="RecexactSelect">
                        <div class="col s12 m6 pl-0">
                            <p>Patient Name <span class="required"> * </span></p>
                            <select multiple="multiple" class="select2" id="ExactRec" asp-for="RecurringAppoinmentDto.PatientId" data-placeholder="Select Patient Name"
                                    asp-items="@(new SelectList(Model.patientListWithUsers,"PatientInfoId","FullName"))">
                            </select>
                        </div>
                    </div>
                    <div class="row" id="RecMakeRec">
                        <div class="col col s12 m6 pl-0">
                            <p class="check-btn">
                                <label>
                                    <input type="checkbox" id="BulkERecCheck2" onclick="BulkERecurrence2()" class="filled-in checkFirst" />
                                    <span>Make it recursive</span>
                                </label>
                            </p>

                        </div>
                    </div>
                    <div class="row" id="ERecRangeTimeText">
                        <div class="col s12 m6 pl-0">
                            <h6>Range of Recurrence</h6>
                        </div>
                        <div class="col s12 m6">
                            <h6>Appointment Time</h6>
                        </div>
                    </div>
                    <div class="row" style="display:none" id="BulkERecRangeTimeField">
                        <div class="col s6 m3 pl-0">
                            <p>Start Date <span class="required"> * </span></p>
                            <input type="text" asp-for="RecurringAppoinmentDto.Date" class="sDate datepicker text-input Bulkapp_empty" placeholder="Select Start Date">
                            <span class="required" asp-validation-for="RecurringAppoinmentDto.Date"></span>
                        </div>
                        <div class="col s6 m3">
                            <p>End Date <span class="required"> * </span></p>
                            <input type="text" asp-for="RecurringAppoinmentDto.EndDate" class="eDate  text-input Bulkapp_empty" placeholder="Select Start Date">
                            <span class="required" asp-validation-for="RecurringAppoinmentDto.EndDate"></span>
                        </div>
                        <div class="col s6 m3">
                            <p>Start Time <span class="required"> * </span></p>
                            <input type="text" asp-for="RecurringAppoinmentDto.ExactTime" class="time-picker text-input Bulkapp_empty" placeholder="Select Start Date">
                            <span class="required" asp-validation-for="RecurringAppoinmentDto.ExactTime"></span>
                        </div>
                        <div class="col s6 m3">
                            <p>Duration <span class="required"> * </span></p>
                            <select asp-for="RecurringAppoinmentDto.Duration" class="select2" data-placeholder="Select Duration" asp-items="@( new List<SelectListItem>{
                                                                 new SelectListItem() {Text = "", Value=""},
                                                                 new SelectListItem() {Text = "5 Min", Value="5"},
                                                                    new SelectListItem() {Text = "10 Min", Value="10"},
                                                                    new SelectListItem() {Text = "15 Min", Value="15"},
                                                                    new SelectListItem() {Text = "20 Min", Value="20"},
                                                                    new SelectListItem() {Text = "25 Min", Value="25"},
                                                                    new SelectListItem() {Text = "30 Min", Value="30"},
                                                                    new SelectListItem() {Text = "35 Min", Value="35"},
                                                                    new SelectListItem() {Text = "40 Min", Value="40"},
                                                                    new SelectListItem() {Text = "45 Min", Value="45"},
                                                                    new SelectListItem() {Text = "50 Min", Value="50"},
                                                                    new SelectListItem() {Text = "55 Min", Value="55"},
                                                                    new SelectListItem() {Text = "60 Min", Value="60"},
                                                                    new SelectListItem() {Text = "65 Min", Value="65"},
                                                                    new SelectListItem() {Text = "70 Min", Value="70"},
                                                                    new SelectListItem() {Text = "75 Min", Value="75"},
                                                                    new SelectListItem() {Text = "80 Min", Value="80"},
                                                                    new SelectListItem() {Text = "85 Min", Value="85"},
                                                                    new SelectListItem() {Text = "90 Min", Value="90"},
                                                                    new SelectListItem() {Text = "100 Min", Value="100"},
                                                                    new SelectListItem() {Text = "105 Min", Value="105"},
                                                                    new SelectListItem() {Text = "110 Min", Value="110"},
                                                                    new SelectListItem() {Text = "115 Min", Value="115"},
                                                                    new SelectListItem() {Text = "120 Min", Value="120"}
                                         })">
                            </select>
                        </div>
                    </div>
                    <div class="row" id="BulkERecPatternText" style="display:none">
                        <div class="col s12 m6 pl-0 input-field">
                            <h6>Recurrence Pattern</h6>
                        </div>
                    </div>
                    <div class="row" style="display:none" id="BulkERecPatternCheckBox">
                        <div class="col s2 m2">
                            <p class="check-btn">
                                <label>
                                    <input type="checkbox" class="filled-in checkFirst" asp-for="RecurringAppoinmentDto.IsMondayChecked" />
                                    <span>Monday</span>
                                </label>
                            </p>
                        </div>
                        <div class="col s2 m2">
                            <p class="check-btn">
                                <label>
                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsTuesdayChecked" />
                                    <span>Tuesday</span>
                                </label>
                            </p>
                        </div>
                        <div class="col s2 m2">
                            <p class="check-btn">
                                <label>
                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsWednesdayChecked" />
                                    <span>Wednesday</span>
                                </label>
                            </p>
                        </div>
                        <div class="col s2 m2">
                            <p class="check-btn">
                                <label>
                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsThursdayChecked" />
                                    <span>Thursday</span>
                                </label>
                            </p>
                        </div>
                        <div class="col s2 m2">
                            <p class="check-btn">
                                <label>
                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsFridayChecked" />
                                    <span>Friday</span>
                                </label>
                            </p>
                        </div>
                        <div class="col s2 m2">
                            <p class="check-btn">
                                <label>
                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsSaturdayChecked" />
                                    <span>Saturday</span>
                                </label>

                            </p>
                        </div>
                    </div>
                    <div class="row" id="BulkERecPatternCheckBoxS" style="display:none">
                        <div class="col s2 m2">
                            <p class="check-btn">
                                <label>
                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsSundayChecked" />
                                    <span>Sunday</span>
                                </label>
                            </p>
                        </div>
                    </div>
                    <div class="row">
                        <a href="javascript:void(0);" class="modal-action modal-close Recreate ml-2 btn mt-2 right">Cancel</a>
                        <button type="submit" class="modal-action btn mt-2 add-btn right">Save</button>
                    </div>
                </form>
                <form asp-action="BulkBtwAppointment" asp-controller="Appointment" method="post" id="BulkInBetweenAppointment" style="display:none;">
                    <input hidden="hidden" asp-for="patientAppointmentBasicDto.AppointmentId" />
                    <input hidden="hidden" asp-for="patientAppointmentBasicDto.PatientInfoId" />
                    <input hidden="hidden" id="BtwproviderInfo_Id" asp-for="patientAppointmentBasicDto.ProviderInfoId" />
                    <input asp-for="patientAppointmentBasicDto.AppointmentType" value="In Between" hidden="hidden" />
                    <div class="row" id="InBtwSelect">
                        <div class="col s12 m6 pl-0">
                            <p>Patient Name <span class="required"> * </span></p>
                            <select multiple="multiple" class="select2" id="BtwExact" asp-for="patientAppointmentBasicDto.PatientId" data-placeholder="Select Patient Name"
                                    asp-items="@(new SelectList(Model.patientListWithUsers,"PatientInfoId","FullName"))">
                            </select>
                        </div>
                    </div>
                    <div class="row" id="InBtwMake">
                        <div class="col col s12 m6 pl-0">
                            <p class="check-btn">
                                <label>
                                    <input type="checkbox" id="BulkBRecCheck" onclick="BulkBRecurrence()" class="filled-in checkFirst" />
                                    <span>Make it recursive</span>
                                </label>
                            </p>
                        </div>
                    </div>
                    <div class="row" id="BulkInBtwField">
                        <div class="col s6 m3 pl-0">
                            <p>Date <span class="required"> * </span></p>
                            <input type="text" class="datepicker text-input Bulkapp_empty" asp-for="patientAppointmentBasicDto.Date" placeholder="Select Date">
                            <span class="required" asp-validation-for="patientAppointmentBasicDto.Date"></span>

                        </div>
                        <div class="col s6 m3">
                            <p>Start Time <span class="required"> * </span></p>
                            <input type="text" asp-for="patientAppointmentBasicDto.StartTime" class="time-picker text-input Bulkapp_empty" placeholder="Select Start Time">
                            <span class="required" asp-validation-for="patientAppointmentBasicDto.StartTime"></span>
                        </div>
                        <div class="col s6 m3">
                            <p>End Time <span class="required"> * </span></p>
                            <input type="text" class="time-picker text-input Bulkapp_empty" asp-for="patientAppointmentBasicDto.EndTime" placeholder="Select End Time">
                            <span class="required" asp-validation-for="patientAppointmentBasicDto.EndTime"></span>

                        </div>
                        <div class="col s6 m3">
                            <p>Duration<span class="required"> * </span></p>
                            <select class="select2" id="betweenSelec2" asp-for="patientAppointmentBasicDto.Duration" data-placeholder="Select Duration" asp-items="@( new List<SelectListItem>{
                                                                 new SelectListItem() {Text = "", Value=""},
                                                                 new SelectListItem() {Text = "5 Min", Value="5"},
                                                                    new SelectListItem() {Text = "10 Min", Value="10"},
                                                                    new SelectListItem() {Text = "15 Min", Value="15"},
                                                                    new SelectListItem() {Text = "20 Min", Value="20"},
                                                                    new SelectListItem() {Text = "25 Min", Value="25"},
                                                                    new SelectListItem() {Text = "30 Min", Value="30"},
                                                                    new SelectListItem() {Text = "35 Min", Value="35"},
                                                                    new SelectListItem() {Text = "40 Min", Value="40"},
                                                                    new SelectListItem() {Text = "45 Min", Value="45"},
                                                                    new SelectListItem() {Text = "50 Min", Value="50"},
                                                                    new SelectListItem() {Text = "55 Min", Value="55"},
                                                                    new SelectListItem() {Text = "60 Min", Value="60"},
                                                                    new SelectListItem() {Text = "65 Min", Value="65"},
                                                                    new SelectListItem() {Text = "70 Min", Value="70"},
                                                                    new SelectListItem() {Text = "75 Min", Value="75"},
                                                                    new SelectListItem() {Text = "80 Min", Value="80"},
                                                                    new SelectListItem() {Text = "85 Min", Value="85"},
                                                                    new SelectListItem() {Text = "90 Min", Value="90"},
                                                                    new SelectListItem() {Text = "100 Min", Value="100"},
                                                                    new SelectListItem() {Text = "105 Min", Value="105"},
                                                                    new SelectListItem() {Text = "110 Min", Value="110"},
                                                                    new SelectListItem() {Text = "115 Min", Value="115"},
                                                                    new SelectListItem() {Text = "120 Min", Value="120"}
                                         })">
                            </select>
                        </div>
                    </div>
                    <div class="row" id="BulkBtwFormButton">
                        <a href="javascript:void(0);" class="modal-action modal-close Recreate ml-2 btn mt-2 right">Cancel</a>
                        <button type="submit" class="modal-action btn mt-2 add-btn right">Save</button>
                    </div>
                </form>
                <form asp-action="BulkBtwRecAppointment" asp-controller="Appointment" method="post" id="BulkInBtwRecurringForm" style="display:none">
                    <input hidden="hidden" asp-for="RecurringAppoinmentDto.AppointmentId" />
                    <input hidden="hidden" asp-for="RecurringAppoinmentDto.PatientInfoId" />
                    <input hidden="hidden" id="BtwRecproviderInfo_Id" asp-for="RecurringAppoinmentDto.ProviderInfoId" />
                    <input asp-for="RecurringAppoinmentDto.AppointmentType" value="In Between" hidden="hidden" />
                    <div class="row" id="InBtwRecSelect">
                        <div class="col s12 m6 pl-0">
                            <p>Patient Name <span class="required"> * </span></p>
                            <select multiple="multiple" class="select2" asp-for="RecurringAppoinmentDto.PatientId" data-placeholder="Select Patient Name"
                                    asp-items="@(new SelectList(Model.patientListWithUsers,"PatientInfoId","FullName"))">
                            </select>
                        </div>
                    </div>
                    <div class="row" id="InBtwMakeRec">
                        <div class="col col s12 m6 pl-0">
                            <p class="check-btn">
                                <label>
                                    <input type="checkbox" id="BulkBRecCheck2" onclick="BulkBRecurrence2()" class="filled-in checkFirst" />
                                    <span>Make it recursive</span>
                                </label>
                            </p>
                        </div>
                    </div>
                    <div class="row" style="display:none" id="BulkBRecRangeTimeText">
                        <div class="col s12 m6 pl-0">
                            <h6>Range of Recurrence</h6>
                        </div>
                        <div class="col s12 m6">
                            <h6>Appointment Time</h6>
                        </div>
                    </div>
                    <div class="row" style="display:none" id="BulkBRecRangeTimeField">
                        <div class="col s6 m3 pl-0">
                            <p>Start Date <span class="required"> * </span></p>
                            <input type="text" id="BulkinBtwSDate" asp-for="RecurringAppoinmentDto.Date" class="sBtwDate datepicker Bulkapp_empty inBtwSDate text-input" placeholder="Select Start Date">
                            <span class="required" asp-validation-for="RecurringAppoinmentDto.Date"></span>
                        </div>
                        <div class="col s6 m3">
                            <p>End Date <span class="required"> * </span></p>
                            <input type="text" id="BulkinBtwEDate" asp-for="RecurringAppoinmentDto.EndDate" class="eBtwDate Bulkapp_empty inBtwEDate text-input" placeholder="Select End Date">
                            <span class="required" asp-validation-for="RecurringAppoinmentDto.EndDate"></span>
                        </div>
                        <div class="col s6 m3">
                            <p>Start Time <span class="required"> * </span></p>
                            <input type="text" asp-for="RecurringAppoinmentDto.StartTime" class="time-picker text-input Bulkapp_empty" placeholder="Select Start Time">
                            <span class="required" asp-validation-for="RecurringAppoinmentDto.StartTime"></span>

                        </div>
                        <div class="col s6 m3">
                            <p>End Time <span class="required"> * </span></p>
                            <input type="text" asp-for="RecurringAppoinmentDto.EndTime" class="time-picker text-input Bulkapp_empty" placeholder="Select End Time">
                            <span class="required" asp-validation-for="RecurringAppoinmentDto.EndTime"></span>

                        </div>
                     </div>
                    <div class="row">
                        <div class="col s6 m3 pl-0">
                            <p>Duration<span class="required"> * </span></p>
                            <select class="select2" asp-for="patientAppointmentBasicDto.Duration" data-placeholder="Select Duration" asp-items="@( new List<SelectListItem>{
                                                                 new SelectListItem() {Text = "", Value=""},
                                                                 new SelectListItem() {Text = "5 Min", Value="5"},
                                                                    new SelectListItem() {Text = "10 Min", Value="10"},
                                                                    new SelectListItem() {Text = "15 Min", Value="15"},
                                                                    new SelectListItem() {Text = "20 Min", Value="20"},
                                                                    new SelectListItem() {Text = "25 Min", Value="25"},
                                                                    new SelectListItem() {Text = "30 Min", Value="30"},
                                                                    new SelectListItem() {Text = "35 Min", Value="35"},
                                                                    new SelectListItem() {Text = "40 Min", Value="40"},
                                                                    new SelectListItem() {Text = "45 Min", Value="45"},
                                                                    new SelectListItem() {Text = "50 Min", Value="50"},
                                                                    new SelectListItem() {Text = "55 Min", Value="55"},
                                                                    new SelectListItem() {Text = "60 Min", Value="60"},
                                                                    new SelectListItem() {Text = "65 Min", Value="65"},
                                                                    new SelectListItem() {Text = "70 Min", Value="70"},
                                                                    new SelectListItem() {Text = "75 Min", Value="75"},
                                                                    new SelectListItem() {Text = "80 Min", Value="80"},
                                                                    new SelectListItem() {Text = "85 Min", Value="85"},
                                                                    new SelectListItem() {Text = "90 Min", Value="90"},
                                                                    new SelectListItem() {Text = "100 Min", Value="100"},
                                                                    new SelectListItem() {Text = "105 Min", Value="105"},
                                                                    new SelectListItem() {Text = "110 Min", Value="110"},
                                                                    new SelectListItem() {Text = "115 Min", Value="115"},
                                                                    new SelectListItem() {Text = "120 Min", Value="120"}
                                         })">
                            </select>
                        </div>

                    </div>
                    
                    <div class="row" id="BulkBRecPatternText" style="display:none">
                        <div class="col s12 m6 pl-0 input-field">
                            <h6>Recurrence Pattern</h6>
                        </div>
                    </div>
                    <div class="row" style="display:none" id="BulkBRecPatternCheckBox">
                        <div class="col s2 m2">
                            <p class="check-btn">
                                <label>
                                    <input type="checkbox" class="filled-in checkFirst" asp-for="RecurringAppoinmentDto.IsMondayChecked" />
                                    <span>Monday</span>
                                </label>
                            </p>
                        </div>
                        <div class="col s2 m2">
                            <p class="check-btn">
                                <label>
                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsTuesdayChecked" />
                                    <span>Tuesday</span>
                                </label>
                            </p>
                        </div>
                        <div class="col s2 m2">
                            <p class="check-btn">
                                <label>
                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsWednesdayChecked" />
                                    <span>Wednesday</span>
                                </label>
                            </p>
                        </div>
                        <div class="col s2 m2">
                            <p class="check-btn">
                                <label>
                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsThursdayChecked" />
                                    <span>Thursday</span>
                                </label>
                            </p>
                        </div>
                        <div class="col s2 m2">
                            <p class="check-btn">
                                <label>
                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsFridayChecked" />
                                    <span>Friday</span>
                                </label>
                            </p>
                        </div>
                        <div class="col s2 m2">
                            <p class="check-btn">
                                <label>
                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsSaturdayChecked" />
                                    <span>Saturday</span>
                                </label>
                            </p>
                        </div>
                    </div>
                    <div class="row" id="BulkBRecPatternCheckBoxS" style="display:none">
                        <div class="col s2 m2">
                            <p class="check-btn">
                                <label>
                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsSundayChecked" />
                                    <span>Sunday</span>
                                </label>
                            </p>
                        </div>
                    </div>
                    <div class="row">
                        <a href="javascript:void(0);" class="modal-action modal-close Recreate ml-2 btn mt-2 right">Cancel</a>
                        <button type="submit" class="modal-action btn mt-2 add-btn right">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

</div>
<div id="AppointmentUpdateModal" class="modal">
    <div class="modal-content">
        <div class="row">
            <div class="col s12 m8 pl-0">
                <h5>Reschedule Appointment</h5>
            </div>
            <div class="col s12 m4 mt-2">
                <h6>Patient Id : <span class="modal-title"></span></h6>
            </div>
        </div>

        <hr />
        <div class="row">
            <div class="col m12">
                <form id="exist-appoint1" asp-action="Reschedule" asp-controller="Appointment" method="post" style="display:none">
                    <input hidden="hidden" id="appointment_Id" asp-for="patientAppointmentBasicDto.AppointmentId" />
                    <input hidden="hidden" id="patientInfo_Id" asp-for="patientAppointmentBasicDto.PatientInfoId" />
                    <input hidden="hidden" id="providerInfo_Id" asp-for="patientAppointmentBasicDto.ProviderInfoId" />
                    <input hidden="hidden" id="recursion_no" asp-for="patientAppointmentBasicDto.RecursionNo" />

                    <input asp-for="patientAppointmentBasicDto.AppointmentType" value="Exact" id="appointmentType1" hidden="hidden" />
                    <div class="row">
                        <div class="col s12 m6 pl-0">
                            <p>Patient Name <span class="required"> * </span></p>
                            <input type="text" id="EPatFullName" asp-for="patientAppointmentBasicDto.PatientInfoId" disabled class="datepicker text-input" placeholder="Select Date">

                        </div>
                        <div class="col s12 m6">
                            <p>Date <span class="required"> * </span></p>
                            <input type="text" id="exactDate1" asp-for="patientAppointmentBasicDto.Date" class="datepicker text-input" placeholder="Select Date">
                            <span class="required" asp-validation-for="patientAppointmentBasicDto.Date"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col s12 m6 pl-0">
                            <p>Exact Time <span class="required"> * </span></p>
                            <input type="text" id="exactTime1" class="time-picker text-input" asp-for="patientAppointmentBasicDto.ExactTime" placeholder="Select Exact Time">
                            <span class="required" asp-validation-for="patientAppointmentBasicDto.ExactTime"></span>

                        </div>
                    </div>

                    <a href="javascript:void(0);" class="modal-action modal-close Recreate ml-2 btn mt-2 right">Cancel</a>

                    <a href="javascript:void(0);" class="right modal-action DeleteappointBtn  ml-2 mt-2 btn Recreate ">Delete</a>

                    <button type="submit" class="modal-action btn mt-2 add-btn right">Save</button>
                </form>
                <form id="frame-appoint1" asp-action="Reschedule" asp-controller="Appointment" method="post" style="display:none">
                    <input hidden="hidden" id="appointment_Id2" asp-for="patientAppointmentBasicDto.AppointmentId" />
                    <input hidden="hidden" id="patientInfo_Id2" asp-for="patientAppointmentBasicDto.PatientInfoId" />
                    <input hidden="hidden" id="providerInfo_Id2" asp-for="patientAppointmentBasicDto.ProviderInfoId" />
                    <input hidden="hidden" id="recursion_no2" asp-for="patientAppointmentBasicDto.RecursionNo" />

                    <input asp-for="patientAppointmentBasicDto.AppointmentType" value="In Between" id="appointmentType2" hidden="hidden" />
                    <div class="row">
                        <div class="col s12 m6 pl-0">
                            <p>Patient Name <span class="required"> * </span></p>
                            <input type="text" id="BPatFullName" asp-for="patientAppointmentBasicDto.PatientInfoId" disabled class="datepicker text-input" placeholder="Select Date">


                        </div>
                        <div class="col s12 m6">
                            <p>Date <span class="required"> * </span></p>
                            <input type="text" id="btwDate1" asp-for="patientAppointmentBasicDto.Date" class="datepicker text-input" placeholder="Select Date">
                            <span class="required" asp-validation-for="patientAppointmentBasicDto.Date"></span>

                        </div>
                    </div>
                    <div class="row">
                        <div class="col s12 m6 pl-0">
                            <p>Start Time <span class="required"> * </span></p>
                            <input type="text" id="btwSTime1" class="time-picker text-input" asp-for="patientAppointmentBasicDto.StartTime" placeholder="Select Start Time">
                            <span class="required" asp-validation-for="patientAppointmentBasicDto.StartTime"></span>

                        </div>

                        <div class="col s12 m6">
                            <p>End Time </p>
                            <input type="text" id="btwETime1" class="time-picker text-input" asp-for="patientAppointmentBasicDto.EndTime" placeholder="Select End Time">
                        </div>
                    </div>
                    <a href="javascript:void(0);" class="modal-action modal-close Recreate ml-2 btn mt-2 right">Cancel</a>

                    <a href="javascript:void(0);" class="right modal-action DeleteappointBtn  ml-2 mt-2 btn Recreate ">Delete</a>

                    <button type="submit" class="modal-action btn mt-2 add-btn right">Save</button>
                </form>

            </div>
        </div>

    </div>
</div>