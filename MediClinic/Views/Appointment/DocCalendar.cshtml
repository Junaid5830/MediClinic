@model MediClinic.Models.AppointmentViewModel
@using  MediClinic.Services.Interfaces.SessionManager
@inject ISessionManager _sessionManager
@{
    ViewData["Title"] = "DocCalendar";
    Layout = "~/Views/Shared/_LayoutElite.cshtml";
    var ProviderID = _sessionManager.GetProviderInfoId();
    var doctorName = _sessionManager.GetProviderName();
    var roleId = _sessionManager.GetRoleId();
    var currUserId = _sessionManager.GetUserId();
}
@section styles{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.0/jquery-confirm.min.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.0.1/fullcalendar.css" rel="stylesheet" />
    <link href="~/app-assets/base/jquery-ui.css" rel="stylesheet" />
    <link href="~/css/timePicker.css" rel="stylesheet" />

    <style>
        #contextual-menu ul li {
            cursor: pointer !important
        }

        .contextual-menu-container {
            z-index: 999;
            border: 1px solid #000;
            width: 160px;
            background-color: #e9ecef;
            border-radius: 4px;
            color: #000;
            display: none;
            box-shadow: 4px 4px 20px -6px #e2e2e2 !important
        }

        .contextual-menu-ul {
            list-style: none;
            padding-left: 0px;
            font-size: 12px;
            margin-bottom: 0px;
        }

            .contextual-menu-ul li {
                border-bottom: 1px solid;
                padding: 5px 10px;
                text-transform: uppercase;
            }

                .contextual-menu-ul li:hover {
                    background-color: rgb(33, 150, 243);
                    color: #fff;
                }
        /* Each of the items in the list */
        .custom-menu li {
            padding: 8px 12px;
            cursor: pointer;
            list-style-type: none;
            transition: all .3s ease;
        }

            .custom-menu li:hover {
                background-color: #DEF;
            }

        .nav-tabs .nav-link:focus, .nav-tabs .nav-link:hover {
            background: #547cea !important
        }

            .nav-tabs .nav-link:focus, .nav-tabs .nav-link:hover span {
                color: #fff !important
            }

        .nav-tabs .nav-link {
            border: 1px solid #e9ecef !important;
        }

        .modal .custom-radio {
            margin-top: 10px !important;
        }

        @@media screen and (max-width: 768px) {
            #AppointmentModal .modal-dialog {
                max-width: 500px !important;
            }
        }

        #AppointmentModal .modal-dialog {
            max-width: 55%
        }

        .modal-dialog {
            max-width: 50% !important;
        }

        .card {
            padding: 2%;
        }

        #loading {
            width: 100%;
            height: 100%;
            top: 93px;
            position: absolute;
            display: block;
            opacity: 1;
            background-color: #fff;
            z-index: 1;
            text-align: center;
        }

        #loading-image {
            position: absolute;
            top: 100px;
            left: 240px;
            z-index: 100;
        }

        #loading > div {
            margin-top: 25%;
            width: 18px;
            height: 18px;
            background-color: #333;
            border-radius: 100%;
            display: inline-block;
            -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;
            animation: sk-bouncedelay 1.4s infinite ease-in-out both;
        }

        #loading .bounce1 {
            -webkit-animation-delay: -0.32s;
            animation-delay: -0.32s;
        }

        #loading .bounce2 {
            -webkit-animation-delay: -0.16s;
            animation-delay: -0.16s;
        }

        @@-webkit-keyframes sk-bouncedelay {
            0%, 80%, 100% {
                -webkit-transform: scale(0)
            }

            40% {
                -webkit-transform: scale(1.0)
            }
        }

        @@keyframes sk-bouncedelay {
            0%, 80%, 100% {
                -webkit-transform: scale(0);
                transform: scale(0);
            }

            40% {
                -webkit-transform: scale(1.0);
                transform: scale(1.0);
            }
        }

        .nav-tabs .nav-link.active {
            background-color: #547cea !important;
            color: #fff !important;
        }

        .nav-link.active span {
            color: #fff !important;
        }

        .nav-link span {
            color: #6b6f82 !important;
        }

        .fc-day-grid-event {
            margin: 1px 2px 0;
        }

        .calendar-event, .fc-event {
            text-align: left !important;
            border-radius: 4px;
        }

        .fc .fc-event {
            padding: 4px 7px;
            color: #fff;
            border: none;
            background: #2196f3;
        }

        .fc-calMonth-button {
            margin-right: 5px !important;
        }

        .fc .fc-button {
            border-radius: 4px;
            color: #000 !important;
            background: #eff1f7 !important;
            height: 2.5em !important;
            border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) rgba(0,0,0,.25)
        }

        button.fc-prev-button.fc-button.fc-state-default.fc-corner-left.fc-corner-right {
            border-radius: 50%;
            padding: 5px !important;
        }

        button.fc-next-button.fc-button.fc-state-default.fc-corner-left.fc-corner-right {
            border-radius: 50%;
            padding: 5px !important;
        }

        .fc-toolbar h2 {
            line-height: 38px !important
        }

        .fc-toolbar {
            margin-bottom: 0px !important;
        }

        .fc-basic-view .fc-body .fc-row {
            min-height: 8rem;
        }
        .NotShow {
            background-color: coral;
            color: white;
        }

        .Pending {
            background-color: cadetblue;
            color: white;
        }

        .Canceled {
            background-color: pink;
            color: white;
        }

        .Rescheduled {
            background-color: yellow;
            color: white;
        }

        .NotConfirmed {
            background-color: red;
            color: white;
        }

        .Completed {
            background-color: orange;
            color: white;
        }

        .InSession {
            background-color: blue;
            color: white;
        }

        .Arrived {
            background-color: paleturquoise;
            color: white;
        }

        .CheckedIn {
            background-color: green;
            color: white;
        }
        .CheckedOut {
            background-color: cyan;
            color: white;
        }
        }
    </style>
    }
    @section scripts{
        <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
        <script src="~/lib/jquery.unobtrusive-ajax.min.js"></script>
        <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
        <script src="~/app-assets/js/jquery.form.js"></script>
        <script src="~/app-assets/base/jquery-ui.js"></script>
        <script src="~/HunterTimePicker/js/jquery-timepicker.js"></script>
        <script src="~/app-assets/vendors/fullcalendar/lib/jquery-ui.min.js"></script>
        <script src="~/app-assets/vendors/fullcalendar/js/fullcalendar.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.0/jquery-confirm.min.js"></script>
        <script>
         function EvenCreated(data) {
             debugger
             $(".checkmark").show().fadeOut(6000);
             $('#event-calendar').fullCalendar('removeEvents');
             $("#EventModal").modal("hide");
             $('#event-calendar').fullCalendar('refetchEvents');
            }
            function DeleteEvent(eventId) {
                debugger

                  $.ajax({
                       type: "GET",
                        url: '@Url.Action("DeleteEvent", "Appointment")',
                      data: { eventId: eventId },

                      success: function (data) {

                          $(".checkmark").show().fadeOut(6000);
                          $('#event-calendar').fullCalendar('removeEvents');
                          $("#EventModal").modal("hide");
                          $("#eventModal2").modal("hide");
                          $('#event-calendar').fullCalendar('refetchEvents');

                            },
                            error: function (result) {
                             alert("Error");
                       }
                });

            }


             function UpdateEvent(eventId) {
                $("#eventModal2").modal("hide");
                  $.ajax({
                       type: "GET",
                        url: '@Url.Action("GetEventById", "Appointment")',
                      data: { eventId: eventId },

                      success: function (data) {
                          debugger
                          var start = data.startDate.split("T");
                          var startTime = data.startTime.split("T");
                          //start = Date.parse(start);
                           
                        
                          if (data.endDate != null) {
                              let end = data.endDate.split("T");
                              $("#endDateEvent").val(end[0]);
                          }
                          if (data.endTime != null) {
                              let endtime = data.endTime.split("T");
                              $("#endTimeEvent").val(endtime[0]);
                          }
                          
                          //end = Date.parse(end);
                          $("#eventId").val(data.eventId);
                          $("#userId").val(data.userId);
                          $("#eventTitle").val(data.eventTitle);
                          $("#startDateEvent").val(start[0]);
                          
                          $("#startTimeEvent").val(startTime[0]);
                          
                          $("#EventModal").modal("show");
                            },
                            error: function (result) {
                             alert("Error");
                       }
                });
            }
        $(document).ready(function () {

            $('#UpcomingDateDoctor').datepicker({
                changeMonth: true,
                changeYear: true,

                yearRange: "c-100:c+10",
                showButtonPanel: true,
                dateFormat: "mm/dd/yy",
                onSelect: function (date) {
                    $.post("/Appointment/AppointmentListForDoctorCalendar", { dateTime: date, Id:@ProviderID }).done(function (data) {
                        $('#IPP_table').html('');
                        $('#IPP_table').html(data);
                        $('#myTableEUO').DataTable({
                            "lengthMenu": false,
                            "lengthChange": false,
                            "scrollX": false,
                            "searching": false,
                            "responsive": true,
                            "info": false,
                            'order': [], 'columnDefs': [{ "targets": [0], "orderable": false }],

                        });
                        ColorChange();
                    });
                },

            });


        })
        $(function () {
            $('#myTableEUO').DataTable({
                "lengthMenu": false,
                "lengthChange": false,
                "scrollX": false,
                "searching": false,
                "responsive": true,
                "info": false,
                'order': [], 'columnDefs': [{ "targets": [0], "orderable": false }],

            });

        });

        function ColorChange() {

            var change = document.getElementsByClassName("forColorChange");
            console.log(change);
        }
        $(document).ready(function () {


            $("#Doc-calendar .fc-center h2").on('click', function () {

                $("#Doc-calendar .fc-center").hide();

                $("#Doc-calendar .fc-center").append("<select  class='Docselect2 months'></select>");
                $("#Doc-calendar .fc-center button").hide();
                $("#Doc-calendar .fc-center h2").hide();
                $("#Doc-calendar .fc-center").show();

                $(".Docselect2").select2();
                var $Docmonth = $('.months');
                $('.months').empty();
                var month = $('#Doc-calendar').fullCalendar('getDate');
                var initial = month.format('YYYY-MM');
                month.add(-1000, 'month');
                for (var i = 0; i < 1200; i++) {
                    var opt = document.createElement('option');
                    opt.value = month.format('YYYY-MM-01');
                    opt.text = month.format('MMM YYYY');
                    opt.selected = initial === month.format('YYYY-MM');
                    $Docmonth.append(opt);
                    month.add(1, 'month');
                }
                $('.months').on('change', function () {

                    $('#Doc-calendar').fullCalendar('gotoDate', $(this).val());
                    $(".Docselect2").remove();
                    $("#Doc-calendar .fc-center .select2").remove();

                    $("#Doc-calendar .fc-center button").show();
                    $("#Doc-calendar .fc-center h2").show();
                    $("#Doc-calendar .fc-center").show();
                });
            });
            $("#ot-calendar .fc-center h2").on('click', function () {
                $("#ot-calendar .fc-center").hide();

                $("#ot-calendar .fc-center").append("<select  class='Docselect2 months'></select>");
                $("#ot-calendar .fc-center button").hide();
                $("#ot-calendar .fc-center h2").hide();
                $("#ot-calendar .fc-center").show();

                $(".Docselect2").select2();
                var $Docmonth = $('.months');
                $('.months').empty();
                var month = $('#ot-calendar').fullCalendar('getDate');
                var initial = month.format('YYYY-MM');
                month.add(-1000, 'month');
                for (var i = 0; i < 1200; i++) {
                    var opt = document.createElement('option');
                    opt.value = month.format('YYYY-MM-01');
                    opt.text = month.format('MMM YYYY');
                    opt.selected = initial === month.format('YYYY-MM');
                    $Docmonth.append(opt);
                    month.add(1, 'month');
                }
                $('.months').on('change', function () {

                    $('#ot-calendar').fullCalendar('gotoDate', $(this).val());
                    $(".Docselect2").remove();
                    $("#ot-calendar .fc-center .select2").remove();

                    $("#ot-calendar .fc-center button").show();
                    $("#ot-calendar .fc-center h2").show();
                    $("#ot-calendar .fc-center").show();
                });
            });
            $("#ot-calendar .fc-center h2").on('click', function () {
                $("#OPD-calendar .fc-center").hide();

                $("#OPD-calendar .fc-center").append("<select  class='Docselect2 months'></select>");
                $("#OPD-calendar .fc-center button").hide();
                $("#OPD-calendar .fc-center h2").hide();
                $("#OPD-calendar .fc-center").show();

                $(".Docselect2").select2();
                var $Docmonth = $('.months');
                $('.months').empty();
                var month = $('#OPD-calendar').fullCalendar('getDate');
                var initial = month.format('YYYY-MM');
                month.add(-1000, 'month');
                for (var i = 0; i < 1200; i++) {
                    var opt = document.createElement('option');
                    opt.value = month.format('YYYY-MM-01');
                    opt.text = month.format('MMM YYYY');
                    opt.selected = initial === month.format('YYYY-MM');
                    $Docmonth.append(opt);
                    month.add(1, 'month');
                }
                $('.months').on('change', function () {

                    $('#OPD-calendar').fullCalendar('gotoDate', $(this).val());
                    $(".Docselect2").remove();
                    $("#OPD-calendar .fc-center .select2").remove();

                    $("#OPD-calendar .fc-center button").show();
                    $("#OPD-calendar .fc-center h2").show();
                    $("#OPD-calendar .fc-center").show();
                });
            });

        });

        $(function () {
            var dateFormat = "mm/dd/yy",
                from = $(".sDate")
                    .datepicker({
                        defaultDate: "+1w",
                        changeMonth: true,
                        numberOfMonths: 1,
                        minDate: 0
                    })
                    .on("change", function () {
                        to.datepicker("option", "minDate", getDate(this));
                    }),
                to = $(".eDate").datepicker({
                    defaultDate: "+1w",
                    changeMonth: true,
                    numberOfMonths: 1
                })
                    .on("change", function () {
                        from.datepicker("option", "maxDate", getDate(this));
                    });

            function getDate(element) {
                var date;
                try {
                    date = $.datepicker.parseDate(dateFormat, element.value);
                } catch (error) {
                    date = null;
                }

                return date;
            }
        });
        $(function () {
            var dateFormat = "mm/dd/yy",
                from = $(".sBtwDate")
                    .datepicker({
                        defaultDate: "+1w",
                        changeMonth: true,
                        numberOfMonths: 1,
                        minDate: 0
                    })
                    .on("change", function () {
                        to.datepicker("option", "minDate", getDate(this));
                    }),
                to = $(".eBtwDate").datepicker({
                    defaultDate: "+1w",
                    changeMonth: true,
                    numberOfMonths: 1
                })
                    .on("change", function () {
                        from.datepicker("option", "maxDate", getDate(this));
                    });

            function getDate(element) {
                var date;
                try {
                    date = $.datepicker.parseDate(dateFormat, element.value);
                } catch (error) {
                    date = null;
                }

                return date;
            }
        });
        $('.datepicker').datepicker({
            changeMonth: true,
            changeYear: true,
            yearRange: "c-100:c+10",
            showButtonPanel: true,
            dateFormat: "mm/dd/yy",
            minDate: 0
        });
        $(".time-picker").hunterTimePicker();

        $(".select2").select2();
        var events = [];
        var OTevents = [];
        var OPDevents = [];
        var Events = [];
        var eventId = 0;

        var appId = 0;
        var PatientName = "";
        var patientId = 0;
        var check_Btn = false;
        var recursive_No;
        var currentObj;
        $('#Doc-calendar').fullCalendar({
            loading: function (bool) {
                $('#loading').show(); // Add your script to show loading
            },
            eventAfterAllRender: function (view) {
                $('#loading').hide(); // remove your loading
            },
         defaultView: '@ViewBag.CalendarDefault',
            viewRender: function (views, element) {
                var view = $('#Doc-calendar').fullCalendar('getView');
                if (view.type == 'listMonth') {
                    $.each(element.find('.fc-widget-header'), function () {
                        $(this).attr('colspan', 4);

                    });
                }
            },
            customButtons: {
                monthViewButton: {
                    text: 'Month View',
                    click: function () {
                        $('#Doc-calendar').fullCalendar('changeView', 'month');
                    }

                }, calMonth: {

                    click: function () {
                        $(".fc-month-button").trigger('click');
                    }
                },
                monthListViewButton: {
                    text: 'List View',
                    click: function () {
                        $('#Doc-calendar').fullCalendar('changeView', 'listMonth');
                    }

                }
            },
            renderEvent: function () {
                $('.fc-list-item-time').htlm("<i class='ti-menu'>menu</i>");
            },
            header: {
                left: 'agendaDay , agendaWeek,  month',
                center: 'prev, title , next',
                right: 'calMonth,listMonth',
            },
            editable: true,
            eventDrop: function (event, delta, revertFunc) {

                var day = event.start.clone();
                var moment2 = $('#Doc-calendar').fullCalendar('getDate');

                if (day < moment2) {
                    new PNotify({
                        title: 'Error!',
                        text: "Can't booked slot for past Date!",
                        delay: 1500,
                        type: 'error',
                        addclass: 'pnotify-center'
                    });
                    var PatFilter = $('#seleciona option:selected').val();

                    if (PatFilter == "") {
                        $('#Doc-calendar').fullCalendar('removeEvents');
                        $('#Doc-calendar').fullCalendar('refetchEvents');
                    }
                    else {
                        $('#Doc-calendar').fullCalendar('removeEvents');
                        LoadAppointmentData(PatFilter);
                    }
                    return false;

                }
                //full Calender
                var Date;
                eventDate = event.start.format();
                var Date = eventDate.split("T");
                var recursive;
                if (event.recursionNo == "") {
                    recursive = '';
                }
                else {
                    recursive = event.recursionNo;
                }
                //if (event.Name == "Exact") {
                //    Data = {
                //        "patientAppointmentBasicDto.AppointmentType": event.Name,
                //        "patientAppointmentBasicDto.AppointmentId": event.appointId,
                //        "patientAppointmentBasicDto.PatientInfoId": event.patientId,
                //        "patientAppointmentBasicDto.StartTime": event.bSTime,
                //        "patientAppointmentBasicDto.EndTime": event.bETime,
                //        "patientAppointmentBasicDto.DepartmentType": event.department,
                //        "patientAppointmentBasicDto.Date": Date[0],
                //        "patientAppointmentBasicDto.ProviderInfoId": event.providerId,
                //        "patientAppointmentBasicDto.RecursionNo": recursive
                //    }
                //}
                //else {
                    Data = {
                        "patientAppointmentBasicDto.AppointmentType": event.Name,
                        "patientAppointmentBasicDto.AppointmentId": event.appointId,
                        "patientAppointmentBasicDto.PatientInfoId": event.patientId,
                        "patientAppointmentBasicDto.StartTime": event.bSTime,
                        "patientAppointmentBasicDto.EndTime": event.bETime,
                        "patientAppointmentBasicDto.DepartmentType": event.department,
                        "patientAppointmentBasicDto.Date": Date[0],
                        "patientAppointmentBasicDto.ProviderInfoId": event.providerId,
                        "patientAppointmentBasicDto.RecursionNo": recursive
                    }

                $.confirm({
                    title: 'Confirm!',
                    content: 'Do you want to change date of this appointment?',
                    buttons: {
                        confirm: function () {
                            DragSaveEvent(Data);
                        },
                        cancel: function () {
                            var PatFilter = $('#seleciona option:selected').val();
                            if (PatFilter == "") {
                                $('#Doc-calendar').fullCalendar('removeEvents');
                                $('#Doc-calendar').fullCalendar('refetchEvents');
                            }
                            else {
                                $('#Doc-calendar').fullCalendar('removeEvents');

                               LoadAppointmentData(PatFilter);
                            }
                        }
                    }
                });

            },
            timeFormat: 'h:mm',
            events: function (start, end, timezone, callback)
            {
                $.ajax({
                    type: "GET",
                url: '@Url.Action("ProviderGetCalendarsList", "Appointment", new {Id= ProviderID })',

                success: function (result)
                {
                    function colorFunction(id) {
                        var color = "";
                        if (id == 1) {
                            color = "paleturquoise";
                        }
                        else if (id == 2) {
                            color = "green";
                        } else if (id == 3) {
                            color = "blue";
                        }
                        else if (id == 4) {
                            color = "orange";
                        }
                        else if (id == 5) {
                            color = "red";
                        } else if (id == 6) {
                            color = "yellow";
                        } else if (id == 7) {
                            color = "pink";
                        } else if (id == 8) {
                            color = "cadetblue";
                        } else if (id == 9) {
                            color = "coral";
                        } else if (id == 10) {
                            color = "cyan";
                        } else {
                            color = "#2196f3";
                        }
                        return color;
                    }
                    events = [];
                    $.each(result, function (i, v) {
                        var Date = v.date.split('T');
                        var recursive;
                        if (v.recursionNo == "") {
                            recursive = '';
                        }
                        else {
                            recursive = v.recursionNo;
                        }
                        var TypeName = v.appointmentType;
                        //var DocPatName = "-Dr. " + v.docFirstName + " - " + v.patFirstName;
                        var DocPatName = v.patFirstName;
                        var col = "";
                        col = colorFunction(v.statusId);
                        //call colorFunction
                        //if (v.statusId == 2) {
                        //    col = "green";
                        //}
                        //else {
                        //    col = "#2196f3";
                        //}
                        var PatientName = v.patientFullName;
                        //var provideName = "Dr. " + v.providerInfo.firstName + " " + v.providerInfo.lastName;
                        if (TypeName == "Exact") {

                            //var Exist = v.exactTime.split('T');

                            events.push({
                                title: DocPatName,
                                Name: v.appointmentType,
                                //appointId: v.appointId,
                                start: Date[0] + "T" + v.startTime,
                                endTime: Date[0] + "T" + v.endTime,
                                appointId: v.appointmentId,
                                patientId: v.patientInfoId,
                                patientName: PatientName,
                                providerId: v.providerInfoId,
                                ExactTime: v.startTime,
                                recursionNo: recursive,
                                bSTime: v.startTime,
                                bETime: v.endTime,
                                color: col,
                                department: v.departmentType
                                //startStr: v.startTime,
                                //endStr: v.endTime,
                                //exactTime: v.exactTime
                            });
                        }
                        else {
                            var Time = v.startTime.split('T');
                            var EndTime = v.endTime.split('T');

                            events.push({
                                title: DocPatName,
                                Name: v.appointmentType,
                                //appointId: v.appointId,
                                start: Date[0] + "T" + v.startTime,
                                endTime: Date[0] + "T" + v.endTime,
                                appointId: v.appointmentId,
                                patientId: v.patientInfoId,
                                patientName: PatientName,
                                providerId: v.providerInfoId,
                                bSTime: v.startTime,
                                bETime: v.endTime,
                                recursionNo: recursive,
                                color: col,
                                department: v.departmentType
                            });
                        }
                    })
                    callback(events);
                }
            });
            },
            eventLimit: true,
            eventClick: function (events) {


                if (events.Name == "Exact") {
                    var ExactTimeDate = events.start._i.split('T');
                    var StartTimeDate = events.start._i.split('T');
                    var EndTime = events.endTime.split('T');
                    $("#modal1").modal('show');
                    $("#modal1 .modal-content  .modal-title1").text(events.patientId);
                    $("#modal1 .modal-content  #start_date").text(moment(events.start).format('DD/MM/YYYY'));
                    $("#modal1 .modal-content  #Exact_Time").text(moment(StartTimeDate[1], "H(:mm)").format("HH:mm"));
                    $("#modal1 .modal-content  #end_Exact2").text(moment(EndTime[1], "H(:mm)").format("HH:mm"));
                    $("#modal1 .modal-content  #provider").text(events.patientName);
                    appId = events.appointId;
                    //$("#appointId").val(appointmentId);
                    PatientName = events.patientName;
                    patientId = events.patientId;
                    recursive_No = events.recursionNo;
                }
                else {
                    var StartTimeDate = events.start._i.split('T');
                    var EndTime = events.endTime.split('T');
                    $("#modal2").modal('show');
                    $("#modal2 .modal-content  .modal-title2").text(events.patientId);
                    $("#modal2 .modal-content  #start_date2").text(moment(events.start).format('DD/MM/YYYY'));
                    $("#modal2 .modal-content  #start_time2").text(moment(StartTimeDate[1], "H(:mm)").format("HH:mm"));
                    $("#modal2 .modal-content  #end_time2").text(moment(EndTime[1], "H(:mm)").format("HH:mm"));
                    $("#modal2 .modal-content  #provider_2").text(events.patientName);
                    appId = events.appointId;
                    //$("#appointId").val(appointmentId);
                    PatientName = events.patientName;
                    patientId = events.patientId;
                    recursive_No = events.recursionNo;

                }

                //$("#modal1 .modal-content  .modal-title").text(event.title);


                //$("#modal1 .modal-content  #Exact_Time").text(moment(event.end).format('DD/MM/YYYY'));
                //$("#modal1 .modal-content  #end_time").text(moment(event.end).format('HH:mm'));

            },
            eventMouseover: function (events, jsEvent) {
                var StartTimeDate = events.start._i.split('T');
                if (events.Name == "Exact") {
                    var tooltip = '<div class="tooltipevent" style="width:250px;height:auto;background:#fff;position:absolute;z-index:10001;padding:15px;box-shadow:1px 1px 12px 1px #e2e2e2 !important"> <span style="color:#333">Your Appointment Schedule With Patient Id # ' + events.patientId + ' at ' + moment(StartTimeDate[1], "H(:mm)").format("HH:mm") + ' Time. </span></div>'; var $tool = $(tooltip).appendTo('body');
                    $(this).mouseover(function (e) {
                        $(this).css('z-index', 10000);
                        $tool.fadeIn('500');
                        $tool.fadeTo('10', 1.9);
                    }).mousemove(function (e) {
                        $tool.css('top', e.pageY + 10);
                        $tool.css('left', e.pageX + 20);
                    });

                }
                else {
                    var EndTime = events.endTime.split('T');

                    var tooltip = '<div class="tooltipevent" style="width:250px;height:auto;background:#fff;position:absolute;z-index:10001;padding:15px;box-shadow:1px 1px 12px 1px #e2e2e2 !important"> <span style="color:#333">Your Appointment Schedule With Patient Id # ' + events.patientId + ' is Between ' + moment(StartTimeDate[1], "H(:mm)").format("HH:mm") + ' To ' + moment(EndTime[1], "H(:mm)").format("HH:mm") +' Time. </span></div>'; var $tool = $(tooltip).appendTo('body');
                    $(this).mouseover(function (e) {
                        $(this).css('z-index', 10000);
                        $tool.fadeIn('500');
                        $tool.fadeTo('10', 1.9);
                    }).mousemove(function (e) {
                        $tool.css('top', e.pageY + 10);
                        $tool.css('left', e.pageX + 20);
                    });
                }


            },
            eventMouseout: function (events, jsEvent) {
                $(this).css('z-index', 8);
                $('.tooltipevent').remove();
            },
            eventRender: function (event, element) {
                element.bind('contextmenu', function (e) {
                    e.preventDefault();
                    //alert('Right clicking');
                    showContextualMenu(event, element, e);
                });
            },
            dayClick: function (date, jsEvent, view) {
                $("#contextual-menu").hide();
            },


        });
        $('#ot-calendar').fullCalendar({
            loading: function (bool) {
                $('#loading').show(); // Add your script to show loading
            },
            eventAfterAllRender: function (view) {
                $('#loading').hide(); // remove your loading
            },
            selectable: true,
             defaultView: '@ViewBag.CalendarDefault',
            viewRender: function (views, element) {
                var view = $('#ot-calendar').fullCalendar('getView');
                if (view.type == 'listMonth') {
                    $.each(element.find('.fc-widget-header'), function () {
                        $(this).attr('colspan', 4);

                    });
                }
            },
            customButtons: {
                monthViewButton: {
                    text: 'Month View',
                    click: function () {
                        $('#ot-calendar').fullCalendar('changeView', 'month');
                    }

                }, calMonth: {

                    click: function () {
                        $(".fc-month-button").trigger('click');
                    }
                },
                monthListViewButton: {
                    text: 'List View',
                    click: function () {
                        $('#ot-calendar').fullCalendar('changeView', 'listMonth');
                    }

                }
            },
            renderEvent: function () {
                $('.fc-list-item-time').htlm("<i class='ti-menu'>menu</i>");
            },
            header: {
                left: 'agendaDay , agendaWeek,  month',
                center: 'prev, title , next',
                right: 'calMonth,listMonth',
            },
            editable: true,
             eventDrop: function (event, delta, revertFunc) {

                 var day = event.start.clone();
                 var moment2 = $('#ot-calendar').fullCalendar('getDate');

                if (day < moment2) {
                    new PNotify({
                        title: 'Error!',
                        text: "Can't booked slot for past Date!",
                        delay: 1500,
                        type: 'error',
                        addclass: 'pnotify-center'
                    });
                    var PatFilter = $('#otSelect option:selected').val();

                    if (PatFilter == "") {
                        $('#ot-calendar').fullCalendar('removeEvents');
                        $('#ot-calendar').fullCalendar('refetchEvents');
                    }
                    else {
                        $('#ot-calendar').fullCalendar('removeEvents');
                        LoadOTAppointmentData(PatFilter);
                    }
                    return false;

                }

                var Date;
                eventDate = event.start.format();
                var Date = eventDate.split("T");
                var recursive;
                if (event.recursionNo == "") {
                    recursive = '';
                }
                else {
                    recursive = event.recursionNo;
                }
                if (event.Name == "Exact") {
                    Data = {
                        "patientAppointmentBasicDto.AppointmentType": event.Name,
                        "patientAppointmentBasicDto.AppointmentId": event.appointId,
                        "patientAppointmentBasicDto.PatientInfoId": event.patientId,
                        "patientAppointmentBasicDto.ExactTime": event.ExactTime,
                        "patientAppointmentBasicDto.Date": Date[0],
                        "patientAppointmentBasicDto.ProviderInfoId": event.providerId,
                        "patientAppointmentBasicDto.RecursionNo": recursive
                    }
                }
                else {
                    Data = {
                        "patientAppointmentBasicDto.AppointmentType": event.Name,
                        "patientAppointmentBasicDto.AppointmentId": event.appointId,
                        "patientAppointmentBasicDto.PatientInfoId": event.patientId,
                        "patientAppointmentBasicDto.StartTime": event.bSTime,
                        "patientAppointmentBasicDto.EndTime": event.bETime,
                        "patientAppointmentBasicDto.Date": Date[0],
                        "patientAppointmentBasicDto.ProviderInfoId": event.providerId,
                        "patientAppointmentBasicDto.RecursionNo": recursive
                    }
                }
                $.confirm({
                    title: 'Confirm!',
                    content: 'Do you want to change date of this appointment?',
                    buttons: {
                        confirm: function () {
                            DragSaveEvent(Data);
                        },
                        cancel: function () {
                            var PatFilter = $('#otSelect option:selected').val();
                            if (PatFilter == "") {
                                $('#ot-calendar').fullCalendar('removeEvents');
                                $('#ot-calendar').fullCalendar('refetchEvents');
                            }
                            else {
                                $('#ot-calendar').fullCalendar('removeEvents');

                                LoadOTAppointmentData(PatFilter);
                            }
                        }
                    }
                });

            },
            timeFormat: 'h:mm',
            events: function (start, end, timezone, callback)
            {
                $.ajax({
                    type: "GET",
                url: '@Url.Action("ProviderGetOTCalendarsList", "Appointment", new {Id= ProviderID })',

                success: function (result)
                {

                    OTevents = [];
                    $.each(result, function (i, v) {
                        var Date = v.date.split('T');

                        var recursive;
                        if (v.recursionNo == "") {
                            recursive = '';
                        }
                        else {
                            recursive = v.recursionNo;
                        }
                        var TypeName = v.appointmentType;
                        var DocPatName = "-Dr. " + v.docFirstName + " - " + v.patFirstName;

                        var PatientName = v.patientFullName;
                        //var provideName = "Dr. " + v.providerInfo.firstName + " " + v.providerInfo.lastName;
                        if (TypeName == "Exact") {

                            //var Exist = v.exactTime.split('T');

                            events.push({
                                title: DocPatName,
                                Name: v.appointmentType,
                                //appointId: v.appointId,
                                start: Date[0] + "T" + v.startTime,
                                appointId: v.appointmentId,
                                patientId: v.patientInfoId,
                                patientName: PatientName,
                                providerId: v.providerInfoId,
                                ExactTime: v.startTime,
                                recursionNo: recursive,
                                color: col
                                //startStr: v.startTime,
                                //endStr: v.endTime,
                                //exactTime: v.exactTime
                            });
                        }

                        else {
                            var Time = v.startTime.split('T');
                            var EndTime = v.endTime.split('T');

                            events.push({
                                title: DocPatName,
                                Name: v.appointmentType,
                                //appointId: v.appointId,
                                start: Date[0] + "T" + v.startTime,
                                endTime: Date[0] + "T" + v.endTime,
                                appointId: v.appointmentId,
                                patientId: v.patientInfoId,
                                patientName: PatientName,
                                providerId: v.providerInfoId,
                                bSTime: v.startTime,
                                bETime: v.endTime,
                                recursionNo: recursive,
                                color: col
                            });
                        }
                    })
                    callback(events);
                }
            });
            },
            eventLimit: true,
            eventClick: function (events) {


                if (events.Name == "Exact") {
                    var ExactTimeDate = events.start._i.split('T');
                    $("#modal1").modal('show');
                    $("#modal1 .modal-content  .modal-title1").text(events.patientId);
                    $("#modal1 .modal-content  #start_date").text(moment(events.start).format('DD/MM/YYYY'));
                    $("#modal1 .modal-content  #Exact_Time").text(moment(ExactTimeDate[1], "H(:mm)").format("HH:mm"));
                    $("#modal1 .modal-content  #provider").text(events.patientName);
                    appId = events.appointId;
                    //$("#appointId").val(appointmentId);
                    PatientName = events.patientName;
                    patientId = events.patientId;
                    recursive_No = events.recursionNo;
                }
                else {
                    var StartTimeDate = events.start._i.split('T');
                    var EndTime = events.endTime.split('T');
                    $("#modal2").modal('show');
                    $("#modal2 .modal-content  .modal-title2").text(events.patientId);
                    $("#modal2 .modal-content  #start_date2").text(moment(events.start).format('DD/MM/YYYY'));
                    $("#modal2 .modal-content  #start_time2").text(moment(StartTimeDate[1], "H(:mm)").format("HH:mm"));
                    $("#modal2 .modal-content  #end_time2").text(moment(EndTime[1], "H(:mm)").format("HH:mm"));
                    $("#modal2 .modal-content  #provider_2").text(events.patientName);
                    appId = events.appointId;
                    //$("#appointId").val(appointmentId);
                    PatientName = events.patientName;
                    patientId = events.patientId;
                    recursive_No = events.recursionNo;

                }

                //$("#modal1 .modal-content  .modal-title").text(event.title);


                //$("#modal1 .modal-content  #Exact_Time").text(moment(event.end).format('DD/MM/YYYY'));
                //$("#modal1 .modal-content  #end_time").text(moment(event.end).format('HH:mm'));

            },
            eventMouseover: function (events, jsEvent) {
                var StartTimeDate = events.start._i.split('T');
                if (events.Name == "Exact") {
                    var tooltip = '<div class="tooltipevent" style="width:250px;height:auto;background:#fff;position:absolute;z-index:10001;padding:15px;box-shadow:1px 1px 12px 1px #e2e2e2 !important"> <span style="color:#333">Your Appointment Schedule With Patient Id # ' + events.patientId + ' at ' + moment(StartTimeDate[1], "H(:mm)").format("HH:mm") + ' Time. </span></div>'; var $tool = $(tooltip).appendTo('body');
                    $(this).mouseover(function (e) {
                        $(this).css('z-index', 10000);
                        $tool.fadeIn('500');
                        $tool.fadeTo('10', 1.9);
                    }).mousemove(function (e) {
                        $tool.css('top', e.pageY + 10);
                        $tool.css('left', e.pageX + 20);
                    });

                }
                else {
                    var EndTime = events.endTime.split('T');

                    var tooltip = '<div class="tooltipevent" style="width:250px;height:auto;background:#fff;position:absolute;z-index:10001;padding:15px;box-shadow:1px 1px 12px 1px #e2e2e2 !important"> <span style="color:#333">Your Appointment Schedule With Patient Id # ' + events.patientId + ' is Between ' + moment(StartTimeDate[1], "H(:mm)").format("HH:mm") + ' To ' + moment(EndTime[1], "H(:mm)").format("HH:mm") +' Time. </span></div>'; var $tool = $(tooltip).appendTo('body');
                    $(this).mouseover(function (e) {
                        $(this).css('z-index', 10000);
                        $tool.fadeIn('500');
                        $tool.fadeTo('10', 1.9);
                    }).mousemove(function (e) {
                        $tool.css('top', e.pageY + 10);
                        $tool.css('left', e.pageX + 20);
                    });
                }


            },
            eventMouseout: function (events, jsEvent) {
                $(this).css('z-index', 8);
                $('.tooltipevent').remove();
            },


        });
        //Start OPD-calendar
        $('#OPD-calendar').fullCalendar({
            loading: function (bool) {
                $('#loading').show(); // Add your script to show loading
            },
            eventAfterAllRender: function (view) {
                $('#loading').hide(); // remove your loading
            },
             defaultView: '@ViewBag.CalendarDefault',
           viewRender: function (views, element) {
               var view = $('#OPD-calendar').fullCalendar('getView');
                if (view.type == 'listMonth') {
                    $.each(element.find('.fc-widget-header'), function () {
                        $(this).attr('colspan', 4);

                    });
                }
            },
            customButtons: {
                monthViewButton: {
                    text: 'Month View',
                    click: function () {
                        $('#OPD-calendar').fullCalendar('changeView', 'month');
                    }

                }, calMonth: {

                    click: function () {
                        $(".fc-month-button").trigger('click');
                    }
                },
                monthListViewButton: {
                    text: 'List View',
                    click: function () {
                        $('#OPD-calendar').fullCalendar('changeView', 'listMonth');
                    }

                }
            },
            renderEvent: function () {
                $('.fc-list-item-time').htlm("<i class='ti-menu'>menu</i>");
            },
            header: {
                left: 'agendaDay , agendaWeek,  month',
                center: 'prev, title , next',
                right: 'calMonth,listMonth',
            },
            editable: true,
             eventDrop: function (event, delta, revertFunc) {

                 var day = event.start.clone();
                 var moment2 = $('#OPD-calendar').fullCalendar('getDate');

                if (day < moment2) {
                    new PNotify({
                        title: 'Error!',
                        text: "Can't booked slot for past Date!",
                        delay: 1500,
                        type: 'error',
                        addclass: 'pnotify-center'
                    });
                    var PatFilter = $('#OpdSelect option:selected').val();

                    if (PatFilter == "") {
                        $('#OPD-calendar').fullCalendar('removeEvents');
                        $('#OPD-calendar').fullCalendar('refetchEvents');
                    }
                    else {
                        $('#OPD-calendar').fullCalendar('removeEvents');
                        LoadOpdAppointmentData(PatFilter);
                    }
                    return false;

                }

                var Date;
                eventDate = event.start.format();
                var Date = eventDate.split("T");
                var recursive;
                if (event.recursionNo == "") {
                    recursive = '';
                }
                else {
                    recursive = event.recursionNo;
                }
                if (event.Name == "Exact") {
                    Data = {
                        "patientAppointmentBasicDto.AppointmentType": event.Name,
                        "patientAppointmentBasicDto.AppointmentId": event.appointId,
                        "patientAppointmentBasicDto.PatientInfoId": event.patientId,
                        "patientAppointmentBasicDto.ExactTime": event.ExactTime,
                        "patientAppointmentBasicDto.Date": Date[0],
                        "patientAppointmentBasicDto.ProviderInfoId": event.providerId,
                        "patientAppointmentBasicDto.RecursionNo": recursive
                    }
                }
                else {
                    Data = {
                        "patientAppointmentBasicDto.AppointmentType": event.Name,
                        "patientAppointmentBasicDto.AppointmentId": event.appointId,
                        "patientAppointmentBasicDto.PatientInfoId": event.patientId,
                        "patientAppointmentBasicDto.StartTime": event.bSTime,
                        "patientAppointmentBasicDto.EndTime": event.bETime,
                        "patientAppointmentBasicDto.Date": Date[0],
                        "patientAppointmentBasicDto.ProviderInfoId": event.providerId,
                        "patientAppointmentBasicDto.RecursionNo": recursive
                    }
                }
                $.confirm({
                    title: 'Confirm!',
                    content: 'Do you want to change date of this appointment?',
                    buttons: {
                        confirm: function () {
                            DragSaveEvent(Data);
                        },
                        cancel: function () {
                            var PatFilter = $('#OpdSelect option:selected').val();
                            if (PatFilter == "") {
                                $('#OPD-calendar').fullCalendar('removeEvents');
                                $('#OPD-calendar').fullCalendar('refetchEvents');
                            }
                            else {
                                $('#OPD-calendar').fullCalendar('removeEvents');

                               LoadOpdAppointmentData(PatFilter);
                            }
                        }
                    }
                });

            },
            timeFormat: 'h:mm',
            events: function (start, end, timezone, callback)
            {
                $.ajax({
                    type: "GET",
                url: '@Url.Action("ProviderGetOPDCalendarsList", "Appointment", new {Id= ProviderID })',

                success: function (result)
                {

                    OPDevents = [];
                    $.each(result, function (i, v) {
                        var Date = v.date.split('T');

                        var recursive;
                        if (v.recursionNo == "") {
                            recursive = '';
                        }
                        else {
                            recursive = v.recursionNo;
                        }
                        var TypeName = v.appointmentType;
                        var DocPatName = "-Dr. " + v.docFirstName + " - " + v.patFirstName;

                        var PatientName = v.patientFullName;
                        //var provideName = "Dr. " + v.providerInfo.firstName + " " + v.providerInfo.lastName;
                        var col = "";
                        if (v.statusId == 2) {
                            col = "green";
                        }
                        else {
                            col = "#2196f3";
                        }

                            var Time = v.startTime.split('T');
                            var EndTime = v.endTime.split('T');

                        OPDevents.push({
                                title: DocPatName,
                                Name: v.appointmentType,
                            //appointId: v.appointId,
                            start: Date[0] + "T" + v.startTime,
                            endTime: Date[0] + "T" + v.endTime,
                                appointId: v.appointmentId,
                                patientId: v.patientInfoId,
                                patientName: PatientName,
                            providerId: v.providerInfoId,
                            bSTime: v.startTime,
                            bETime: v.endTime,
                            recursionNo: recursive,
                                color:col
                            });

                    })
                    callback(OPDevents);
                }
            });
        },
            eventLimit: true,
            eventClick: function (OPDevents) {


                if (events.Name == "Exact") {
                    var ExactTimeDate = OPDevents.start._i.split('T');
                    $("#modal1").modal('show');
                    $("#modal1 .modal-content  .modal-title1").text(OPDevents.patientId);
                    $("#modal1 .modal-content  #start_date").text(moment(OPDevents.start).format('DD/MM/YYYY'));
                    $("#modal1 .modal-content  #Exact_Time").text(moment(ExactTimeDate[1], "H(:mm)").format("HH:mm"));
                    $("#modal1 .modal-content  #provider").text(OPDevents.patientName);
                    appId = events.appointId;
                    //$("#appointId").val(appointmentId);
                    PatientName = OPDevents.patientName;
                    patientId = OPDevents.patientId;
                    recursive_No = OPDevents.recursionNo;
                }
                else {
                    var StartTimeDate = OPDevents.start._i.split('T');
                    var EndTime = OPDevents.endTime.split('T');
                    $("#modal2").modal('show');
                    $("#modal2 .modal-content  .modal-title2").text(OPDevents.patientId);
                    $("#modal2 .modal-content  #start_date2").text(moment(OPDevents.start).format('DD/MM/YYYY'));
                    $("#modal2 .modal-content  #start_time2").text(moment(StartTimeDate[1], "H(:mm)").format("HH:mm"));
                    $("#modal2 .modal-content  #end_time2").text(moment(EndTime[1], "H(:mm)").format("HH:mm"));
                    $("#modal2 .modal-content  #provider_2").text(OPDevents.patientName);
                    appId = OPDevents.appointId;
                    //$("#appointId").val(appointmentId);
                    PatientName = OPDevents.patientName;
                    patientId = OPDevents.patientId;
                    recursive_No = OPDevents.recursionNo;

                }

                //$("#modal1 .modal-content  .modal-title").text(event.title);


                //$("#modal1 .modal-content  #Exact_Time").text(moment(event.end).format('DD/MM/YYYY'));
                //$("#modal1 .modal-content  #end_time").text(moment(event.end).format('HH:mm'));

            },
             eventMouseover: function (OTevents, jsEvent) {
                 var StartTimeDate = OTevents.start._i.split('T');
                if (events.Name == "Exact") {
                    var tooltip = '<div class="tooltipevent" style="width:250px;height:auto;background:#fff;position:absolute;z-index:10001;padding:15px;box-shadow:1px 1px 12px 1px #e2e2e2 !important"> <span style="color:#333">Your Appointment Schedule With Patient Id # ' + OTevents.patientId + ' at ' + moment(StartTimeDate[1], "H(:mm)").format("HH:mm") + ' Time. </span></div>'; var $tool = $(tooltip).appendTo('body');
                    $(this).mouseover(function (e) {
                        $(this).css('z-index', 10000);
                        $tool.fadeIn('500');
                        $tool.fadeTo('10', 1.9);
                    }).mousemove(function (e) {
                        $tool.css('top', e.pageY + 10);
                        $tool.css('left', e.pageX + 20);
                    });

                }
                else {
                    var EndTime = OTevents.endTime.split('T');

                    var tooltip = '<div class="tooltipevent" style="width:250px;height:auto;background:#fff;position:absolute;z-index:10001;padding:15px;box-shadow:1px 1px 12px 1px #e2e2e2 !important"> <span style="color:#333">Your Appointment Schedule With Patient Id # ' + OTevents.patientId + ' is Between ' + moment(StartTimeDate[1], "H(:mm)").format("HH:mm") + ' To ' + moment(EndTime[1], "H(:mm)").format("HH:mm") +' Time. </span></div>'; var $tool = $(tooltip).appendTo('body');
                    $(this).mouseover(function (e) {
                        $(this).css('z-index', 10000);
                        $tool.fadeIn('500');
                        $tool.fadeTo('10', 1.9);
                    }).mousemove(function (e) {
                        $tool.css('top', e.pageY + 10);
                        $tool.css('left', e.pageX + 20);
                    });
                }


            },
             eventMouseout: function (OTevents, jsEvent) {
                $(this).css('z-index', 8);
                $('.tooltipevent').remove();
            }
        });
        //End OPD-calendar

        //Start event-calendar
            $('#event-calendar').fullCalendar({
            loading: function (bool) {
                $('#loading').show(); // Add your script to show loading
            },
            eventAfterAllRender: function (view) {
                $('#loading').hide(); // remove your loading
            },
           defaultView: '@ViewBag.CalendarDefault',
           viewRender: function (views, element) {
               var view = $('#event-calendar').fullCalendar('getView');
                if (view.type == 'listMonth') {
                    $.each(element.find('.fc-widget-header'), function () {
                        $(this).attr('colspan', 4);

                    });
                }
            },
            customButtons: {
                monthViewButton: {
                    text: 'Month View',
                    click: function () {
                        $('#event-calendar').fullCalendar('changeView', 'month');
                    }

                }, calMonth: {

                    click: function () {
                        $(".fc-month-button").trigger('click');
                    }
                },
                monthListViewButton: {
                    text: 'List View',
                    click: function () {
                        $('#event-calendar').fullCalendar('changeView', 'listMonth');
                    }

                }
            },
            renderEvent: function () {
                $('.fc-list-item-time').htlm("<i class='ti-menu'>menu</i>");
            },
            header: {
                left: 'agendaDay , agendaWeek,  month',
                center: 'prev, title , next',
                right: 'calMonth,listMonth',
            },
            editable: true,
            eventDrop: function (event, delta, revertFunc) {

                var day = event.start.clone();
                var eday = event.end.clone();
                 var moment2 = $('#event-calendar').fullCalendar('getDate');

                if (day < moment2) {
                    new PNotify({
                        title: 'Error!',
                        text: "Can't create event for past Date!",
                        delay: 1500,
                        type: 'error',
                        addclass: 'pnotify-center'
                    });

                //    var PatFilter = $('#OpdSelect option:selected').val();

                //    if (PatFilter == "") {
                //        $('#OPD-calendar').fullCalendar('removeEvents');
                //        $('#OPD-calendar').fullCalendar('refetchEvents');
                //    }
                //    else {
                //        $('#OPD-calendar').fullCalendar('removeEvents');
                //        LoadOpdAppointmentData(PatFilter);
                //    }
                //    return false;

              }
                    if (eday < moment2) {
                        new PNotify({
                            title: 'Error!',
                            text: "Can't create event for past Date!",
                            delay: 1500,
                            type: 'error',
                            addclass: 'pnotify-center'
                        });
                    }
                //var Date;
                //eventDate = event.start.format();
                //var Date = eventDate.split("T");
                //var recursive;
                //if (event.recursionNo == "") {
                //    recursive = '';
                //}
                //else {
                //    recursive = event.recursionNo;
                //}
                //if (event.Name == "Exact") {
                //    Data = {
                //        "patientAppointmentBasicDto.AppointmentType": event.Name,
                //        "patientAppointmentBasicDto.AppointmentId": event.appointId,
                //        "patientAppointmentBasicDto.PatientInfoId": event.patientId,
                //        "patientAppointmentBasicDto.ExactTime": event.ExactTime,
                //        "patientAppointmentBasicDto.Date": Date[0],
                //        "patientAppointmentBasicDto.ProviderInfoId": event.providerId,
                //        "patientAppointmentBasicDto.RecursionNo": recursive
                //    }
                //}
                //else {
                //    Data = {
                //        "patientAppointmentBasicDto.AppointmentType": event.Name,
                //        "patientAppointmentBasicDto.AppointmentId": event.appointId,
                //        "patientAppointmentBasicDto.PatientInfoId": event.patientId,
                //        "patientAppointmentBasicDto.StartTime": event.bSTime,
                //        "patientAppointmentBasicDto.EndTime": event.bETime,
                //        "patientAppointmentBasicDto.Date": Date[0],
                //        "patientAppointmentBasicDto.ProviderInfoId": event.providerId,
                //        "patientAppointmentBasicDto.RecursionNo": recursive
                //    }
                //}
                //$.confirm({
                //    title: 'Confirm!',
                //    content: 'Do you want to change date of this appointment?',
                //    buttons: {
                //        confirm: function () {
                //            DragSaveEvent(Data);
                //        },
                //        cancel: function () {
                //            var PatFilter = $('#OpdSelect option:selected').val();
                //            if (PatFilter == "") {
                //                $('#OPD-calendar').fullCalendar('removeEvents');
                //                $('#OPD-calendar').fullCalendar('refetchEvents');
                //            }
                //            else {
                //                $('#OPD-calendar').fullCalendar('removeEvents');

                //               LoadOpdAppointmentData(PatFilter);
                //            }
                //        }
                //    }
                //});

            },
            timeFormat: 'h:mm',
            events: function (start, end, timezone, callback)
            {
                debugger
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("UserEvents", "Appointment", new { userId = currUserId })',

                success: function (result)
                {
                    debugger
                    Events = [];
                    $.each(result, function (i, v) {
                        debugger
                        //var Date = v.date.split('T');

                        //var recursive;
                        //if (v.recursionNo == "") {
                        //    recursive = '';
                        //}
                        //else {
                        //    recursive = v.recursionNo;
                        //}
                        var EvnetTile = v.eventTitle;


                        var col = "";

                        //var provideName = "Dr. " + v.providerInfo.firstName + " " + v.providerInfo.lastName;

                        //if (v.statusId == 2) {
                        //    col = "green";
                        //}
                        //else {
                        //    col = "#2196f3";
                        //}

                        var DateStart = v.startDate.split('T');
                        var DateEnd;
                        if (v.endDate != null) {
                            var Date = v.endDate.split('T');
                            DateEnd = Date[0];
                        }
                        else {
                            DateEnd = "0000-00-00"; 
                        }

                        Events.push({
                            title: EvnetTile,

                            eventId: v.eventId,
                            
                            
                            start: DateStart[0] + "T" + v.startTime,
                            startTime: DateStart[0] + "T" + v.startTime,
                            endTime: DateEnd + "T" + v.endTime
                           
                            });

                    })
                    callback(Events);
                }
            });
        },
            eventLimit: true,
                eventClick: function (Events) {
                    debugger
                    var event = Events;
                    console.log(event);
                    //eventModal2 event_2  event_start2 event_end2 eventIdHiddin
                    var StartTime = Events.startTime.split('T');
                    var EndTime = Events.endTime.split('T');
                    
                    
                    
                    $("#eventModal2 .modal-content  .modal-title2").text("Event");
                    $("#eventModal2 .modal-content  #event_2").text(event.title);
                    $("#eventModal2 .modal-content  #event_start2").text(moment(event.startDate).format('DD/MM/YYYY'));
                    $("#eventModal2 .modal-content  #event_startTime").text(moment(StartTime[1], "H(:mm)").format("HH:mm"));
                    if (EndTime[0] == "0000-00-00") {
                        $("#eventModal2 .modal-content  #event_end2").text('');
                    }
                    else {
                        $("#eventModal2 .modal-content  #event_end2").text(moment(EndTime[0]).format('DD/MM/YYYY'));
                    }
                    if (EndTime[1] == "null") {
                        $("#eventModal2 .modal-content  #event_endTime").text('');
                    }
                    else {
                        $("#eventModal2 .modal-content  #event_endTime").text(moment(EndTime[1], "H(:mm)").format("HH:mm"));
                    }
                   
                    $("#eventModal2").modal('show');
                    eventId = event.eventId;
            },
             eventMouseover: function (OTevents, jsEvent) {


            },
             eventMouseout: function (OTevents, jsEvent) {

            }
        });




        //End event-calendar
        $(function () {
            $(window).scroll(function () {
                $("#contextual-menu").fadeOut(500);
            });
        });
        function showContextualMenu(event, element, e) {


            //if (event.canceled) {
            currentObj = event;
            $("#contextual-menu").attr("patient-id", event.patientId);
            $("#contextual-menu").css({
                'position': 'fixed',
                'z-index': '9999',
                'top': e.clientY,
                'left': e.clientX
            }).show().fadeIn(300);
            //    .fadeIn(500, function () {

            //});
        }
        $(".fc-scroller").scroll(function () {
            $("#contextual-menu").fadeOut(300);
        });

        function DragSaveEvent(Data) {

            $.ajax({
                type: "POST",
                url: '@Url.Action("Reschedule", "Appointment")',
                data: Data,
                success: function (data) {

                    onExactSuccess(data);
                    if (data.status) {
                        calendar.render();
                    }
                },
                error: function () {
                    alert('Failed');
                }
            })
        }
         /*Reschedule*/
        function editOrUpdateAppointment(appId) {
            $("#modal1").modal('hide');
            $("#modal2").modal('hide');
                $.ajax({
                       type: "GET",
                        url: '@Url.Action("AppointmentGetById", "Appointment")',
                    data: { appointId: appId },

                    success: function (data) {


                        $("#AppointmentUpdateModal #exist-appoint1").hide();
                        $("#AppointmentUpdateModal #frame-appoint1").hide();
                        $("#AppointmentUpdateModal #recurring1").hide();


                        if (data.appointmentType == "Exact") {
                            $("#AppointmentUpdateModal #exist-appoint1").show();
                            $("#AppointmentUpdateModal #frame-appoint1").hide();
                            $("#AppointmentUpdateModal #recurring1").hide();

                            $("#AppointmentUpdateModal #appointmentType1").val(data.appointmentType);
                            $("#AppointmentUpdateModal #EPatFullName").val(data.patientFullName);
                            $("#AppointmentUpdateModal .modal-title").text(data.patientInfoId);
                            $("#AppointmentUpdateModal #providerInfo_Id").val(data.providerInfoId);

                            $("#AppointmentUpdateModal #appointment_Id").val(data.appointmentId);
                            $("#AppointmentUpdateModal #patientInfo_Id").val(data.patientInfoId);
                            $("#AppointmentUpdateModal #exactSTime1").val(data.startTime);
                            $("#AppointmentUpdateModal #exactETime1").val(data.endTime);
                            $("#AppointmentUpdateModal #exactDate1").val(moment(data.date).format('MM/DD/YYYY'));
                            $("#AppointmentUpdateModal #recursion_no").val(recursive_No);

                            $('#provider_name').val(data.providerInfoId);
                            $('#provider_name').trigger('change');

                        }
                        else{

                            $("#AppointmentUpdateModal #exist-appoint1").hide();
                            $("#AppointmentUpdateModal #recurring1").hide();

                            $("#AppointmentUpdateModal #frame-appoint1").show();
                            $("#AppointmentUpdateModal .modal-title").text(data.patientInfoId);
                            $("#AppointmentUpdateModal #appointmentType2").val(data.appointmentType);
                            $("#AppointmentUpdateModal #BPatFullName").val(data.patientFullName);
                            $("#AppointmentUpdateModal #providerInfo_Id2").val(data.providerInfoId);
                            $("#AppointmentUpdateModal #appointment_Id2").val(data.appointmentId);
                            $("#AppointmentUpdateModal #patientInfo_Id2").val(data.patientInfoId);
                            $("#AppointmentUpdateModal #btwDate1").val(moment(data.date).format('MM/DD/YYYY'));
                            $("#AppointmentUpdateModal #btwSTime1").val(data.startTime);
                            $("#AppointmentUpdateModal #btwETime1").val(data.endTime);
                            $("#AppointmentUpdateModal #recursion_no2").val(recursive_No);
                            $('#btnProvider').val(data.providerInfoId);
                            $('#btnProvider').trigger('change');
                        }
                            },
                            error: function (result) {
                             alert("Error");
                       }
                });
            }

        $('.EditAppointment').click(function () {
            editOrUpdateAppointment(appId);
            $('#AppointmentUpdateModal').modal('show');
        });
            $('.DeleteEventBtn').click(function () {
                DeleteEvent(eventId);
            });



            $('.EditEvent').click(function () {
                UpdateEvent(eventId);
            });
        $(document).on('submit', '#exist-appoint1', function (e) {


            e.preventDefault();
            if ($(this).valid()) {
                $(this).ajaxSubmit({
                    success: function (response) {
                        debugger
                        $(".checkmark").show().fadeOut(6000);
                        $('#IPP_table').html('');
                        $('#IPP_table').html(response);
                        $('#myTableEUO').DataTable({
                            "lengthMenu": false,
                            "lengthChange": false,
                            "scrollX": false,
                            "searching": false,
                            "responsive": true,
                            "info": false,
                            'order': [], 'columnDefs': [{ "targets": [0], "orderable": false }],

                        });

                        $('#Doc-calendar').fullCalendar('removeEvents');
                        $('#Doc-calendar').fullCalendar('refetchEvents');
                        $("#AppointmentUpdateModal").modal('hide');
                    }

                });


            }
        });
        $(document).on('submit', '#frame-appoint1', function (e) {
            e.preventDefault();
            if ($(this).valid()) {
                $(this).ajaxSubmit({
                    success: function (response) {

                    },
                    error: function (response) {

                    },
                    complete: function (xhr) {
                        debugger
                        onExactSuccess(xhr.responseJSON);

                    }
                });

            }
        });
        function StartConnection(id) {
              var appointmentData = $('#exactDate1').val();
            var date = moment(appointmentData).format('dddd, MMMM D Y')
            var time = $('#exactTime1').val();
             var connection = new signalR.HubConnectionBuilder()
                                .withUrl("/NotificationHub")
                                .configureLogging(signalR.LogLevel.Information)
                                .build();
                            connection.start().then(() => {
                                var userId = id;
                                var message = 'Your appointment is reschedule  to ' + date + ' at ' + time + ' with Dr. @doctorName .';
                                connection.invoke("SendMessage", userId, message).catch(function (err) {
                                    return console.error(err.toString());
                                });
                            });
        }
        function SendNotification(Id,fname,lname) {
            var appointmentData = $('#exactDate1').val();
            var date = moment(appointmentData).format('dddd, MMMM D Y')
            var time = $('#exactTime1').val();
            docnotify = {
                UserId: @currUserId, NotificationType: "Appointment", NotificationText: "Appointment", NotificationInfo: '' + fname + ' ' + lname +' appointment is rescheduled to ' + date + ' at ' + time + '.', UserRoleId: @roleId, CreatedBy:@currUserId }
            $.ajax({
                type: "POST",
                url: "/Notification/SaveNotification",
                data: docnotify,
                success: function (data) {
                    patnotify = { UserId: Id, NotificationType: "Appointment", NotificationText: "Appointment", NotificationInfo: 'Your appointment is reschedule  to ' + date + ' at ' + time + ' with Dr. @doctorName', UserRoleId: @roleId, CreatedBy:@currUserId }
                    $.ajax({
                        type: "POST",
                        url: "/Notification/SaveNotification",
                        data: patnotify,
                        success: function (data) {
                        }
                    });

                }
            });
           }

        function deleteappointmentFromModel(appId) {

            var PatFilter = $('#seleciona option:selected').val();
            if (recursive_No == null) {
                $.confirm({
                    title: 'Confirm!',
                    content: 'Do you want to delete this appointment?',
                    buttons: {
                        confirm: function () {
                            $.get("/Appointment/DeleteAppointments", { Id: appId }).done(function (data) {

                                if (data) {
                                    if (PatFilter == "") {
                                        $(".checkmark").show().fadeOut(6000);

                                        $('.full-calendar').fullCalendar('removeEvents');

                                        $('#Doc-calendar').fullCalendar('refetchEvents');
                                        //event.closest('tr').remove();
                                    }
                                    else {
                                        $(".checkmark").show().fadeOut(6000);

                                        $('.full-calendar').fullCalendar('removeEvents');
                                        LoadAppointmentData(PatFilter);
                                        //$('#Doc-calendar').fullCalendar('refetchEvents');
                                        //event.closest('tr').remove();
                                    }

                                }
                                else {
                                    new PNotify({
                                        title: 'Error!',
                                        text: 'Something went wron',
                                        delay: 2500,
                                        type: 'error',
                                        addclass: 'pnotify-center'
                                    });
                                }


                            });
                        },
                        cancel: function () {

                        }
                    }
                });
            }
            else {
                $.confirm({

                    title: 'Confirm!',
                    content: 'Do you want to delete all associated events or just this one?',
                    buttons: {
                        All: function () {
                            $.confirm({
                                title: 'Confirm!',
                                content: 'Do you want to delete associated all events?',

                                buttons: {
                                    confirm: function () {
                                        $.get("/Appointment/DeleteRecuringAppointment", { Id: recursive_No }).done(function (data) {

                                            if (data) {
                                                if (PatFilter == "") {
                                                    $(".checkmark").show().fadeOut(6000);

                                                    $('.full-calendar').fullCalendar('removeEvents');
                                                    $('#Doc-calendar').fullCalendar('refetchEvents');
                                                    event.closest('tr').remove();

                                                }
                                                else {
                                                    $(".checkmark").show().fadeOut(6000);

                                                    $('.full-calendar').fullCalendar('removeEvents');
                                                    LoadAppointmentData(PatFilter);
                                                    event.closest('tr').remove();
                                                }
                                            }
                                            else {
                                                new PNotify({
                                                    title: 'Error!',
                                                    text: 'Something went wron',
                                                    delay: 2500,
                                                    type: 'error',
                                                    addclass: 'pnotify-center'
                                                });
                                            }


                                        });
                                    },


                                    cancel: function () {
                                        $.alert('Canceled!');
                                    }
                                }
                            });

                        },

                        Single: function () {
                            $.confirm({
                                title: 'Confirm!',
                                content: 'Do you want to delete this appointment?',

                                buttons: {
                                    confirm: function () {
                                        $.get("/Appointment/DeleteAppointments", { Id: appId }).done(function (data) {

                                            if (data) {
                                                if (PatFilter == "") {
                                                    $(".checkmark").show().fadeOut(6000);

                                                    $('.full-calendar').fullCalendar('removeEvents');
                                                    $('#Doc-calendar').fullCalendar('refetchEvents');
                                                    event.closest('tr').remove();

                                                }
                                                else {
                                                    new PNotify({
                                                        title: 'Error!',
                                                        text: 'Something went wron',
                                                        delay: 2500,
                                                        type: 'error',
                                                        addclass: 'pnotify-center'
                                                    });
                                                    $('.full-calendar').fullCalendar('removeEvents');
                                                    LoadAppointmentData(PatFilter);
                                                    event.closest('tr').remove();
                                                }
                                            }
                                            else {
                                                new PNotify({
                                                    title: 'Error!',
                                                    text: 'Something went wron',
                                                    delay: 2500,
                                                    type: 'error',
                                                    addclass: 'pnotify-center'
                                                });
                                            }


                                        });
                                    },


                                    cancel: function () {
                                    }
                                }
                            });

                        },
                        cancel: function () {
                        }
                    }
                });
            }

        }


        $('.DeleteappointBtn').click(function () {

            deleteappointmentFromModel(appId);
            $('.modal').modal('hide');
        });
        function LoadAppointmentData(PatFilter) {
             $("#Doc-calendar").fullCalendar('removeEvents');//remove the old filtered events
                //filter based on the select value

                if (PatFilter == "All") {

                    $.ajax({
                    type: "GET",
                    url: '@Url.Action("ProviderGetCalendarsList", "Appointment")',
                    data: { Id : @ProviderID},//get events
                    success: function (data) {
                        $.each(data, function (i, v) {//for each event, I will compare the value with the filter, if true, render it.

                            if (v.providerInfoId == @ProviderID) {
                                var Time;
                                var ETime;

                                 Time = v.startTime.split('T');

                                var DocPatName = "-Dr. " + v.docFirstName + " - " + v.patFirstName;
                                var PatientName = v.patientFullName;

                                var Date = v.date.split('T');


                                    ETime = v.endTime.split('T');


                                $("#Doc-calendar").fullCalendar('renderEvent', {
                                    title: DocPatName,
                                    start: Date[0] + 'T' + v.startTime,
                                    Name: v.appointmentType,
                                    appointId: v.appointmentId,
                                    endTime: Date[0] + "T" + v.endTime,
                                    patientId: v.patientInfoId,
                                    patientName: PatientName,
                                    providerId: v.providerInfoId,
                                    ExactTime: v.startTime,
                                    bSTime: v.startTime,
                                    bETime: v.endTime,
                                    department: v.departmentType
                                }, true);
                            }
                        })
                    }
                });
                }
                else {
                   $.ajax({
                    type: "GET",
                    url: '@Url.Action("FilterByDocName", "Appointment")',
                    data: { DocId: @ProviderID, PatId:PatFilter},//get events
                    success: function (data) {
                        $.each(data, function (i, v) {//for each event, I will compare the value with the filter, if true, render it.
                            if (v.providerInfoId == @ProviderID && v.patientInfoId == PatFilter) {

                                var Time;
                                var ETime;

                                var DocPatName = "-Dr. " + v.providerInfo.firstName + " - " + v.patientInfo.firstName;
                                var PatientName = v.patientInfo.firstName + ' ' + v.patientInfo.lastName;

                                var Date = v.date.split('T');



                                $("#Doc-calendar").fullCalendar('renderEvent', {
                                    title: DocPatName,
                                    start: Date[0] + 'T' + v.startTime,
                                    Name: v.appointmentType,
                                    appointId: v.appointmentId,
                                    endTime: Date[0] + "T" + v.endTime,
                                    patientId: v.patientInfoId,
                                    patientName: PatientName,
                                    providerId: v.providerInfoId,
                                    ExactTime: v.startTime,
                                    bSTime: v.startTime,
                                    bETime: v.endTime,
                                    department: v.departmentType
                                }, true);
                            }
                        })
                    }
                });

                }
        }
        function LoadOTAppointmentData(PatFilter) {
            $("#ot-calendar").fullCalendar('removeEvents');//remove the old filtered events
                //filter based on the select value

                if (PatFilter == "All") {

                    $.ajax({
                    type: "GET",
                    url: '@Url.Action("ProviderGetCalendarsList", "Appointment")',
                    data: { Id : @ProviderID},//get events
                    success: function (data) {
                        $.each(data, function (i, v) {//for each event, I will compare the value with the filter, if true, render it.

                            if (v.providerInfoId == @ProviderID) {
                                var Time;
                                var ETime;

                                 Time = v.startTime.split('T');

                                var DocPatName = "-Dr. " + v.docFirstName + " - " + v.patFirstName;
                                var PatientName = v.patientFullName;

                                var Date = v.date.split('T');


                                    ETime = v.endTime.split('T');


                                $("#ot-calendar").fullCalendar('renderEvent', {
                                    title: DocPatName,
                                    start: Date[0] + 'T' + v.startTime,
                                    Name: v.appointmentType,
                                    appointId: v.appointmentId,
                                    endTime: Date[0] + "T" + v.endTime,
                                    patientId: v.patientInfoId,
                                    patientName: PatientName,
                                    providerId: v.providerInfoId,
                                    ExactTime: v.startTime,
                                    bSTime: v.startTime,
                                    bETime: v.endTime,
                                    department: v.departmentType
                                }, true);
                            }
                        })
                    }
                });
                }
                else {
                   $.ajax({
                    type: "GET",
                    url: '@Url.Action("FilterByDocName", "Appointment")',
                    data: { DocId: @ProviderID, PatId:PatFilter},//get events
                    success: function (data) {
                        $.each(data, function (i, v) {//for each event, I will compare the value with the filter, if true, render it.
                            if (v.providerInfoId == @ProviderID && v.patientInfoId == PatFilter) {

                                var Time;
                                var ETime;

                                var DocPatName = "-Dr. " + v.providerInfo.firstName + " - " + v.patientInfo.firstName;
                                var PatientName = v.patientInfo.firstName + ' ' + v.patientInfo.lastName;

                                var Date = v.date.split('T');



                                $("#ot-calendar").fullCalendar('renderEvent', {
                                    title: DocPatName,
                                    start: Date[0] + 'T' + v.startTime,
                                    Name: v.appointmentType,
                                    appointId: v.appointmentId,
                                    endTime: Date[0] + "T" + v.endTime,
                                    patientId: v.patientInfoId,
                                    patientName: PatientName,
                                    providerId: v.providerInfoId,
                                    ExactTime: v.startTime,
                                    bSTime: v.startTime,
                                    bETime: v.endTime,
                                    department: v.departmentType
                                }, true);
                            }
                        })
                    }
                });

                }
        }
        function LoadOpdAppointmentData(PatFilter) {
            $("#OPD-calendar").fullCalendar('removeEvents');//remove the old filtered events
                //filter based on the select value

                if (PatFilter == "All") {

                    $.ajax({
                    type: "GET",
                    url: '@Url.Action("ProviderGetCalendarsList", "Appointment")',
                    data: { Id : @ProviderID},//get events
                    success: function (data) {
                        $.each(data, function (i, v) {//for each event, I will compare the value with the filter, if true, render it.

                            if (v.providerInfoId == @ProviderID) {
                                var Time;
                                var ETime;

                                 Time = v.startTime.split('T');

                                var DocPatName = "-Dr. " + v.docFirstName + " - " + v.patFirstName;
                                var PatientName = v.patientFullName;

                                var Date = v.date.split('T');


                                    ETime = v.endTime.split('T');


                                $("#OPD-calendar").fullCalendar('renderEvent', {
                                    title: DocPatName,
                                    start: Date[0] + 'T' + v.startTime,
                                    Name: v.appointmentType,
                                    appointId: v.appointmentId,
                                    endTime: Date[0] + "T" + v.endTime,
                                    patientId: v.patientInfoId,
                                    patientName: PatientName,
                                    providerId: v.providerInfoId,
                                    ExactTime: v.startTime,
                                    bSTime: v.startTime,
                                    bETime: v.endTime,
                                    department: v.departmentType
                                }, true);
                            }
                        })
                    }
                });
                }
                else {
                   $.ajax({
                    type: "GET",
                    url: '@Url.Action("FilterByDocName", "Appointment")',
                    data: { DocId: @ProviderID, PatId:PatFilter},//get events
                    success: function (data) {
                        $.each(data, function (i, v) {//for each event, I will compare the value with the filter, if true, render it.
                            if (v.providerInfoId == @ProviderID && v.patientInfoId == PatFilter) {

                                var Time;
                                var ETime;

                                var DocPatName = "-Dr. " + v.providerInfo.firstName + " - " + v.patientInfo.firstName;
                                var PatientName = v.patientInfo.firstName + ' ' + v.patientInfo.lastName;

                                var Date = v.date.split('T');



                                $("#OPD-calendar").fullCalendar('renderEvent', {
                                    title: DocPatName,
                                    start: Date[0] + 'T' + v.startTime,
                                    Name: v.appointmentType,
                                    appointId: v.appointmentId,
                                    endTime: Date[0] + "T" + v.endTime,
                                    patientId: v.patientInfoId,
                                    patientName: PatientName,
                                    providerId: v.providerInfoId,
                                    ExactTime: v.startTime,
                                    bSTime: v.startTime,
                                    bETime: v.endTime,
                                    department: v.departmentType
                                }, true);
                            }
                        })
                    }
                });

                }
        }
        function BulkExactCheck() {

            var check = $("#Bulkexact_checkbox").val();
            if (check == '0') {
                $("#BulkInBetweenAppointment").hide();
                $("#BulkInBtwRecurringForm").hide();
                $("#BulkEaxctAppointHide").show();
                $(".Bulkcancel_btn").hide();
                var check = $("#BulkERecCheck");
                if (check.is(':checked')) {
                    $("#BulkExactFormButton").hide();
                    $("#BulkexactRecurringForm").show();
                    $("#BulkERecRangeTimeText").show();
                    $("#BulkERecRangeTimeField").show();
                    $("#BulkERecPatternText").show();
                    $("#BulkERecPatternCheckBox").show();
                    $("#BulkERecPatternCheckBoxS").show();
                    $("#BulkERecCheck2").prop("checked", true);
                }

            }
            else {
                $("#BulkInBetweenAppointment").hide();
                $("#BulkEaxctAppointHide").hide();
                $(".Bulkcancel_btn").hide();
            }

        }
        function BulkBtwCheck() {

            var check2 = $("#Bulkbtw_checkbox");
            if (check2.is(':checked')) {
                $("#BulkInBetweenAppointment").show();
                $("#BulkEaxctAppointHide").hide();
                $("#BulkExactRecurringForm").show();
                $("#BulkERecRangeTimeText").show();
                $("#BulkERecRangeTimeField").show();
                $("#BulkERecPatternText").show();
                $("#BulkERecPatternCheckBox").show();
                $("#BulkERecPatternCheckBoxS").show();



            }
            else {
                $("#BulkInBetweenAppointment").show();
                $("#BulkEaxctAppointHide").hide();
                $(".Bulkcancel_btn").hide();
                $("#BulkExactRecurringForm").hide();
                $("#BulkERecRangeTimeText").hide();
                $("#BulkERecRangeTimeField").hide();
                $("#BulkERecPatternText").hide();
                $("#BulkBulkERecPatternCheckBox").hide();
                $("#ERecPatternCheckBoxS").hide();
                var check = $("#BulkERecCheck");
                if (check.is(':checked')) {
                    $("#BulkExactFormButton").hide();
                    $("#BulkExactRecurringForm").hide();
                    $("#BulkERecRangeTimeText").hide();
                    $("#BulkERecRangeTimeField").hide();
                    $("#BulkERecPatternText").hide();
                    $("#BulkERecPatternCheckBox").hide();
                    $("#BulkERecPatternCheckBoxS").hide();
                    $("#exactMakeRec").hide();
                    $("#RecMakeRec").show();

                }
                var check = $("#BulkBRecCheck");
                if (check.is(':checked')) {
                    $("#BulkBtwFormButton").hide();
                    $("#BulkInBtwRecurringForm").show();
                    $("#BulkBRecRangeTimeText").show();
                    $("#BulkBRecRangeTimeField").show();
                    $("#BulkBRecPatternText").show();
                    $("#BulkBRecPatternCheckBox").show();
                    $("#BulkBRecPatternCheckBoxS").show();
                }

                //$("#ExactRecurringForm").hide();

                //$("#ERecCheck").trigger("click");
                //$("#ERecCheck").prop("checked", false);
            }
        }
        function BulkERecurrence() {

            var check = $("#BulkERecCheck");
            if (check.is(':checked')) {
                $("#BulkExactFormButton").hide();
                $("#BulkEaxctAppointfield").hide();
                $("#exactSelect").hide();
                $("#exactMakeRec").hide();
                $("#BulkExactRecurringForm").show();
                $("#BulkERecRangeTimeText").show();
                $("#BulkERecRangeTimeField").show();
                $("#BulkERecPatternText").show();
                $("#BulkERecPatternCheckBox").show();
                $("#BulkERecPatternCheckBoxS").show();
                $("#BulkERecCheck2").prop("checked", true);
            }
            else {
                $("#BulkEaxctAppointfield").show();

                $("#BulkExactFormButton").show();
                $("#BulkExactRecurringForm").hide();

                $("#BulkERecRangeTimeText").hide();
                $("#BulkERecRangeTimeField").hide();
                $("#BulkERecPatternText").hide();
                $("#BulkERecPatternCheckBox").hide();
                $("#BulkERecPatternCheckBoxS").hide();
            }


        }
        function BulkERecurrence2() {

            var check = $("#BulkERecCheck2");
            if (check.is(':checked')) {
                $("#BulkExactFormButton").hide();
                $("#BulkEaxctAppointfield").hide();
                $("#exactSelect").hide();
                $("#exactMakeRec").hide();
                $("#BulkExactRecurringForm").show();
                $("#BulkERecRangeTimeText").show();
                $("#BulkERecRangeTimeField").show();
                $("#BulkERecPatternText").show();
                $("#BulkERecPatternCheckBox").show();
                $("#BulkERecPatternCheckBoxS").show();

            }
            else {
                $("#exactMakeRec").show();
                $("#exactSelect").show();
                $("#RecexactSelect").show();
                $("#BulkERecCheck2").prop("checked", false);
                $("#BulkERecCheck").prop("checked", false);

                $("#BulkEaxctAppointfield").show();

                $("#BulkExactFormButton").show();
                $("#BulkExactRecurringForm").hide();

                $("#BulkERecRangeTimeText").hide();
                $("#BulkERecRangeTimeField").hide();
                $("#BulkERecPatternText").hide();
                $("#BulkERecPatternCheckBox").hide();
                $("#BulkERecPatternCheckBoxS").hide();
            }


        }
        function BulkBRecurrence() {

            var check = $("#BulkBRecCheck");
            if (check.is(':checked')) {
                $("#BulkBtwFormButton").hide();
                $("#BulkInBtwField").hide();
                $("#InBtwSelect").hide();
                $("#InBtwMake").hide();
                $("#BulkInBtwRecurringForm").show();
                $("#BulkBRecRangeTimeText").show();
                $("#BulkBRecRangeTimeField").show();
                $("#BulkBRecPatternText").show();
                $("#BulkBRecPatternCheckBox").show();
                $("#BulkBRecPatternCheckBoxS").show();
                $("#BulkBRecCheck2").prop("checked", true);

            }
            else {
                $("#BulkInBtwField").show();

                $("#BulkBtwFormButton").show();
                $("#BulkInBtwRecurringForm").hide();
                $("#BulkBRecRangeTimeText").hide();
                $("#BulkBRecRangeTimeField").hide();
                $("#BulkBRecPatternText").hide();
                $("#BulkBRecPatternCheckBox").hide();
                $("#BulkBRecPatternCheckBoxS").hide();
            }


        }
        function BulkBRecurrence2() {

            var check = $("#BulkBRecCheck2");
            if (check.is(':checked')) {
                $("#BulkBtwFormButton").hide();
                $("#BulkInBtwField").hide();
                $("#InBtwSelect").hide();
                $("#InBtwMake").hide();
                $("#BulkInBtwRecurringForm").show();
                $("#BulkBRecRangeTimeText").show();
                $("#BulkBRecRangeTimeField").show();
                $("#BulkBRecPatternText").show();
                $("#BulkBRecPatternCheckBox").show();
                $("#BulkBRecPatternCheckBoxS").show();
            }
            else {
                $("#BulkBRecCheck2").prop("checked", false);
                $("#BulkBRecCheck").prop("checked", false);
                $("#BulkInBtwField").show();
                $("#InBtwSelect").show();
                $("#InBtwMake").show();
                $("#InBtwMakeRec").show();
                $("#BulkBtwFormButton").show();
                $("#BulkInBtwRecurringForm").hide();
                $("#BulkBRecRangeTimeText").hide();
                $("#BulkBRecRangeTimeField").hide();
                $("#BulkBRecPatternText").hide();
                $("#BulkBRecPatternCheckBox").hide();
                $("#BulkBRecPatternCheckBoxS").hide();
            }


        }
        $(document).ready(function () {
            $(".fc-calMonth-button").html('<i class="ti-layout-grid3-alt"></i>');
            $(".fc-listMonth-button").html('<i class="ti-menu"></i>');
            $('#seleciona').change(function () {
                var PatFilter = $('#seleciona option:selected').val();
                LoadAppointmentData(PatFilter);
            });

            $('#otSelect').change(function () {
                debugger
                 var PatFilter = $('#otSelect option:selected').val();
                LoadOTAppointmentData(PatFilter);
            });

            $('#OpdSelect').change(function () {
                debugger
                var PatFilter = $('#OpdSelect option:selected').val();
                LoadOpdAppointmentData(PatFilter);
            });


            $(".createappbtn").click(function () {


                $('.app_empty').val("");
                $('.Bulkapp_empty').val("");
                $('.Bulkapp_empty').removeClass('valid');
                $('.app_empty').removeClass('valid');
                $("#exact_checkbox").prop('checked', false);
                $("#Btw_checkbox").prop('checked', false);
                $("#Bulkexact_checkbox").prop('checked', false);
                $("#BulkBtw_checkbox").prop('checked', false);
                $(".cancel_btn").show();
                $(".Bulkcancel_btn").show();
                $("#EaxctAppointHide").hide();
                $("#BulkEaxctAppointHide").hide();
                $("#InBetweenAppointment").hide();
                $("#BulkInBetweenAppointment").hide();
                var check = $("#BulkERecCheck");
                if (check.is(':checked')) {
                    $("#ERecCheck").trigger('click');
                }
                else {

                }
                var check = $("#BulkERecCheck2");
                if (check.is(':checked')) {
                    $("#BulkERecCheck2").trigger('click');
                }
                else {

                }
                var check = $("#BulkBRecCheck");
                if (check.is(':checked')) {
                    $("#BulkBRecCheck").trigger('click');
                }
                else {

                }
                var check = $("#BulkBRecCheck2");
                if (check.is(':checked')) {
                    $("#BulkBRecCheck2").trigger('click');
                }
                else {

                }
                $(".cancel_btn").show();
                $("#EaxctAppointHide").hide();
                $("#InBetweenAppointment").hide();
                $("#ExactRecurringForm").hide();
                $("#InBtwRecurringForm").hide();
                $(".select2").val('').trigger('change');
                $('#Doc-calendar').fullCalendar('refetchEvents');
            });
        })
        $('#BulkEaxctAppointHide').on('submit', function (e) {

            e.preventDefault();
            if ($(this).valid()) {
                $(this).ajaxSubmit({
                    success: function (response) {

                        if (response == "exist") {
                            ExistsMsg();
                        }
                        else {
                            SuccessMsg();

                        }
                    }

                });

            }

        });
        $('#BulkInBetweenAppointment').on('submit', function (e) {

            e.preventDefault();
            if ($(this).valid()) {
                $(this).ajaxSubmit({
                    success: function (response) {

                        if (response == "exist") {
                            ExistsMsg();
                        }
                        else {
                            SuccessMsg();

                        }
                    }

                });

            }

        });
        $('#BulkExactRecurringForm').on('submit', function (e) {

            e.preventDefault();
            if ($(this).valid()) {
                $(this).ajaxSubmit({
                    success: function (response) {
                        //StartConnection(parseInt(response.userId));
                        //SendNotification(parseInt(response.userId));
                    },
                    error: function (response) {

                    },
                    complete: function (xhr) {
                        onExactSuccess(xhr.responseJSON);

                    }

                });

            }

        });
        $('#BulkInBtwRecurringForm').on('submit', function (e) {

            e.preventDefault();
            if ($(this).valid()) {
                $(this).ajaxSubmit({
                    success: function (response) {
                        //StartConnection(parseInt(response.userId));
                        //SendNotification(parseInt(response.userId));
                    },
                    error: function (response) {

                    },
                    complete: function (xhr) {
                        onExactSuccess(xhr.responseJSON);

                    }

                });

            }

        });

        function onExactSuccess(data) {
            var PatFilter = $('#seleciona option:selected').val();
            debugger
            if (data != null) {
                if (PatFilter == "") {

                    $(".checkmark").show().fadeOut(6000);

                    $('#Doc-calendar').fullCalendar('removeEvents');

                    $("#AppointmentModal").modal('hide');
                    $("#AppointmentUpdateModal").modal('hide');
                    $('#Doc-calendar').fullCalendar('refetchEvents');
                    $(".text-input").val("");
                    $(".text-input").removeClass("valid");
                }
                else {

                    $(".checkmark").show().fadeOut(6000);

                    $('#Doc-calendar').fullCalendar('removeEvents');

                    $("#AppointmentModal").modal('hide');
                    $("#AppointmentUpdateModal").modal('hide');
                    //$('#Doc-calendar').fullCalendar('refetchEvents');
                    LoadAppointmentData(PatFilter);

                    $(".text-input").val("");
                    $(".text-input").removeClass("valid");
                }
                window.location.reload();
            }
            else {
                new PNotify({
                    title: 'Error!',
                    text: 'Something went wrong',
                    delay: 2500,
                    type: 'error',
                    addclass: 'pnotify-center'
                });
            }
        }
        function SuccessMsg() {
            debugger
            $(".checkmark").show().fadeOut(6000);

            $('#Doc-calendar').fullCalendar('removeEvents');

            $("#AppointmentModal").modal('hide');
            $("#AppointmentUpdateModal").modal('hide');
            $('#Doc-calendar').fullCalendar('refetchEvents');
            $(".text-input").val("");
            $(".text-input").removeClass("valid");
            window.location.reload();
        }
        </script>
        <script>
        function goBack() {
            window.history.back();
        }
        $(document).ready(function () {
            var appData = @TempData["AppointmentId"];
            if (appData != 0)
            {
                $.get("/Appointment/GetAppointmentDetailById", { Id: appData }).done(function (data) {

                    for (var info of data) {

                        if (info.appointmentType == "Exact") {
                            $('.modal-title1').text(info.appointmentId);
                            $('.modal-title').text(info.patientInfoId);
                            $('#provider').text(info.patientFullName);
                            $('.patient').text(info.patientFullName);
                            $('#start_date').text(moment(info.date).format('DD-MMM-YYYY'));
                            $('#Exact_Time').text(moment(info.exactTime).format('HH.mm'));
                            $("#modal1").modal('show');
                        }
                        else {
                            $('.modal-title2').text(info.appointmentId);
                            $('.modal-title').text(info.patientInfoId);
                            $('#provider_2').text(info.patientFullName);
                            $('#start_date2').text(moment(info.date).format('DD-MMM-YYYY'));
                            $('#start_time2').text(moment(info.exactTime).format('HH.mm'));
                            $('#end_time2').text(moment(info.exactTime).format('HH.mm'));
                            $("#modal2").modal('show');
                        }
                    }
                });
            }


        });
        $("#Menucancel").on('click', function () {
            $("#contextual-menu").hide();
        })
        $("#PatientChart").on('click', function () {
            var patientId = $("#contextual-menu").attr("patient-id");
            var action = "PatientChart?patientId=" + patientId;
            window.location.href = '/PatientSideElite/' + action;
        })
        $("#Prescribe").on('click', function () {
            var patientId = $("#contextual-menu").attr("patient-id");
            var action = "PatientProgressReport?patientId=" + patientId;
            window.location.href = '/PatientSideElite/' + action;
        })
        function StatusChange(Id, PatientId, event) {
            debugger
            var a = event.value;
            if (a == 6) {
              $.ajax({
                       type: "GET",
                        url: '@Url.Action("AppointmentGetById", "Appointment")',
                  data: { appointId: Id },

                    success: function (data) {

                        debugger;
                        $("#AppointmentUpdateModal #exist-appoint1").hide();
                        $("#AppointmentUpdateModal #frame-appoint1").hide();
                        $("#AppointmentUpdateModal #recurring1").hide();


                        if (data.appointmentType == "Exact") {
                            $("#AppointmentUpdateModal #exist-appoint1").show();
                            $("#AppointmentUpdateModal #frame-appoint1").hide();
                            $("#AppointmentUpdateModal #recurring1").hide();

                            $("#AppointmentUpdateModal #appointmentType1").val(data.appointmentType);
                            $("#AppointmentUpdateModal #EPatFullName").val(data.patientFullName);
                            $("#AppointmentUpdateModal .modal-title").text(data.patientInfoId);
                            $("#AppointmentUpdateModal #providerInfo_Id").val(data.providerInfoId);

                            $("#AppointmentUpdateModal #appointment_Id").val(data.appointmentId);
                            $("#AppointmentUpdateModal #patientInfo_Id").val(data.patientInfoId);
                            $("#AppointmentUpdateModal #exactSTime1").val(data.startTime);
                            $("#AppointmentUpdateModal #exactETime1").val(data.endTime);
                            $("#AppointmentUpdateModal #exactDate1").val(moment(data.date).format('MM/DD/YYYY'));
                            $("#AppointmentUpdateModal #recursion_no").val(recursive_No);
                            $("#AppointmentUpdateModal #updateEndTime").hide();
                            $('#provider_name').val(data.providerInfoId);
                            $('#provider_name').trigger('change');

                        }
                        else{

                            $("#AppointmentUpdateModal #exist-appoint1").hide();
                            $("#AppointmentUpdateModal #recurring1").hide();

                            $("#AppointmentUpdateModal #frame-appoint1").show();
                            $("#AppointmentUpdateModal .modal-title").text(data.patientInfoId);
                            $("#AppointmentUpdateModal #appointmentType2").val(data.appointmentType);
                            $("#AppointmentUpdateModal #BPatFullName").val(data.patientFullName);
                            $("#AppointmentUpdateModal #providerInfo_Id2").val(data.providerInfoId);
                            $("#AppointmentUpdateModal #appointment_Id2").val(data.appointmentId);
                            $("#AppointmentUpdateModal #patientInfo_Id2").val(data.patientInfoId);
                            $("#AppointmentUpdateModal #btwDate1").val(moment(data.date).format('MM/DD/YYYY'));
                            $("#AppointmentUpdateModal #btwSTime1").val(data.startTime);
                            $("#AppointmentUpdateModal #btwETime1").val(data.endTime);
                            $("#AppointmentUpdateModal #recursion_no2").val(recursive_No);
                            $('#btnProvider').val(data.providerInfoId);
                            $('#btnProvider').trigger('change');
                        }
                        $('#AppointmentUpdateModal .DeleteappointBtn').hide();

                        $('#AppointmentUpdateModal').modal('show');
                       },
                            error: function (result) {
                             alert("Error");
                  }
                                      

                });

            }
            else {
                $.post("/Appointment/AppointmentStatusChangeDoctor", { AppId: Id, Id: event.value }).done(function (data) {
                    debugger;

                        $(".checkmark").show().fadeOut(6000);
                        $('#IPP_table').html('');
                        $('#IPP_table').html(data);
                        $('#myTableEUO').DataTable({
                            "lengthMenu": false,
                            "lengthChange": false,
                            "scrollX": false,
                            "searching": false,
                            "responsive": true,
                            "info": false,
                            'order': [], 'columnDefs': [{ "targets": [0], "orderable": false }],

                        });

                    $('#Doc-calendar').fullCalendar('removeEvents');
                    $('#Doc-calendar').fullCalendar('refetchEvents');



                });

            }
            }
          
        </script>

    }
    <svg class="checkmark" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52"><circle class="checkmark__circle" cx="26" cy="26" r="25" fill="none" /><path class="checkmark__check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8" /></svg>

    <div class="page-wrapper">
        <div class="container">
            @if (roleId == 5)
            {
                <div class="row">
                    <div class="col">

                        <a class="waves-effect waves-light right" @*onclick="goBack()"*@ href="@Url.Action("ProviderEliteAdd","provider", new { id= ProviderID })" style="margin-top:-11px;">
                            <i class="mdi mdi-arrow-left right arrow-icon"></i>
                        </a>

                    </div>

                </div>
            }

            <div id="breadcrumbs-wrapper">
                <div class="row">
                    <div class="col-sm-12">
                        <ul class="nav nav-tabs customtab2" role="tablist">
                            <li class="nav-item ml-1"> <a class="nav-link active" data-toggle="tab" href="#OPD_tab" role="tab"><span class="hidden-xs-down">OPD Appointments</span></a> </li>
                            <li class="nav-item"> <a class="nav-link " data-toggle="tab" href="#Appointment_tab" role="tab"><span class="hidden-xs-down">Inpatient Appointments</span></a> </li>
                            <li class="nav-item ml-1"> <a class="nav-link" data-toggle="tab" id="OTAppoint_tab" href="#OT_tab" role="tab"><span class="hidden-xs-down">OT Appointments</span></a> </li>
                            <li class="nav-item ml-1"> <a class="nav-link" data-toggle="tab" id="Event_tab" href="#event_tab" role="tab"><span class="hidden-xs-down">Events</span></a> </li>

                            @*<li class="nav-item ml-1"> <a class="nav-link" data-toggle="tab" href="#ER_tab" role="tab"><span class="hidden-xs-down">ER Appointments</span></a> </li>*@
                        </ul>
                        <!-- Tab panes -->
                        <div class="tab-content">
                            <div class="tab-pane active" id="OPD_tab" role="tabpanel">
                                <div class="row mt-2">
                                    <div class="col-sm-3 col-md-4 col-lg-4">
                                        <h5 class="breadcrumbs-title color-blue"> OPD Appointments</h5>
                                    </div>

                                    <div class="col-sm-9 col-md-4 col-lg-4" display-block">

                                        <select id="seleciona" class="select2" data-placeholder="Search By Patient Name"
                                                asp-items="@(new SelectList(Model.patientListWithUsers,"PatientInfoId","FullName"))">
                                            <option value="" selected disabled></option>
                                            <option value="All">All</option>
                                        </select>
                                    </div>
                                    <div class="col-sm-12 col-md-4 col-lg-4">

                                        <a class="btn right add-btn createappbtn modal-trigger" data-toggle="modal" data-target="#AppointmentModal">Book Appointment</a>
                                    </div>

                                </div>

                                <div class="row">
                                    <div class="col-sm-12">

                                        @*<h4 class="color-blue">

                </h4>*@
                                        @*<div id="basic-calendar"></div>*@
                                        <div id='Doc-calendar'></div>
                                        <div id="loading">
                                            <div class="bounce1"></div>
                                            <div class="bounce2"></div>
                                            <div class="bounce3"></div>
                                        </div>

                                    </div>

                                </div>
                                @if (roleId == 5)
                                {
                                    <div class="row">

                                        <div class="col-12 col-xs-12 col-sm-5 col-md-5">

                                            <p>Search by Days</p>
                                            <input type="text" id="UpcomingDateDoctor" class="text-input" placeholder="Select Date">
                                        </div>


                                    </div>

                                    <div class="row tablee">
                                        <div class="col-md-12 mb-2">
                                            <div class="table-responsive" id="IPP_table">
                                                <partial name="~/Views/Appointment/PartialViews/_AppointmentsForReceptionList.cshtml" />


                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class="tab-pane" id="Appointment_tab" role="tabpanel">
                                <div class="row mt-2">
                                    <div class="col-sm-3 col-md-4 col-lg-4">
                                        <h5 class="breadcrumbs-title color-blue">Inpatient Appointments</h5>
                                    </div>
                                    <div class="col-sm-9 col-md-4 col-lg-4" display-block">

                                        <select class="select2" id="selecionaOPD" data-placeholder="Search By Patient Name"
                                                asp-items="@(new SelectList(Model.patientListWithUsers,"PatientInfoId","FullName"))">
                                            <option value="" selected disabled></option>
                                            <option value="All">All</option>
                                        </select>
                                    </div>
                                    <div class="col-sm-12 col-md-4 col-lg-4">

                                        <a class="btn right add-btn createappbtn modal-trigger" data-toggle="modal" data-target="#AppointmentModal">Add OPD Appointment</a>
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-sm-12">

                                        @*<h4 class="color-blue">

                    </h4>*@
                                        @*<div id="basic-calendar"></div>*@
                                        <div id='OPD-calendar'></div>
                                        @*<div id="loading">
                        <div class="bounce1"></div>
                        <div class="bounce2"></div>
                        <div class="bounce3"></div>
                    </div>*@

                                    </div>

                                </div>
                            </div>
                            <div class="tab-pane" id="OT_tab" role="tabpanel">
                                <div class="row mt-2">
                                    <div class="col-sm-3 col-md-4 col-lg-4">
                                        <h5 class="breadcrumbs-title color-blue">OT Appointments</h5>
                                    </div>
                                    <div class="col-sm-9 col-md-4 col-lg-4" display-block">

                                        <select class="select2" id="selecionaOT" data-placeholder="Search By Patient Name"
                                                asp-items="@(new SelectList(Model.patientListWithUsers,"PatientInfoId","FullName"))">
                                            <option value="" selected disabled></option>
                                            <option value="All">All</option>
                                        </select>
                                    </div>
                                    <div class="col-sm-12 col-md-4 col-lg-4">

                                        <a class="btn right add-btn createappbtn modal-trigger" data-toggle="modal" data-target="#AppointmentModal">Add OT Appointment</a>
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div id='ot-calendar'></div>
                                        @*<div id="loading">
                        <div class="bounce1"></div>
                        <div class="bounce2"></div>
                        <div class="bounce3"></div>
                    </div>*@

                                    </div>

                                </div>
                            </div>
                            <div class="tab-pane" id="event_tab" role="tabpanel">
                                <div class="row mt-2">
                                    <div class="col-sm-3 col-md-4 col-lg-4">
                                        <h5 class="breadcrumbs-title color-blue">Events</h5>
                                    </div>
                                    <div class="col-sm-9 col-md-4 col-lg-4" display-block">
                                    </div>
                                    <div class="col-sm-12 col-md-4 col-lg-4">

                                        <a class="btn right add-btn createappbtn modal-trigger" data-toggle="modal" data-target="#EventModal">Add Event</a>
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div id='event-calendar'></div>
                                        

                                    </div>

                                </div>
                            </div>
                            @*<div class="tab-pane" id="ER_tab" role="tabpanel">
            <div class="row mt-2">
                <div class="col-sm-3 col-md-4 col-lg-4">
                    <h5 class="breadcrumbs-title color-blue"> Schedule ER</h5>
                </div>
                <div class="col-sm-9 col-md-4 col-lg-4" display-block">

                    <select class="select2" data-placeholder="Search By Patient Name"
                            asp-items="@(new SelectList(Model.patientListWithUsers,"PatientInfoId","FullName"))">
                        <option value="" selected disabled></option>
                        <option value="All">All</option>
                    </select>
                </div>
                <div class="col-sm-12 col-md-4 col-lg-4">

                    <a class="btn right add-btn createappbtn modal-trigger" data-toggle="modal" data-target="#AppointmentModal">Add ER Appointment</a>
                </div>

            </div>
            <div class="row">
                <div class="col-sm-12">


                    <div id='ER-calendar'></div>

                </div>

            </div>
        </div>*@
                        </div>
                    </div>
                </div>

            </div>
         

        </div>
    </div>

    <div id="contextual-menu" class="contextual-menu-container">
        <ul class="contextual-menu-ul">
            <li id="Prescribe" data-val="CheckedOut" class="appointmentStatus popup-appointment-status">Patient Chart</li>
            <li id="PatientChart" data-val="CheckedOut" class="appointmentStatus popup-appointment-status">Health Profile</li>
            <li id="Menucancel" class="appointmentStatus popup-appointment-cancel">Cancel</li>
        </ul>
    </div>

    <div id="modal1" class="modal display_modal bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">

                <input id="AppointId" hidden="hidden" />

                <div class="modal-body">
                    <div class="row">
                        <div class="col-sm-12 col-md-6 col-lg-6 col-xl-6 col-6">
                            <h6>Appointment Schedule</h6>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-6 col-xl-6 col-6">
                            <h6 class="right">Patient Id : <span class="modal-title1"></span></h6>
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-sm-6 col-md-6" id="Date_show">
                            <h6>Patient Name : <span id="provider"></span></h6>
                        </div>
                        <div class="col-sm-6 col-md-6" id="Date_show">
                            <h6>Date : <span id="start_date"></span></h6>
                        </div>


                    </div>
                    <div class="row">
                        <div class="col" id="ExactTime_show">

                            <span style="font-size:18px;">Your Appointment With <b style="border-bottom: 1px solid" id="provider"></b> is at <b style="border-bottom:1px solid" id="Exact_Time"></b> To <b style="border-bottom:1px solid" id="end_Exact2"></b>. Please Make Sure Your Availability at Time.</span>

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-sm-12">
                            <a href="javascript:void(0);" class="right modal-close modal-action btn Recreate ml-2" data-dismiss="modal">Cancel</a>

                            <a href="javascript:void(0);" class="right DeleteappointBtn modal-action btn Recreate ">Delete</a>

                            <a href="javascript:void(0);" class="right modal-close modal-action EditAppointment modal-close add-btn  btn mr-2">Reschedule</a>

                        </div>
                    </div>
                </div>

            </div>
        </div>


    </div>
    <div id="modal2" class="modal display_modal bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-sm-12 col-md-6 col-lg-6 col-xl-6 col-6">
                            <h5>Appointment Schedule</h5>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-6 col-xl-6 col-6">
                            <h6 class="right">Patient Id : <span class="modal-title2"></span></h6>
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-sm-6 col-md-6" id="Date_show2">
                            <h6>Patient Name : <span id="provider_2"></span></h6>

                        </div>
                        <div class="col-sm-6 col-md-6" id="Date_show2">
                            <h6>Date : <span id="start_date2"></span></h6>

                        </div>

                    </div>
                    <div class="row">
                        <div class="col-sm-12" id="StartTime_show">
                            @*<h6>Start Time : <span id="start_time2"></span></h6>*@
                            <span style="font-size:18px;">Your Appointment With <b style="border-bottom: 1px solid" id="provider_2"></b> in Between <b style="border-bottom:1px solid" id="start_time2"></b> To <b style="border-bottom:1px solid" id="end_time2"></b> Time. Please Make Sure Your Availability at Time.</span>

                        </div>

                    </div>
                </div>

                <input id="AppointId" hidden="hidden" />

                <div class="modal-footer">
                    <div class="row">
                        <div class="col-sm-12">
                            <a href="javascript:void(0);" class="right modal-close modal-action btn Recreate ml-2" data-dismiss="modal">Cancel</a>

                            <a href="javascript:void(0);" class="right modal-action DeleteappointBtn  btn Recreate ">Delete</a>

                            <a href="javascript:void(0);" class="right modal-close  modal-action EditAppointment add-btn  btn mr-2">Reschedule</a>

                        </div>
                    </div>
                </div>


            </div>
        </div>


    </div>
    <div id="AppointmentModal" class="modal bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5>Book Appointment</h5>
                </div>

                <div class="modal-body">
                    <div class="row" id="test2">
                        <div class="col-sm-12">

                            <div class="row">
                                <div class="col-sm-4 col-md-4 col-lg-4">
                                    <h6>Appointment Type : </h6>
                                </div>
                                <div class="col-sm-4 col-md-4 col-lg-4">
                                    @*<label>
                                            <input type="radio" name="AppCheckBox" id="Bulkexact_checkbox" class="with-gap" onclick="BulkExactCheck()" value="0" />
                                            <span>Exact</span>
                                        </label>*@
                                    <div class="custom-control custom-radio">
                                        <input type="radio" class="custom-control-input" name="AppCheckBox" id="Bulkexact_checkbox" onclick="BulkExactCheck()" value="0">
                                        <label class="custom-control-label" for="Bulkexact_checkbox">Exact</label>
                                    </div>
                                </div>
                                <div class="col-sm-4 col-md-4 col-lg-4">
                                    @*<label>
                                            <input type="radio" name="AppCheckBox" id="BulkBtw_checkbox" class="with-gap" onclick="BulkBtwCheck()" />
                                            <span>In Between</span>
                                        </label>*@
                                    <div class="custom-control custom-radio">
                                        <input type="radio" class="custom-control-input" name="AppCheckBox" id="BulkBtw_checkbox" onclick="BulkBtwCheck()">
                                        <label class="custom-control-label" for="BulkBtw_checkbox">In Between</label>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-12">
                                    <a href="javascript:void(0);" class="modal-action modal-close Bulkcancel_btn Recreate ml-2 btn mt-2 right" data-dismiss="modal">Cancel</a>

                                </div>
                            </div>
                            <form asp-action="BulkExactAppointment" asp-controller="Appointment" method="post" id="BulkEaxctAppointHide" style="display:none">
                                <input hidden="hidden" asp-for="patientAppointmentBasicDto.AppointmentId" />
                                <input hidden="hidden" asp-for="patientAppointmentBasicDto.PatientInfoId" id="PatientIdVal" />
                                <input hidden="hidden" id="providerInfo_Id" asp-for="patientAppointmentBasicDto.ProviderInfoId" />
                                <input asp-for="patientAppointmentBasicDto.AppointmentType" value="Exact" id="appointmentType" hidden="hidden" />
                                <div class="row" id="exactSelect">
                                    <div class="col-sm-12 col-md-6">
                                        <p>Patient Name <span class="required"> * </span></p>
                                        <select multiple="multiple" class="select2" id="ExactSimple" asp-for="patientAppointmentBasicDto.PatientId" data-placeholder="Select Patient Name"
                                                asp-items="@(new SelectList(Model.patientListWithUsers,"PatientInfoId","FullName"))">
                                        </select>
                                    </div>
                                </div>
                                <!--<div class="row" id="exactMakeRec">
                                    <div class="col-sm-12 col-md-6">-->
                                <!--<div class="custom-control custom-checkbox mt-3">
                                            <input type="checkbox" class="custom-control-input" id="BulkERecCheck" onclick="BulkERecurrence()">
                                            <label class="custom-control-label" for="BulkERecCheck">Make it recursive</label>
                                        </div>
                                    </div>
                                </div>-->
                                <div class="row" id="BulkEaxctAppointfield">
                                    <div class="col-sm-4 col-md-4">
                                        <p>Date <span class="required"> * </span></p>
                                        <input type="text" id="BulkrecSDate" asp-for="patientAppointmentBasicDto.Date" class="datepicker text-input Bulkapp_empty" placeholder="Select Date">
                                        <span class="required" asp-validation-for="patientAppointmentBasicDto.Date"></span>

                                    </div>
                                    <div class="col-sm-4 col-md-4">
                                        <p>Time<span class="required"> * </span></p>
                                        <input type="text" class=" time-picker text-input Bulkapp_empty" asp-for="patientAppointmentBasicDto.StartTime" placeholder="Select Time">
                                        <span class="required" asp-validation-for="patientAppointmentBasicDto.ExactTime"></span>
                                    </div>
                                    <div class="col-sm-4 col-md-4">
                                        <p>Duration<span class="required"> * </span></p>
                                        <select id="SlotDuration" asp-for="patientAppointmentBasicDto.Duration" class="select2" data-placeholder="Select Duration" asp-items="@( new List<SelectListItem>{
                                                                 new SelectListItem() {Text = "", Value=""},
                                                                 new SelectListItem() {Text = "5 Min", Value="5"},
                                                                    new SelectListItem() {Text = "10 Min", Value="10"},
                                                                    new SelectListItem() {Text = "15 Min", Value="15"},
                                                                    new SelectListItem() {Text = "20 Min", Value="20"},
                                                                    new SelectListItem() {Text = "25 Min", Value="25"},
                                                                    new SelectListItem() {Text = "30 Min", Value="30"},
                                                                    new SelectListItem() {Text = "35 Min", Value="35"},
                                                                    new SelectListItem() {Text = "40 Min", Value="40"},
                                                                    new SelectListItem() {Text = "45 Min", Value="45"},
                                                                    new SelectListItem() {Text = "50 Min", Value="50"},
                                                                    new SelectListItem() {Text = "55 Min", Value="55"},
                                                                    new SelectListItem() {Text = "60 Min", Value="60"},
                                                                    new SelectListItem() {Text = "65 Min", Value="65"},
                                                                    new SelectListItem() {Text = "70 Min", Value="70"},
                                                                    new SelectListItem() {Text = "75 Min", Value="75"},
                                                                    new SelectListItem() {Text = "80 Min", Value="80"},
                                                                    new SelectListItem() {Text = "85 Min", Value="85"},
                                                                    new SelectListItem() {Text = "90 Min", Value="90"},
                                                                    new SelectListItem() {Text = "100 Min", Value="100"},
                                                                    new SelectListItem() {Text = "105 Min", Value="105"},
                                                                    new SelectListItem() {Text = "110 Min", Value="110"},
                                                                    new SelectListItem() {Text = "115 Min", Value="115"},
                                                                    new SelectListItem() {Text = "120 Min", Value="120"}
                                         })">
                                        </select>
                                    </div>
                                </div>

                                <div class="row" id="BulkExactFormButton">
                                    <div class="col-sm-12">
                                        <a href="javascript:void(0);" class="right modal-action modal-close Recreate ml-2 btn mt-2 right" data-dismiss="modal">Cancel</a>
                                        <button type="submit" class="right modal-action btn mt-2 add-btn right">Save</button>
                                    </div>

                                </div>
                            </form>
                            <form asp-action="BulkExactRecAppointment" asp-controller="Appointment" id="BulkExactRecurringForm" method="post" style="display:none">
                                <input hidden="hidden" asp-for="RecurringAppoinmentDto.AppointmentId" />
                                <input hidden="hidden" asp-for="RecurringAppoinmentDto.PatientInfoId" />
                                <input hidden="hidden" id="ERecproviderInfo_Id" asp-for="RecurringAppoinmentDto.ProviderInfoId" />
                                <input asp-for="RecurringAppoinmentDto.AppointmentType" value="Exact" hidden="hidden" />
                                <div class="row" id="RecexactSelect">
                                    <div class="col-sm-12 col-md-6">
                                        <p>Patient Name <span class="required"> * </span></p>
                                        <select multiple="multiple" class="select2" id="ExactRec" asp-for="RecurringAppoinmentDto.PatientId" data-placeholder="Select Patient Name"
                                                asp-items="@(new SelectList(Model.patientListWithUsers,"PatientInfoId","FullName"))">
                                        </select>
                                    </div>
                                </div>
                                @*<div class="row" id="RecMakeRec">
                                        <div class="col-sm-12 col-md-6">

                                            <div class="custom-control custom-checkbox mt-3">
                                                <input type="checkbox" class="custom-control-input" id="BulkERecCheck2" onclick="BulkERecurrence2()">
                                                <label class="custom-control-label" for="BulkERecCheck2">Make it recursive</label>
                                            </div>

                                        </div>
                                    </div>*@
                                <div class="row" id="ERecRangeTimeText">
                                    <div class="col-sm-12 col-md-6">
                                        <h6>Range of Recurrence</h6>
                                    </div>
                                    <div class="col-sm-12 col-md-6">
                                        <h6>Appointment Time</h6>
                                    </div>
                                </div>
                                <div class="row" style="display:none" id="BulkERecRangeTimeField">
                                    <div class="col-sm-6 col-md-3">
                                        <p>Start Date <span class="required"> * </span></p>
                                        <input type="text" asp-for="RecurringAppoinmentDto.Date" class="sDate datepicker text-input Bulkapp_empty" placeholder="Select Start Date">
                                        <span class="required" asp-validation-for="RecurringAppoinmentDto.Date"></span>
                                    </div>
                                    <div class="col-sm-6 col-md-3">
                                        <p>End Date <span class="required"> * </span></p>
                                        <input type="text" asp-for="RecurringAppoinmentDto.EndDate" class="eDate  text-input Bulkapp_empty" placeholder="Select Start Date">
                                        <span class="required" asp-validation-for="RecurringAppoinmentDto.EndDate"></span>
                                    </div>
                                    <div class="col-sm-6 col-md-3">
                                        <p>Start Time <span class="required"> * </span></p>
                                        <input type="text" asp-for="RecurringAppoinmentDto.ExactTime" class="time-picker text-input Bulkapp_empty" placeholder="Select Start Date">
                                        <span class="required" asp-validation-for="RecurringAppoinmentDto.ExactTime"></span>
                                    </div>
                                    <div class="col-sm-6 col-md-3">
                                        <p>Duration <span class="required"> * </span></p>
                                        <select asp-for="RecurringAppoinmentDto.Duration" class="select2" data-placeholder="Select Duration" asp-items="@( new List<SelectListItem>{
                                                                 new SelectListItem() {Text = "", Value=""},
                                                                 new SelectListItem() {Text = "5 Min", Value="5"},
                                                                    new SelectListItem() {Text = "10 Min", Value="10"},
                                                                    new SelectListItem() {Text = "15 Min", Value="15"},
                                                                    new SelectListItem() {Text = "20 Min", Value="20"},
                                                                    new SelectListItem() {Text = "25 Min", Value="25"},
                                                                    new SelectListItem() {Text = "30 Min", Value="30"},
                                                                    new SelectListItem() {Text = "35 Min", Value="35"},
                                                                    new SelectListItem() {Text = "40 Min", Value="40"},
                                                                    new SelectListItem() {Text = "45 Min", Value="45"},
                                                                    new SelectListItem() {Text = "50 Min", Value="50"},
                                                                    new SelectListItem() {Text = "55 Min", Value="55"},
                                                                    new SelectListItem() {Text = "60 Min", Value="60"},
                                                                    new SelectListItem() {Text = "65 Min", Value="65"},
                                                                    new SelectListItem() {Text = "70 Min", Value="70"},
                                                                    new SelectListItem() {Text = "75 Min", Value="75"},
                                                                    new SelectListItem() {Text = "80 Min", Value="80"},
                                                                    new SelectListItem() {Text = "85 Min", Value="85"},
                                                                    new SelectListItem() {Text = "90 Min", Value="90"},
                                                                    new SelectListItem() {Text = "100 Min", Value="100"},
                                                                    new SelectListItem() {Text = "105 Min", Value="105"},
                                                                    new SelectListItem() {Text = "110 Min", Value="110"},
                                                                    new SelectListItem() {Text = "115 Min", Value="115"},
                                                                    new SelectListItem() {Text = "120 Min", Value="120"}
                                         })">
                                        </select>
                                    </div>
                                </div>
                                <div class="row" id="BulkERecPatternText" style="display:none">
                                    <div class="col-sm-12 col-md-6 input-field">
                                        <h6>Recurrence Pattern</h6>
                                    </div>
                                </div>
                                <div class="row" style="display:none" id="BulkERecPatternCheckBox">
                                    <div class="col-sm-4 col-md-2">
                                        @*<p class="check-btn">
                                                <label>
                                                    <input type="checkbox" class="filled-in checkFirst" asp-for="RecurringAppoinmentDto.IsMondayChecked" />
                                                    <span>Monday</span>
                                                </label>
                                            </p>*@
                                        <div class="custom-control custom-checkbox mt-3">
                                            <input type="checkbox" class="custom-control-input" id="e_Monday" asp-for="RecurringAppoinmentDto.IsMondayChecked">
                                            <label class="custom-control-label" for="e_Monday">Monday</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-4 col-md-2">
                                        @*<p class="check-btn">
                                                <label>
                                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsTuesdayChecked" />
                                                    <span>Tuesday</span>
                                                </label>
                                            </p>*@
                                        <div class="custom-control custom-checkbox mt-3">
                                            <input type="checkbox" class="custom-control-input" id="e_Tuesday" asp-for="RecurringAppoinmentDto.IsTuesdayChecked">
                                            <label class="custom-control-label" for="e_Tuesday">Tuesday</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-4 col-md-2">
                                        @*<p class="check-btn">
                                                <label>
                                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsWednesdayChecked" />
                                                    <span>Wednesday</span>
                                                </label>
                                            </p>*@
                                        <div class="custom-control custom-checkbox mt-3">
                                            <input type="checkbox" class="custom-control-input" id="e_Wednesday" asp-for="RecurringAppoinmentDto.IsWednesdayChecked">
                                            <label class="custom-control-label" for="e_Wednesday">Wednesday</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-4 col-md-2">
                                        @*<p class="check-btn">
                                                <label>
                                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsThursdayChecked" />
                                                    <span>Thursday</span>
                                                </label>
                                            </p>*@
                                        <div class="custom-control custom-checkbox mt-3">
                                            <input type="checkbox" class="custom-control-input" id="e_Thursday" asp-for="RecurringAppoinmentDto.IsThursdayChecked">
                                            <label class="custom-control-label" for="e_Thursday">Thusday</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-4 col-md-2">
                                        @*<p class="check-btn">
                                                <label>
                                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsFridayChecked" />
                                                    <span>Friday</span>
                                                </label>
                                            </p>*@
                                        <div class="custom-control custom-checkbox mt-3">
                                            <input type="checkbox" class="custom-control-input" id="e_Friday" asp-for="RecurringAppoinmentDto.IsFridayChecked">
                                            <label class="custom-control-label" for="e_Friday">Friday</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-4 col-md-2">
                                        @*<p class="check-btn">
                                                <label>
                                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsSaturdayChecked" />
                                                    <span>Saturday</span>
                                                </label>

                                            </p>*@
                                        <div class="custom-control custom-checkbox mt-3">
                                            <input type="checkbox" class="custom-control-input" id="e_Saturday" asp-for="RecurringAppoinmentDto.IsSaturdayChecked">
                                            <label class="custom-control-label" for="e_Saturday">Saturday</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="row" id="BulkERecPatternCheckBoxS" style="display:none">
                                    <div class="col-sm-4 col-md-2">
                                        @*<p class="check-btn">
                                                <label>
                                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsSundayChecked" />
                                                    <span>Sunday</span>
                                                </label>
                                            </p>*@
                                        <div class="custom-control custom-checkbox mt-3">
                                            <input type="checkbox" class="custom-control-input" id="e_Sunday" asp-for="RecurringAppoinmentDto.IsSundayChecked">
                                            <label class="custom-control-label" for="e_Sunday">Sunday</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <a href="javascript:void(0);" class="modal-action modal-close Recreate ml-2 btn mt-2 right" data-dismiss="modal">Cancel</a>
                                        <button type="submit" class="modal-action btn mt-2 add-btn right">Save</button>
                                    </div>

                                </div>
                            </form>
                            <form asp-action="BulkBtwAppointment" asp-controller="Appointment" method="post" id="BulkInBetweenAppointment" style="display:none;">
                                <input hidden="hidden" asp-for="patientAppointmentBasicDto.AppointmentId" />
                                <input hidden="hidden" asp-for="patientAppointmentBasicDto.PatientInfoId" />
                                <input hidden="hidden" id="BtwproviderInfo_Id" asp-for="patientAppointmentBasicDto.ProviderInfoId" />
                                <input asp-for="patientAppointmentBasicDto.AppointmentType" value="In Between" hidden="hidden" />
                                <div class="row" id="InBtwSelect">
                                    <div class="col-sm-12 col-md-6">
                                        <p>Patient Name <span class="required"> * </span></p>
                                        <select multiple="multiple" class="select2" id="BtwExact" asp-for="patientAppointmentBasicDto.PatientId" data-placeholder="Select Patient Name"
                                                asp-items="@(new SelectList(Model.patientListWithUsers,"PatientInfoId","FullName"))">
                                        </select>
                                    </div>
                                </div>
                                @*<div class="row" id="InBtwMake">
                                        <div class="col-sm-12 col-md-6">

                                            <div class="custom-control custom-checkbox mt-3">
                                                <input type="checkbox" class="custom-control-input" id="BulkBRecCheck" onclick="BulkBRecurrence()">
                                                <label class="custom-control-label" for="BulkBRecCheck">Make it recursive</label>
                                            </div>
                                        </div>
                                    </div>*@
                                <div class="row" id="BulkInBtwField">
                                    <div class="col-sm-6 col-md-3">
                                        <p>Date <span class="required"> * </span></p>
                                        <input type="text" class="datepicker text-input Bulkapp_empty" asp-for="patientAppointmentBasicDto.Date" placeholder="Select Date">
                                        <span class="required" asp-validation-for="patientAppointmentBasicDto.Date"></span>

                                    </div>
                                    <div class="col-sm-6 col-md-3">
                                        <p>Start Time <span class="required"> * </span></p>
                                        <input type="text" asp-for="patientAppointmentBasicDto.StartTime" class="time-picker text-input Bulkapp_empty" placeholder="Select Start Time">
                                        <span class="required" asp-validation-for="patientAppointmentBasicDto.StartTime"></span>
                                    </div>
                                    <div class="col-sm-6 col-md-3">
                                        <p>End Time <span class="required"> * </span></p>
                                        <input type="text" class="time-picker text-input Bulkapp_empty" asp-for="patientAppointmentBasicDto.EndTime" placeholder="Select End Time">
                                        <span class="required" asp-validation-for="patientAppointmentBasicDto.EndTime"></span>

                                    </div>
                                    <div class="col-sm-6 col-md-3">
                                        <p>Duration<span class="required"> * </span></p>
                                        <select class="select2" id="betweenSelec2" asp-for="patientAppointmentBasicDto.Duration" data-placeholder="Select Duration" asp-items="@( new List<SelectListItem>{
                                                                 new SelectListItem() {Text = "", Value=""},
                                                                 new SelectListItem() {Text = "5 Min", Value="5"},
                                                                    new SelectListItem() {Text = "10 Min", Value="10"},
                                                                    new SelectListItem() {Text = "15 Min", Value="15"},
                                                                    new SelectListItem() {Text = "20 Min", Value="20"},
                                                                    new SelectListItem() {Text = "25 Min", Value="25"},
                                                                    new SelectListItem() {Text = "30 Min", Value="30"},
                                                                    new SelectListItem() {Text = "35 Min", Value="35"},
                                                                    new SelectListItem() {Text = "40 Min", Value="40"},
                                                                    new SelectListItem() {Text = "45 Min", Value="45"},
                                                                    new SelectListItem() {Text = "50 Min", Value="50"},
                                                                    new SelectListItem() {Text = "55 Min", Value="55"},
                                                                    new SelectListItem() {Text = "60 Min", Value="60"},
                                                                    new SelectListItem() {Text = "65 Min", Value="65"},
                                                                    new SelectListItem() {Text = "70 Min", Value="70"},
                                                                    new SelectListItem() {Text = "75 Min", Value="75"},
                                                                    new SelectListItem() {Text = "80 Min", Value="80"},
                                                                    new SelectListItem() {Text = "85 Min", Value="85"},
                                                                    new SelectListItem() {Text = "90 Min", Value="90"},
                                                                    new SelectListItem() {Text = "100 Min", Value="100"},
                                                                    new SelectListItem() {Text = "105 Min", Value="105"},
                                                                    new SelectListItem() {Text = "110 Min", Value="110"},
                                                                    new SelectListItem() {Text = "115 Min", Value="115"},
                                                                    new SelectListItem() {Text = "120 Min", Value="120"}
                                         })">
                                        </select>
                                    </div>
                                </div>
                                <div class="row" id="BulkBtwFormButton">
                                    <div class="col-sm-12">
                                        <a href="javascript:void(0);" class="modal-action modal-close Recreate ml-2 btn mt-2 right" data-dismiss="modal">Cancel</a>
                                        <button type="submit" class="modal-action btn mt-2 add-btn right">Save</button>
                                    </div>

                                </div>
                            </form>
                            <form asp-action="BulkBtwRecAppointment" asp-controller="Appointment" method="post" id="BulkInBtwRecurringForm" style="display:none">
                                <input hidden="hidden" asp-for="RecurringAppoinmentDto.AppointmentId" />
                                <input hidden="hidden" asp-for="RecurringAppoinmentDto.PatientInfoId" />
                                <input hidden="hidden" id="BtwRecproviderInfo_Id" asp-for="RecurringAppoinmentDto.ProviderInfoId" />
                                <input asp-for="RecurringAppoinmentDto.AppointmentType" value="In Between" hidden="hidden" />
                                <div class="row" id="InBtwRecSelect">
                                    <div class="col-sm-12 col-md-6">
                                        <p>Patient Name <span class="required"> * </span></p>
                                        <select multiple="multiple" class="select2" asp-for="RecurringAppoinmentDto.PatientId" data-placeholder="Select Patient Name"
                                                asp-items="@(new SelectList(Model.patientListWithUsers,"PatientInfoId","FullName"))">
                                        </select>
                                    </div>
                                </div>
                                @*<div class="row" id="InBtwMakeRec">
                                        <div class="col-sm-12 col-md-6">
                                            <div class="custom-control custom-checkbox mt-3">
                                                <input type="checkbox" class="custom-control-input" id="BulkBRecCheck2" onclick="BulkBRecurrence2()">
                                                <label class="custom-control-label" for="BulkBRecCheck2">Make it recursive</label>
                                            </div>
                                        </div>
                                    </div>*@
                                <div class="row" style="display:none" id="BulkBRecRangeTimeText">
                                    <div class="col-sm-12 col-md-6">
                                        <h6>Range of Recurrence</h6>
                                    </div>
                                    <div class="col-sm-12 col-md-6">
                                        <h6>Appointment Time</h6>
                                    </div>
                                </div>
                                <div class="row" style="display:none" id="BulkBRecRangeTimeField">
                                    <div class="col-sm-6 col-md-3">
                                        <p>Start Date <span class="required"> * </span></p>
                                        <input type="text" id="BulkinBtwSDate" asp-for="RecurringAppoinmentDto.Date" class="sBtwDate datepicker Bulkapp_empty inBtwSDate text-input" placeholder="Select Start Date">
                                        <span class="required" asp-validation-for="RecurringAppoinmentDto.Date"></span>
                                    </div>
                                    <div class="col-sm-6 col-md-3">
                                        <p>End Date <span class="required"> * </span></p>
                                        <input type="text" id="BulkinBtwEDate" asp-for="RecurringAppoinmentDto.EndDate" class="eBtwDate Bulkapp_empty inBtwEDate text-input" placeholder="Select End Date">
                                        <span class="required" asp-validation-for="RecurringAppoinmentDto.EndDate"></span>
                                    </div>
                                    <div class="col-sm-6 col-md-3">
                                        <p>Start Time <span class="required"> * </span></p>
                                        <input type="text" asp-for="RecurringAppoinmentDto.StartTime" class="time-picker text-input Bulkapp_empty" placeholder="Select Start Time">
                                        <span class="required" asp-validation-for="RecurringAppoinmentDto.StartTime"></span>

                                    </div>
                                    <div class="col-sm-6 col-md-3">
                                        <p>End Time <span class="required"> * </span></p>
                                        <input type="text" asp-for="RecurringAppoinmentDto.EndTime" class="time-picker text-input Bulkapp_empty" placeholder="Select End Time">
                                        <span class="required" asp-validation-for="RecurringAppoinmentDto.EndTime"></span>

                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-6 col-md-3">
                                        <p>Duration<span class="required"> * </span></p>
                                        <select class="select2" asp-for="patientAppointmentBasicDto.Duration" data-placeholder="Select Duration" asp-items="@( new List<SelectListItem>{
                                                                 new SelectListItem() {Text = "", Value=""},
                                                                 new SelectListItem() {Text = "5 Min", Value="5"},
                                                                    new SelectListItem() {Text = "10 Min", Value="10"},
                                                                    new SelectListItem() {Text = "15 Min", Value="15"},
                                                                    new SelectListItem() {Text = "20 Min", Value="20"},
                                                                    new SelectListItem() {Text = "25 Min", Value="25"},
                                                                    new SelectListItem() {Text = "30 Min", Value="30"},
                                                                    new SelectListItem() {Text = "35 Min", Value="35"},
                                                                    new SelectListItem() {Text = "40 Min", Value="40"},
                                                                    new SelectListItem() {Text = "45 Min", Value="45"},
                                                                    new SelectListItem() {Text = "50 Min", Value="50"},
                                                                    new SelectListItem() {Text = "55 Min", Value="55"},
                                                                    new SelectListItem() {Text = "60 Min", Value="60"},
                                                                    new SelectListItem() {Text = "65 Min", Value="65"},
                                                                    new SelectListItem() {Text = "70 Min", Value="70"},
                                                                    new SelectListItem() {Text = "75 Min", Value="75"},
                                                                    new SelectListItem() {Text = "80 Min", Value="80"},
                                                                    new SelectListItem() {Text = "85 Min", Value="85"},
                                                                    new SelectListItem() {Text = "90 Min", Value="90"},
                                                                    new SelectListItem() {Text = "100 Min", Value="100"},
                                                                    new SelectListItem() {Text = "105 Min", Value="105"},
                                                                    new SelectListItem() {Text = "110 Min", Value="110"},
                                                                    new SelectListItem() {Text = "115 Min", Value="115"},
                                                                    new SelectListItem() {Text = "120 Min", Value="120"}
                                         })">
                                        </select>
                                    </div>

                                </div>

                                <div class="row" id="BulkBRecPatternText" style="display:none">
                                    <div class="col-sm-12 col-md-6 input-field">
                                        <h6>Recurrence Pattern</h6>
                                    </div>
                                </div>
                                <div class="row" style="display:none" id="BulkBRecPatternCheckBox">
                                    <div class="col-sm-4 col-md-2">
                                        @*<p class="check-btn">
                                                <label>
                                                    <input type="checkbox" class="filled-in checkFirst" asp-for="RecurringAppoinmentDto.IsMondayChecked" />
                                                    <span>Monday</span>
                                                </label>
                                            </p>*@
                                        <div class="custom-control custom-checkbox mt-3">
                                            <input type="checkbox" class="custom-control-input" id="b_Monday" asp-for="RecurringAppoinmentDto.IsMondayChecked">
                                            <label class="custom-control-label" for="b_Monday">Monday</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-4 col-md-2">
                                        @*<p class="check-btn">
                                                <label>
                                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsTuesdayChecked" />
                                                    <span>Tuesday</span>
                                                </label>
                                            </p>*@
                                        <div class="custom-control custom-checkbox mt-3">
                                            <input type="checkbox" class="custom-control-input" id="b_Tuesday" asp-for="RecurringAppoinmentDto.IsTuesdayChecked">
                                            <label class="custom-control-label" for="b_Tuesday">Tuesday</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-4 col-md-2">
                                        @*<p class="check-btn">
                                                <label>
                                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsWednesdayChecked" />
                                                    <span>Wednesday</span>
                                                </label>
                                            </p>*@
                                        <div class="custom-control custom-checkbox mt-3">
                                            <input type="checkbox" class="custom-control-input" id="b_Wednesday" asp-for="RecurringAppoinmentDto.IsWednesdayChecked">
                                            <label class="custom-control-label" for="b_Wednesday">Wednesday</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-4 col-md-2">
                                        @*<p class="check-btn">
                                                <label>
                                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsThursdayChecked" />
                                                    <span>Thursday</span>
                                                </label>
                                            </p>*@
                                        <div class="custom-control custom-checkbox mt-3">
                                            <input type="checkbox" class="custom-control-input" id="b_Thursday" asp-for="RecurringAppoinmentDto.IsThursdayChecked">
                                            <label class="custom-control-label" for="b_Thursday">Thursday</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-4 col-md-2">
                                        @*<p class="check-btn">
                                                <label>
                                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsFridayChecked" />
                                                    <span>Friday</span>
                                                </label>
                                            </p>*@
                                        <div class="custom-control custom-checkbox mt-3">
                                            <input type="checkbox" class="custom-control-input" id="b_Friday" asp-for="RecurringAppoinmentDto.IsFridayChecked">
                                            <label class="custom-control-label" for="b_Friday">Friday</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-4 col-md-2">
                                        @*<p class="check-btn">
                                                <label>
                                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsSaturdayChecked" />
                                                    <span>Saturday</span>
                                                </label>
                                            </p>*@
                                        <div class="custom-control custom-checkbox mt-3">
                                            <input type="checkbox" class="custom-control-input" id="b_Saturday" asp-for="RecurringAppoinmentDto.IsSaturdayChecked">
                                            <label class="custom-control-label" for="b_Saturday">Saturday</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="row" id="BulkBRecPatternCheckBoxS" style="display:none">
                                    <div class="col-sm-4 col-md-2">
                                        @*<p class="check-btn">
                                                <label>
                                                    <input type="checkbox" class="filled-in" asp-for="RecurringAppoinmentDto.IsSundayChecked" />
                                                    <span>Sunday</span>
                                                </label>
                                            </p>*@
                                        <div class="custom-control custom-checkbox mt-3">
                                            <input type="checkbox" class="custom-control-input" id="b_Sunday" asp-for="RecurringAppoinmentDto.IsSundayChecked">
                                            <label class="custom-control-label" for="b_Sunday">Sunday</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <a href="javascript:void(0);" class="modal-action modal-close Recreate ml-2 btn mt-2 right" data-dismiss="modal">Cancel</a>
                                        <button type="submit" class="modal-action btn mt-2 add-btn right">Save</button>
                                    </div>

                                </div>
                            </form>
                        </div>
                    </div>
                </div>

            </div>
        </div>


    </div>
    <div id="AppointmentUpdateModal" class="modal bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-sm-12 col-md-6 col-lg-6 col-xl-6 col-6">
                            <h5>Reschedule Appointment</h5>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-6 col-xl-6 col-6">
                            <h6>Patient Id : <span class="modal-title"></span></h6>
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col m12">
                            <form id="exist-appoint1" asp-action="Reschedule" asp-controller="Appointment" method="post" style="display:none">
                                <input hidden="hidden" id="appointment_Id" asp-for="patientAppointmentBasicDto.AppointmentId" />
                                <input hidden="hidden" id="patientInfo_Id" asp-for="patientAppointmentBasicDto.PatientInfoId" />
                                <input hidden="hidden" id="providerInfo_Id" asp-for="patientAppointmentBasicDto.ProviderInfoId" />
                                <input hidden="hidden" id="recursion_no" asp-for="patientAppointmentBasicDto.RecursionNo" />
                                <input hidden="hidden" id="DepartmentEx" asp-for="patientAppointmentBasicDto.DepartmentType" value="1" />
                                <input hidden="hidden" id="DepartmentEx" asp-for="patientAppointmentBasicDto.StatusId" value="6" />
                                <input asp-for="patientAppointmentBasicDto.AppointmentType" value="Exact" id="appointmentType1" hidden="hidden" />
                                <div class="row">
                                    <div class="col-sm-12 col-md-6">
                                        <p>Patient Name <span class="required"> * </span></p>
                                        <input type="text" id="EPatFullName" asp-for="patientAppointmentBasicDto.PatientInfoId" disabled class="text-input" placeholder="Patient Name">

                                    </div>
                                    <div class="col-sm-12 col-md-6">
                                        <p>Date <span class="required"> * </span></p>
                                        <input type="text" id="exactDate1" asp-for="patientAppointmentBasicDto.Date" class="datepicker text-input" placeholder="Select Date">
                                        <span class="required" asp-validation-for="patientAppointmentBasicDto.Date"></span>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12 col-md-6">
                                        <p>Start Time <span class="required"> * </span></p>
                                        <input type="text" id="exactSTime1" class="time-picker text-input" asp-for="patientAppointmentBasicDto.StartTime" placeholder="Select Exact Time">
                                        <span class="required" asp-validation-for="patientAppointmentBasicDto.StartTime"></span>

                                    </div>
                                    <div class="col-sm-12 col-md-6" id="updateEndTime">
                                        <p>End Time <span class="required"> * </span></p>
                                        <input type="text" id="exactETime1" class="time-picker text-input" asp-for="patientAppointmentBasicDto.EndTime" placeholder="Select Exact Time">
                                        <span class="required" asp-validation-for="patientAppointmentBasicDto.EndTime"></span>

                                    </div>
                                </div>

                                <a href="javascript:void(0);" class="modal-action modal-close Recreate ml-2 btn mt-2 right" data-dismiss="modal">Cancel</a>

                                <a href="javascript:void(0);" class="right modal-action DeleteappointBtn  ml-2 mt-2 btn Recreate ">Delete</a>

                                <button type="submit" class="modal-action btn mt-2 add-btn right">Save</button>
                            </form>
                            <form id="frame-appoint1" asp-action="Reschedule" asp-controller="Appointment" method="post" style="display:none">
                                <input hidden="hidden" id="appointment_Id2" asp-for="patientAppointmentBasicDto.AppointmentId" />
                                <input hidden="hidden" id="patientInfo_Id2" asp-for="patientAppointmentBasicDto.PatientInfoId" />
                                <input hidden="hidden" id="providerInfo_Id2" asp-for="patientAppointmentBasicDto.ProviderInfoId" />
                                <input hidden="hidden" id="recursion_no2" asp-for="patientAppointmentBasicDto.RecursionNo" />
                                <input hidden="hidden" id="Departmentbtw" asp-for="patientAppointmentBasicDto.DepartmentType" value="1" />

                                <input asp-for="patientAppointmentBasicDto.AppointmentType" value="In Between" id="appointmentType2" hidden="hidden" />
                                <div class="row">
                                    <div class="col-sm-12 col-md-6">
                                        <p>Patient Name <span class="required"> * </span></p>
                                        <input type="text" id="BPatFullName" asp-for="patientAppointmentBasicDto.PatientInfoId" disabled class="datepicker text-input" placeholder="Select Date">


                                    </div>
                                    <div class="col-sm-12 col-md-6">
                                        <p>Date <span class="required"> * </span></p>
                                        <input type="text" id="btwDate1" asp-for="patientAppointmentBasicDto.Date" class="datepicker text-input" placeholder="Select Date">
                                        <span class="required" asp-validation-for="patientAppointmentBasicDto.Date"></span>

                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12 col-md-6">
                                        <p>Start Time <span class="required"> * </span></p>
                                        <input type="text" id="btwSTime1" class="time-picker text-input" asp-for="patientAppointmentBasicDto.StartTime" placeholder="Select Start Time">
                                        <span class="required" asp-validation-for="patientAppointmentBasicDto.StartTime"></span>

                                    </div>

                                    <div class="col-sm-12 col-md-6">
                                        <p>End Time </p>
                                        <input type="text" id="btwETime1" class="time-picker text-input" asp-for="patientAppointmentBasicDto.EndTime" placeholder="Select End Time">
                                    </div>
                                </div>
                                <a href="javascript:void(0);" class="modal-action modal-close Recreate ml-2 btn mt-2 right" data-dismiss="modal">Cancel</a>

                                <a href="javascript:void(0);" class="right modal-action DeleteappointBtn  ml-2 mt-2 btn Recreate ">Delete</a>

                                <button type="submit" class="modal-action btn mt-2 add-btn right">Save</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <div id="EventModal" class="modal display_modal bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-action="CreateEvent" asp-controller="Appointment" data-ajax="true" method="post" data-ajax-success="EvenCreated(data)">
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-sm-12 col-md-6 col-lg-6 col-xl-6 col-6">
                                <h5>Create Event</h5>
                            </div>
                     
                        </div>
                        <hr />
                        <input type="hidden" id="eventId" asp-for="UserEvents.EventId" />
                        <input type="hidden" id="userId" value="@ProviderID" asp-for="UserEvents.UserId" />
                        <div class="row">
                            <div class="col-sm-12 col-md-6 col-lg-6 col-xl-6 col-6">
                                <p>Event Title</p>
                                <div class="input-field">
                                    <input type="text" id="eventTitle" placeholder="Enter Event Title" class="text-input" asp-for="UserEvents.EventTitle" />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            
                            <div class="col-sm-12 col-md-6 col-lg-6 col-xl-6 col-6">
                                <p>Start Date <span class="required">*</span></p>
                                <div class="input-field">
                                    <input type="text" required id="startDateEvent" placeholder="Select Start Date" class="text-input datepicker" asp-for="UserEvents.StartDate" />
                                    <span asp-validation-for="UserEvents.StartDate" class="required"></span>
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-6 col-lg-6 col-xl-6 col-6">
                                <p>Start Time <span class="required">*</span></p>
                                <div class="input-field">
                                    <input type="text" required id="startTimeEvent" placeholder="Select Start Time" class="text-input time-picker" asp-for="UserEvents.StartTime" />
                                    <span asp-validation-for="UserEvents.StartTime" class="required"></span>
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-6 col-lg-6 col-xl-6 col-6">
                                <p>End Date</p>
                                <div class="input-field">
                                    <input type="text" id="endDateEvent" placeholder="Select End Date" class="text-input datepicker" asp-for="UserEvents.EndDate" />
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-6 col-lg-6 col-xl-6 col-6">
                                <p>End Time</p>
                                <div class="input-field">
                                    <input type="text" id="endTimeEvent" placeholder="Select End Time" class="text-input time-picker" asp-for="UserEvents.EndTime" />
                                </div>
                            </div>
                        </div>
                        
                    </div>
                    <div class="modal-footer">
                        <div class="row">
                            <div class="col-sm-12">
                                <a href="javascript:void(0);" class="right modal-close modal-action btn Recreate ml-2" data-dismiss="modal">Cancel</a>

                                <button type="submit" id="eventAddBtn" class="right modal-close  modal-action  add-btn  btn mr-2">Save</button>

                            </div>
                        </div>
                    </div>
                </form>

            </div>
        </div>


    </div>
    <div id="eventModal2" class="modal display_modal bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-sm-12 col-md-6 col-lg-6 col-xl-6 col-6">
                            <h5>Event Schedule</h5>
                        </div>
                        
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-sm-12 col-md-12" id="Date_show2">
                            <h6>Title : <span id="event_2"></span></h6>

                        </div>
                        
                    </div>
                    <div class="row">
                        <div class="col-sm-6 col-md-6" id="Date_show2">
                            <h6>Start Date : <span id="event_start2"></span></h6>

                        </div>
                        <div class="col-sm-6 col-md-6" id="Date_show2">
                            <h6>Start Time : <span id="event_startTime"></span></h6>

                        </div>
                        <div class="col-sm-6 col-md-6" id="Date_show2">
                            <h6>End Date : <span id="event_end2"></span></h6>

                        </div>
                        <div class="col-sm-6 col-md-6" id="Date_show2">
                            <h6>End Time : <span id="event_endTime"></span></h6>

                        </div>
                    </div>
                    <!--<div class="row">
                        <div class="col-sm-12" id="StartTime_show">-->
                            @*<h6>Start Time : <span id="start_time2"></span></h6>*@
                            <!--<span style="font-size:18px;">Your Appointment With <b style="border-bottom: 1px solid" id="provider_2"></b> in Between <b style="border-bottom:1px solid" id="start_time2"></b> To <b style="border-bottom:1px solid" id="end_time2"></b> Time. Please Make Sure Your Availability at Time.</span>

                        </div>

                    </div>-->
                </div>

                <input id="eventIdHiddin" hidden="hidden" />

                <div class="modal-footer">
                    <div class="row">
                        <div class="col-sm-12">
                            <a href="javascript:void(0);" class="right modal-close modal-action btn  ml-2" data-dismiss="modal">Cancel</a>

                            <a href="javascript:void(0);" class="right modal-action DeleteEventBtn  btn Recreate ">Delete</a>

                            <a href="javascript:void(0);" class="right modal-close  modal-action EditEvent add-btn  btn mr-2">Reschedule</a>

                        </div>
                    </div>
                </div>


            </div>
        </div>


    </div>